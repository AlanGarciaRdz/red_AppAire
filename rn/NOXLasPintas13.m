function [Y,Xf,Af] = NOXLasPintas13(X,~,~)
%NOXLASPINTAS13 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:08:48.
% 
% [Y] = NOXLasPintas13(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;3.96825396825397;18.6915887850467;0.0175284837861525;0.0546448087431694;0.00640204865556978;0.138888888888889];
x1_step1_ymin = -1;

% Layer 1
b1 = [0.83300174372389257;-6.0182062367147351;1.5833705941295948;3.3106117555680705;2.3441370710007439;-1.131504499695813;1.1823342110690174;0.54587779520223445;4.0557188290025463;-0.56440064778480614;0.48091556437440947;1.0721001010689528;2.0765992905004889];
IW1_1 = [-0.29393572375460597 -2.2577150734160805 0.51054353897130011 0.042882759122018423 -0.04403449121684555 1.0985050666367047 -0.053014594034429825 -0.32443894433171749;6.128543460640274 -0.12928433009546458 0.57982227775777306 -1.0755126254087233 0.45039998148242538 1.5137827525756478 0.60770899316540905 -0.021558306791092337;-0.35049765536247407 -1.2109096966814479 -0.45550866890741776 -1.3586030866298735 3.5141679709151838 -0.39695901115386611 -0.87528422436006759 0.61558754013620831;-3.2005548278404699 0.60387825590326716 0.43639327341896256 -0.25712886063710172 -0.56686004552023517 2.233271339447743 -0.16963746210906555 -0.78465438672263765;0.19715339201014717 -0.10282732475077627 -0.57256608143247001 0.94128697456869714 -1.2443444728427231 0.9753796528861548 0.041879841260645215 -0.12875268449200988;1.56768213525793 -1.8302868027983246 -0.83348840225349552 0.045144934327623974 0.48468098503586282 3.2908445959509671 -0.14007727981039722 0.39110519014479345;-0.1579035706748062 -2.7206844436070603 -0.74947745992498593 -0.086263414278804448 -0.33560989927227197 -0.50184498107897579 -0.068066967164610692 -0.064230879696770798;-0.22173916133410351 -1.7676223815204088 0.1413284624215313 0.12167464644917142 0.15684040163593635 1.5942086437914873 0.010321393294830873 -0.10239965790762084;0.13585430623891487 -6.6461291874934147 -0.39933806900603835 -0.27749651071469239 -1.4511362754039732 -0.85123124205288858 -0.1524154798671401 -0.0618281265068025;-0.90290249944108791 -1.8963063620781873 0.99815178129517057 -0.47627678450842192 -2.6036528845109128 -0.53386983105324926 -0.31392079167324 -0.14998119682192809;3.5677740088652099 2.6464952440811613 -0.52159501786056683 -2.6069565383460347 2.0017593551370374 -1.2091072815791934 0.37042911592736272 -0.66020185635577033;-0.54579545915057071 -2.864782026343736 -0.58590985418295893 0.56847607896878061 -1.5947096208837395 -0.38731710485354304 0.4398386059374701 0.088395671111948348;1.0560991512675535 -1.916285799466211 1.9476719418980732 3.8056021544770799 -4.9595194365711057 -2.9619229549948369 3.5408453200586307 -0.017341534225195569];

% Layer 2
b2 = [-1.3667788981378493;-1.5287675209027689;-2.3148240303160494;-0.12104234814221562;-2.7213963440633488;1.6150843209852144;-2.1172055540496877;-1.8540736451600015;5.4168503861979875;-4.282189752418569;4.8332657996342068;2.4178045896807778;-2.0601387521056944];
LW2_1 = [3.56386650990772 0.25814799286679568 -0.85908845716254489 0.99770567479788508 -3.8289944358926054 1.7387390741255322 0.48666661079393425 -5.4679403688712975 -0.062174913709519067 0.28828647833373749 0.98374939516801507 0.082553057434472304 -1.4959126540303307;-1.5518603739672345 -0.42093074528343094 -0.60900533655461309 0.45353640357237335 -0.75809036207598957 -0.46296731876129782 -0.46674839908097016 0.86476547477408161 0.16831083959944546 0.26676825471325594 -0.59360583883228191 -1.4187242909602211 -0.60005153678798828;-0.14231785905717459 -0.99751302686563281 0.21712488751773892 0.25469199093741385 0.3601729960372988 -1.5887899724990153 -1.1432716638122109 -0.28963169890234236 -0.39670258095950006 -0.87925579990254898 1.03686587996935 1.4772154038339345 -0.43086305704040295;2.0001466695376244 -0.096828365326880939 0.11360050678568033 0.85048836540305672 -2.54535536866593 0.10218491628764853 -5.8627590641046821 -0.075025666081342673 3.2223930567068875 0.2894122352783271 0.42516113560567914 0.44449251302458659 0.94692097514105367;-3.750579357853717 -0.09208122822120543 -0.21696515557004459 2.1416664770885263 -0.40919757181886612 -0.23171430306322441 -0.031503006096345515 2.0000378862544368 0.47881563789527981 1.2925586591516414 0.045705092536537512 -1.4584392164272224 0.86748586703435837;-0.10425524690334161 0.95931147607254719 0.32952561922788043 0.11499104882463204 0.16063875517126408 1.2781769010079285 -0.078959971721251201 0.21914905895165063 0.023995830918653482 0.29758505645666838 0.39212885230581895 0.027320960402165972 -0.2274077846245805;-4.659565253271813 -0.34339556726075476 -0.21933764029036595 1.2388529438255489 -0.31426915813276035 -0.44695864382199008 1.1314538689563904 3.2269589076495553 -0.45908965102330823 1.0787769952505963 -0.043753350856332897 -2.0454251836568038 1.508460495309581;-0.10923861465962093 -0.8154188191232874 -0.28776658278911921 -0.062120079097189848 0.0087865639793979263 -1.3034885310041167 0.20979615287339068 0.39809420730682049 -0.039915462326607601 -0.24557552217275791 -0.46181721085493332 -0.49797375564298518 0.25746081002327742;0.62648462922309966 -0.96025407504393234 -1.4442281667705841 0.17792910475512241 -2.4171432128055863 1.0477931606154935 3.1208127106346866 1.9572082737706256 -2.0289825639455357 -0.59471628405723664 0.033780433117938644 -2.9278091812816509 0.26922739937399959;-0.38299227031318306 -0.41287807050589947 0.032696685746311197 2.4773134597943196 -0.65538785020461754 -0.67166960255370145 0.4766781160838075 -1.3882411395572842 -0.53198222558246056 1.015603506888753 1.3783110367582909 0.32028848250738134 0.92319360019534924;3.3075213751312722 2.1446955949746016 -0.056885992746392708 -0.20427354532443287 0.7367032635166213 1.4835884491810372 -0.9560808657407327 -2.5493492986493171 0.029446948822882072 0.69488106777831815 -1.050474253599375 -1.6522966840177908 0.76825731184091794;1.4311124038296945 0.50527699483166222 0.20973696986961068 -0.93459409723510856 0.18293406189819966 1.2487238308371538 -1.2502915878090135 -1.8379436345773392 0.73169352941869392 -0.095597008405242406 0.70661809374777107 1.4755320821434246 -0.27702549797144915;-2.8351045813603077 0.5249002716511687 -0.27154816581175512 0.006151743078968902 -0.72073711720694245 -0.33083315675425179 -3.1048937758951842 2.289859510962474 0.27422186749979527 1.1273479559830673 -1.8965633456927971 -0.053479409562583929 -0.92075265373915505];

% Layer 3
b3 = 1.6133511358091266;
LW3_2 = [2.4178866883301802 -0.978032174174566 0.39011630752263476 0.46189093665993453 1.1560184483391653 -3.9566439688067545 -0.82691855836412886 -5.2858695091115564 0.78814670377406282 -0.81577962250888825 0.47394433870071145 -1.6140234711961174 1.740572063769523];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
