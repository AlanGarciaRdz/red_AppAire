function [Y,Xf,Af] = SOXLomaDorada6(X,~,~)
%SOXLOMADORADA6 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:29:31.
% 
% [Y] = SOXLomaDorada6(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 11xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;11.9760479041916;17.6991150442478;0.00572573718866304;0.0175284837861525;62.5;0.0546448087431694;0.125;90.9090909090909;29.8507462686567];
x1_step1_ymin = -1;

% Layer 1
b1 = [2.1800449499801897;0.50753434882453508;1.3732421091942451;-1.1872307029492948;1.0658272120251355;-0.70607012470612684;-0.072926027509840008;1.1766261916175207;-1.4088987016137193;1.5202669021383062;-3.187793241342177;0.35414294407240299];
IW1_1 = [-4.2598986894594981 -1.7629312435600044 0.13170483867457045 -0.99651629702175448 1.5184921570963648 -1.7406251470115879 -0.86915490414504115 1.5670111067131096 -0.9549995903894295 1.9255859880172366 0.90363625234091938;-1.5886530661915028 0.47932365713620551 -1.2654934029962728 0.11988182313346533 -0.86829565662808517 1.5636157740732748 0.92806560445680386 -2.6091940008829289 0.68201316241397913 1.334696694840716 -1.11040556965323;-1.8363930226542755 0.94584262658154739 0.0071676571714426214 0.15442975790024338 -1.6231151095854761 2.3556784000500746 0.37510553420607817 -1.2162668830841261 0.64946456711861156 0.81670258703704701 -0.38909875162153951;0.73483226508935084 0.44415738212007927 -0.45625248164843563 -0.023910706415395097 0.73912620218537528 0.36728872629123632 -1.6829172691030403 -0.12643627199559909 0.30248296820647241 1.0381227636695611 -0.92092359961727854;0.78085420136486772 0.87457666561614589 -0.54525337387128037 -0.40163169683104416 0.17228441429454877 -0.93122056020349175 -0.069660927510868581 -0.040491137868822358 0.1348691898006095 0.40543558756348513 -0.16146655751636491;0.2353329327322812 1.7171020430492374 -1.7008380842775417 -0.24698279793421637 -0.11664577086583569 -1.9605145403479645 -0.69077957344259477 -2.5192052307065991 -0.32511802442754911 -0.40997468314587016 0.91184737381723147;-0.88540771680542374 2.0014204401140545 -0.38407862852390962 -0.13553143000648588 0.87306627251260771 -0.66173326781768205 0.10897134662400279 -1.0399394229004737 1.4543886936376664 0.62131566387274062 -1.6520840334720579;-0.76268553593461097 1.376656915450061 2.0441023031976266 1.0549666286236445 -0.71693622885129682 5.3105460348501206 0.10873424427220542 3.1207691112919336 1.1353857432287997 1.1103465253756519 0.55433598186461686;-1.8097736132965327 -0.28724223226134676 1.0999271006142786 -0.16212349123717543 -1.444823226092858 2.3964784037365727 0.76743306063783512 0.53056098640593119 0.35094541503340648 -2.7065983295173623 -0.45621686628889135;0.80278587778977839 0.092949633279364674 0.32170231990902443 -0.054750545294082395 -1.0619327486790875 1.2188155581075577 1.4416341440072253 -0.32504394074176368 0.37138288649037438 -0.69438524255319056 -0.56729844442332888;-0.96334219407800181 0.70698674002306561 -0.34074880626536208 -0.33696564033940507 -0.49153166427030759 0.90353350591192494 -0.039550609071663974 1.3282453350653489 0.047422818950031059 -1.6932328824067986 0.55460183029301391;3.3348163098857766 -0.64379120714499094 0.53737725492823618 1.1165517670253335 -0.49555816013012233 -1.8277155143478845 0.57102044873993274 -1.6376126745821349 -0.89650381211770913 -1.5764642107772284 1.2240062278369495];

% Layer 2
b2 = [1.5301605077004556;1.4634456401353402;2.8987363498779204;0.11734221417533622;-1.0395034670723164;1.1377913897340999;-0.22134659257662923;1.2233614458315827;-0.22101833119262354;2.0398932210979766;5.2628310278090886;3.6446964585827897];
LW2_1 = [-0.42030188546880737 -0.72706298938657843 0.0012461254189381002 0.73656941209603422 -0.52526264932342281 1.1092496401788958 -0.44631006532453615 0.78688297587897549 1.0318447267516113 -1.2563275792108957 -0.35248673687235149 -0.40188653600069923;-0.083541039244436899 -1.1483221389906242 -0.015748824120997457 2.1656845999130456 0.71643864497875609 0.47039947626452067 -1.523238540587841 0.19864574857160278 0.15244480146650152 0.56006277828498052 0.65686726037958909 -0.40017716544229298;-1.2175058083778636 -0.72135764288694648 -0.024879158451354383 0.69882069453506135 2.7377180655583389 -0.96542147102853726 -0.75277557960658659 -0.19280739434471802 -1.4438868460988474 2.2020942384705076 0.13846931275357691 -0.12479031152027203;-0.33237232331972622 -0.43802274695079035 0.2235853323042096 -1.0505185045740622 1.4481057044837224 0.024373218676164099 -0.84155965098101759 0.023422821482630959 0.66449503738631543 1.2299829589179858 -0.89975010753896423 0.38308937891524492;0.26375957156188079 0.28725477406151256 -0.27500471734882226 0.1527021254668437 -0.33026786754219872 0.021487642866882671 -0.027187422630349151 -0.1479973187761445 -0.087874254214155095 0.11372080813480198 0.065721239909113119 0.13523368177113085;0.7073782997149185 -0.85707876216363732 0.80798224627495308 0.52989417668017991 0.76740673900210254 0.97112870366283055 0.69212063298713988 -0.80014309403019845 1.6624279409676945 0.21261991272212266 -0.81008432628640281 -0.20562260188053949;-0.42182546644550356 0.36640831444815014 -0.35116351361027331 -0.30937341408538505 -0.091663094391210023 -0.80329108282147765 -0.57007855912517913 0.28694386036232233 -0.85563566397863444 -0.45461292893979965 2.0325249078870482 0.41974729402756228;0.27430362742197145 -0.22488406033273631 -0.50787481820254854 -1.3519975469919181 0.48122951280116877 0.71875323212907971 -0.25461911666402581 0.2587090606217588 1.3873314947202444 0.21092389022825642 -0.60191961369343971 0.25074513691883349;-0.38462471253701563 0.36288754438569765 -0.41516188995299091 0.62007892459722225 -0.82284831661044455 0.35523671237651144 -0.56384853416469904 0.25177234392336612 -1.0109198134126895 -0.11166377522666304 -0.10692083488185253 0.68628615459454145;1.0169768905420733 -0.48362407074357316 0.78280302874881691 -0.68000298635393652 0.12787329901274969 -0.57843755771332583 0.30644420346408441 -0.34617813406098569 0.80904967638671865 0.94044177386364547 0.95708486466345133 -1.5314360325476082;6.4546460766709481 3.367233553288377 -3.374067434252559 2.4367095119357729 1.4447839666325748 1.1307143774587516 3.8590201229140817 3.8308476493162118 2.945076707149024 1.5483777853476053 -5.5174187358374542 4.3792954900696532;0.77459012154763407 0.18120742791343991 -0.074484015126776382 -0.46801939605318194 0.67536598563601968 0.044462078616030576 0.0049084926995608402 2.7350786311098987 -0.30343091086597329 0.81223456337208222 -0.78582107116721622 0.70035415818194524];

% Layer 3
b3 = 1.9820095531953867;
LW3_2 = [-0.11000338354264835 0.083036884994997756 -1.7356936184688527 -0.087879991254942461 -0.65890355480668705 -1.0544777411577406 -1.9599244852703557 0.10872693351260813 0.22812520416513585 0.19862927567087943 -3.9188972818986247 1.2316493112614342];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 35.0877192982456;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
