function [Y,Xf,Af] = COMiravalle21(X,~,~)
%COMIRAVALLE21 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 13:56:48.
% 
% [Y] = COMiravalle21(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.304971027752364;15.3846153846154;0.0208986415882968;0.056980056980057;0.0063552589768033;0.141843971631206];
x1_step1_ymin = -1;

% Layer 1
b1 = [0.80436161623261648;-1.3523714814260546;-0.52589147751225951;1.798529392924719;1.1269217732477808;1.1169080479809457;0.85042379242009891;-0.67512165366403865;-3.4643582450087944;0.58867349522786461;0.98780555795118741;2.749448140366904;-0.85612039972370224];
IW1_1 = [-0.064614367976719295 -0.13457203843333942 -0.030541423977113381 -0.092472734825721228 1.558183309223961 1.298797491154229 0.080997297881595459 0.62071453884658956;-1.9619931933803316 0.42743932643883042 0.72785968030810921 -0.29523018774343873 -1.1874287578147471 -0.72050976366088315 -0.093905895592104716 -0.42727712558174691;0.15608476048771547 6.0698318735447749 0.10287495862046805 -1.3259032422377173 -0.30894204123500185 0.11164344959434938 0.11775748421498135 -0.059169318701245338;0.40700586414496764 -1.4715022183612878 -0.19350866883421697 -0.11579872424213779 1.0531737571140891 1.1278541581814114 0.22672486303449407 0.73920863557375793;-0.89896987952011864 0.016704868444352039 -0.39463553380576055 0.41485647883220678 0.12499325281658941 1.8999591899427815 -0.052196260261779814 -0.24016400609650379;0.20234989896576394 2.2627792712315733 0.14359025164473269 0.2924072510404957 0.20217181727023406 0.34168821272090705 -0.033276528280384673 0.054460397804438593;3.3222325557855306 -2.7114359392863712 -0.28620253665803702 -1.4894193903183488 1.0777519947735479 1.00258420619703 0.069395014636306637 -0.4357500822200584;-0.73434351819943555 -2.3961060687142743 -0.50820403323734065 -1.3543620215767371 1.3024732133534702 1.1714133170173893 -0.20254971076919848 -0.70288234492375146;-5.008185740740136 -1.1100125293536638 -0.11409688601677154 -0.045267365686108195 0.45780391095447648 -0.57887552812574106 -0.017690032722448554 -0.099288413397176159;-0.038968206764235062 -3.7631719056428086 0.008084470198182394 0.1745300394847939 0.017543408378943515 -0.45597634231948958 0.089927218394029937 0.037821028568141832;1.0329879468349812 -0.45965654456773841 0.96477952163541325 1.5877779763206119 -1.2151477227316356 -0.98711696739677279 -2.5331976908788958 1.2395430405645582;-0.056170992136825977 0.81258164514096376 0.49649387649905741 0.13491661348318307 -1.2281829143630449 1.3601278803353896 1.8510621671851586 -0.95921259587284902;-0.25918891350282824 -0.36172630059240002 -0.28120865854466803 1.068179738960872 0.31973500875477273 0.68023107952732542 -0.72382196577874025 -0.03042683916246049];

% Layer 2
b2 = [-3.273756409762703;0.9936916927372802;1.0744498823221507;-1.1203408146257559;-4.2459754276127448;-0.3233296767855337;0.25606256108901893;-0.6925824687891351;0.96825295000590861;2.3460449948050788;0.16029349630267586;2.1606816785900795;5.4262683870154342];
LW2_1 = [-0.044427529206100679 -1.5732262178595871 0.95678605430714569 -1.3969976028459665 1.3711507918061192 -1.1375265157502248 -1.2679609687030005 0.27571155691181271 -3.036011865953324 0.50470361120578688 0.54252439866050728 -0.22791387982047712 0.070694987348114344;2.1421508189651544 0.009530614404897858 -0.45454725120711759 -1.7939353311765591 -0.61048011811210257 -1.3414359659176647 0.71116189596928214 -0.84830137377897785 0.4722550998735629 -0.89430033071771853 -0.46831522604567372 -0.82963131198706275 0.19459067369252536;-0.53692304770761146 1.2371307742903594 -2.6405243829917602 3.3831491030987304 -7.0341037558074602 0.83555371622505659 -0.042578295894238755 -2.9162109866527004 -0.73620285865121227 -0.004015297527266766 -2.2955123392907542 3.9059548577263987 0.89448048074128017;0.72092126923108202 1.4421976803781671 2.0732379785156816 0.96040271084344453 1.6168778898151002 -0.91189144312901693 -1.6037867095316651 0.21069245938036624 1.7378728692386127 2.0076213699256593 -1.2065619550617772 -1.9865226258566115 0.82923385359376522;1.8604216336190094 -1.9999714027903353 -1.7434454100780672 -1.2491887402882003 -0.69635727643655609 2.9097248423204212 -0.53894495267750331 -2.0042634794577658 2.3717819958334343 -0.16735549306377243 0.94429663581461154 3.1905111062901748 -2.3668424724782007;1.2535582454768148 1.5894500000234351 1.201166724369406 -0.56435447135994954 1.466845573651022 -0.35475858892928885 -0.63136449253104032 -0.45065396404973562 -0.21552001467362211 0.54532495466121744 -0.48515232590278839 -0.50777207631450105 0.79452878798277737;0.16603727442924365 -0.30722288487474286 -1.6244201946746015 -1.6335252252053483 -1.4735461107258414 0.64814457028459582 -3.9916925127649181 -0.34328077833908288 2.3251409140262744 4.3796136777239019 0.14089284028654658 0.13026507810013649 -0.5009973674690521;0.52181510517307927 0.58290662776212221 0.83265871735369001 0.20129477250110345 0.33418290832837544 -0.26186385657493305 -0.39216556938905167 0.63858554537359669 0.9538413659874454 -0.33316299320784754 0.10080118683640243 -0.28205259423161955 -0.045208800404654977;-2.2483534988199754 -0.28259134769192623 0.038234799299511672 0.47830141700122458 -0.99591724218843103 1.4760304700691551 1.6520518457939377 -1.9779006468573588 -0.42103519325501881 1.5043589551290244 -0.95643018105263211 0.11001640312505834 0.24881603744488784;1.7165300922839213 -0.10864589887838437 1.1784160480769987 0.49927294320796461 -0.41812554851961692 -1.5358704567600556 0.35275745012942217 -2.0225076806966826 -0.1426040277281474 -1.303606038822027 -1.7665551346542301 -1.7699273989736781 0.45739368251514889;-0.8709298115605929 0.76786294337250416 -0.10686499828406068 0.7120008235307389 4.1427422244180541 0.37385890456517146 -1.2507402638796454 2.1861268132048761 0.5327663339839861 0.25323522881806915 -0.14611633635480559 -2.6019284912207468 1.6288641383320452;-0.030640722706809932 -2.1260711952087497 2.0332075298316759 -1.4704544197200704 3.0220051029490071 -1.1713366219267172 -1.2215572748973065 -0.027243262237509266 0.82911482232470912 0.97374001122379161 0.44785669878992368 -2.995160294978009 0.16064851017476733;0.49075811383556472 -0.6969164051627792 -0.59676980257547285 -2.181578265546567 -0.77314879493549615 -3.2305888454183611 0.042049022617640999 -0.03623568404508741 0.093045882139448366 -1.8074838827353752 0.36741895493480958 0.22551490953639755 -0.91648741880413886];

% Layer 3
b3 = 2.644584884132855;
LW3_2 = [0.40185429327699096 0.3846497461792876 0.16077498381920885 -0.40837239841006984 -0.091808489526331929 -0.53939558102875396 -0.19073048082613406 1.6056604187658317 0.45174704381060776 -0.24399332166858212 -0.136579909576939 0.27398283027958092 -2.7886848562446929];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.448430493273543;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
