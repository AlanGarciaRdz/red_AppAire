function [Y,Xf,Af] = NOXAtemajac21(X,~,~)
%NOXATEMAJAC21 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:08:17.
% 
% [Y] = NOXAtemajac21(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;4.04040404040404;16.1290322580645;0.0210748155953635;0.0561797752808989;0.00614628149969269;0.0213447171824973];
x1_step1_ymin = -1;

% Layer 1
b1 = [-6.1701214424192594;1.6129459997071571;0.70027956951912618;-3.0105144680969285;-0.25574248625060148;-0.80440311229878703;0.53957250973167648;0.26436083991623099;1.4720868508838891;-0.78278363726813449;0.21536313395350798;-0.049114358839376655;-3.246066615409045];
IW1_1 = [-0.21499438389349979 -0.76950538534871471 -5.9294607279690013 0.47915217522993447 -1.2046786761761084 -0.97643679394779814 -0.11323187544772891 -0.32022176471910957;-1.2442203639289087 1.415179242668315 0.35928434045460039 -0.30682805926647633 0.30059111809587291 1.1008187141379646 -0.04866695716604108 -1.0478095977421691;-0.26153242991143572 0.081064421212446988 0.21436550079188868 -0.71300778557583611 -0.69095184872178084 -5.382178490819026 -0.310701600501813 -0.939027043147454;-0.24876951200006642 4.9020065465496723 0.64908189552159312 1.0247288580754044 -0.82580075536131525 -1.6534054468919666 -0.017743904695502518 -0.087718925625711375;-0.10184504006941072 -1.2384751682241417 -2.6505926228234462 0.35471816001888512 2.6783830264465482 1.6756867750982878 0.072866130579291394 0.68990222251992805;0.10322282931503302 1.4418701090367336 -2.2752167187633545 -0.30831696149652643 3.1353407015723178 2.3857019342569545 0.47038161919841431 0.33351887106538874;0.064211715947474129 1.1564863416814266 0.63519549980009105 1.4044316536666523 -0.028355562792725858 0.67359558980472578 0.065592381477143996 0.14851594653319811;0.4212054008111088 0.43728699262551296 0.3934234670329656 0.8142489452608821 -0.43770903952371976 0.65265287522854842 0.062465616191706964 0.11120839873104564;-0.45785247164047133 1.4911506159352774 0.22518941162034123 0.52922774207195078 -0.21017186322747419 0.95926550954517953 0.044678798450332471 -0.20972495278239583;-0.24867979892262465 -2.4115554724315817 0.12886458362308539 -0.11406155388008191 -0.091998325530892169 0.0019923507768281768 -0.03706574085713836 -0.061520194366634473;-0.18138256515282056 -2.2946494512099544 0.34845120275655622 1.2191129479174674 -1.0380463872201839 -0.44235521486113799 0.25534116747999136 -1.177855894480988;-2.0757818709716518 1.4945676868532642 0.63542680274734409 0.078917575395953857 -0.23698546224116962 0.1438690547936356 0.035490852058706668 0.041709245444801563;0.42685535812570297 -2.8125282056964211 -1.5756420499292263 0.12776322758500858 1.9667466591761058 -1.7514655202087539 0.5180412910902823 -1.2158592040600418];

% Layer 2
b2 = [-4.7173910688212342;2.0621608793877249;-0.74994732534917141;0.054043042834736973;0.6198555423716271;1.3605825796041129;-0.082505670090848748;1.6928284937710809;-0.57298707289857631;0.52520224712187702;1.8157580332087297;3.542279424183997;1.7692552181498182];
LW2_1 = [1.6744224818830884 0.029800367418630114 0.22291562549838348 -0.98255408564731928 1.4189271942587875 -0.12941804379011351 -2.2566216859140393 0.99487633475406112 -0.95578624502881393 -1.6909328553310137 0.61395954280785403 0.78896605587842172 -0.10648895412630532;-0.24337053107647449 3.0027945717511018 0.45819929579093971 0.84324981386022713 0.97445844202290877 0.47053050056962048 0.45200467760621332 0.51514428852599092 -0.69269661668866722 1.7693713744820541 -1.1749770571136109 -0.89724283839278651 -1.7316569343135122;1.2390825925874869 -0.26552953156438019 -0.85332259860753057 0.26363799110193054 -0.28584020407469901 0.13485340553136618 1.280429082206302 -0.28263198690646518 -1.6222546432273339 -0.78756176088053997 -1.0328740798286997 -0.90790059193780015 0.91340327242594532;-1.2570739614253561 0.014404684452579496 -0.33226246983530211 -0.87679632396958074 -0.7142183268979807 -0.52934700365228571 0.98733113506444525 -2.2261425832928947 1.6345547395439566 2.0937798833829269 0.18772397541203131 -0.53763412322087711 -0.43358313254489905;1.5755505110506443 -0.41871368026011585 0.12233684154494018 1.1272216794984675 0.58555549671731222 0.54581721546699669 -0.13648576120578673 0.87734827979305618 -1.2781048748120114 -1.8457960148799932 -0.4248583178464207 0.091456184946169652 0.43898954147907937;-0.31279150227216851 1.1435575748456963 -0.52775875131201644 -0.28534534792929067 -0.73820998545862571 -0.35934508436204565 1.3595147836062111 -3.2399860477083049 -0.33538240574293965 1.7389239289695126 -0.17837027290634955 -0.74728462561937126 -0.2261275714718077;0.066783407401394435 -0.8412568336768832 -0.60894639472310397 0.15271290149872135 2.5356899465778895 1.1817842941037839 -0.50327993649393243 -0.82713166248607406 0.58706336281933436 1.08117936716787 0.24056871748787842 -0.53223362706413879 0.042115346462484271;0.25301194545028327 3.1945104983468724 -1.1552940274605652 -0.37654292912392329 -0.30432795836023097 0.67817196869830942 2.6749407635948952 -3.5560725861989027 0.86190917712727488 3.1914714455881001 -1.4383524169534279 -1.7045271406264817 -1.1285631943609737;0.050256544090672747 -0.069842442414998762 0.20862308385921163 0.17412096444856756 -0.85641145078634906 0.66350328727887464 0.64594002338770229 0.12681374034361667 -0.52029262012783317 -2.9395615481435682 -0.44953955534330436 0.46107754389056821 -0.46848116957907038;0.3857375138923464 0.0083716007317969805 0.13307862780670637 1.2263382015236868 -1.0520416795705121 0.7990015915674944 1.1047608291803199 -0.17845515319924785 -0.20535225241210478 -2.6279279636462642 -0.74107207087581928 0.29810580700093819 -0.44772083971469212;0.96084186513354164 -1.5113901038428634 0.36850618480004071 -2.7846757937198041 0.48025509499368441 -0.081524890630752883 1.1394132390114078 -1.3697071399160745 -0.52730393454886504 -2.9220058526384922 0.053885559820108148 0.49702419093064071 0.25444574570306688;0.70705083416627912 3.532481668095024 -2.0406154973858941 -2.4039697339218837 -0.8448283191214917 0.15819923584101001 3.2458745806227558 -5.2240083935256996 1.0132409935048552 3.2624071759093782 -1.4584676774357324 0.95654796544604181 0.022725397234712362;-0.347457809512907 -0.85895768106809534 -0.57536089177157235 -0.49665044683227294 -1.0606786658167389 0.30823378750970881 2.4868567157865797 -3.2645556060653607 2.4050471774891262 0.99817699738664178 -0.43645948855516292 -1.3296991789148911 0.14222305658997386];

% Layer 3
b3 = 0.84470335044700362;
LW3_2 = [-1.6414461349741853 -4.197803611137358 -1.1811160832319967 1.121334333377068 0.73773770289633622 -0.3224410718799271 -0.011225570493392983 6.2873131173196022 1.4010308652790964 -1.3896261869516002 -0.16413478410200241 -3.9337140242957567 -2.6812589384710348];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
