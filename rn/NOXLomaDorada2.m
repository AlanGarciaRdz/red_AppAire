function [Y,Xf,Af] = NOXLomaDorada2(X,~,~)
%NOXLOMADORADA2 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:08:22.
% 
% [Y] = NOXLomaDorada2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;4.5045045045045;14.7058823529412;0.00280033604032484;0.0179856115107914;0.0558659217877095];
x1_step1_ymin = -1;

% Layer 1
b1 = [5.5979070334205385;-0.84282013671030276;1.2055135066012828;-1.2371048455506877;-3.2674013426305928;-0.20768871042639997;-0.92072545660445271;-0.79094876601615483;-0.38217769131743595;1.5186219774561271;1.481089541244361;-3.4691393895959695;1.7437466905747381];
IW1_1 = [-6.0297677515825292 -0.26410982362280183 -0.62266555875128193 1.0218801783385127 -0.25154868322057844 -0.78024242894465246 -0.6829577453510175;0.72845410236545582 0.22681295490943543 -0.37882237712685779 -0.1830189066074315 -0.72539089486449171 -0.18965236867859103 -0.58295832339005216;-0.36610252137708571 1.9537292978503662 1.0381203294067707 -0.19555193963774559 0.7351732238675468 -0.2323845152574722 -0.77349414744583589;1.6199702784166286 0.76502448248813737 0.88234612332001461 0.18190923750327387 0.34046805428121757 -1.4995514534600096 -1.3264520530709598;0.13516676748436152 -5.9973105628118324 -0.38353825445036455 -0.56886518259193464 -0.072383701053388774 -0.35883830787633542 0.14578992008065866;-0.17628461940854517 -2.0465465392234061 -2.4152790492354899 -1.3722307771233806 -0.87258290927745774 -0.29392626855249188 -2.4156068769369266;0.35192016737606863 3.0147739287265307 1.796276747954928 0.76757327724201996 -0.041408779672477816 0.48001213578828117 3.0022764466076755;0.70583856466403661 1.3393866690660383 0.093240210549207142 0.73954859531933925 -0.99680647724505045 -0.29153807681308302 -1.7615361155341993;-2.0324968612356669 -0.22423780004202423 -0.67707406284204574 0.91255591880105325 0.93062921548683841 0.87670792920082663 -0.66358558639591259;2.1154229602109367 -1.4251431471491409 -1.559218139272617 -1.1206111343040333 -0.33612135393056214 0.63031500982718935 -1.3090899749321281;0.075501931398668287 -1.0401059065659479 0.39440499346827596 -0.4294322373618325 0.83814721214749699 -0.044811818529407098 1.3461956401895827;-0.31759138957864907 2.3990811011415771 -0.88484612691483733 0.70548967426034404 0.61823116242693732 -2.4011416056045491 -0.83561193684223312;3.5052753036420308 -4.5094452059204189 0.65178660619886075 0.007503457229169644 0.61880313001589971 1.0836419066263487 -1.4878810750579816];

% Layer 2
b2 = [2.2516699440796564;-1.4486191242564583;-0.21500504562638564;1.6837861941488554;1.7931622686280591;-0.90221116126957845;-0.48102053866058525;-0.85408540391212362;0.83009538918531733;-0.31798514571986991;1.7282946881533059;2.3399646918447798;0.68933014725608044];
LW2_1 = [-0.37493725337753825 1.0517191875493388 -0.043528805683232738 0.59520394912319763 -1.2966948262256337 -1.249622634044053 -1.3634488273691108 0.037539929003558167 -0.067049691240199771 0.76825267764098071 0.56346820422046862 1.0771431738270472 -0.72414958121846484;-0.13689385851904889 0.63817856785433924 0.036649044939524464 0.16212454273200283 -0.15612959363001838 0.82152763214862601 0.71990281134811718 -0.027670859545796705 0.42661443249574904 -0.99660946420826391 -0.76946483944960398 0.85206984485125903 -0.72635362468154574;0.043416416458426567 0.2369207283918818 1.1102764706393078 -0.62910418428264148 1.2194332310733227 0.25296840888127792 0.6889982739884345 0.42078804279738558 0.9100993419973783 -1.0941489304794096 1.2719739959093443 0.11779621762507644 0.86488478652541401;-0.72623523861202877 -0.11419256944746577 -0.33883151533577832 -0.57031652990576165 0.31201569076773034 0.13716914369772409 -1.0365586376104854 -0.79831577009580268 -1.2711236201384535 0.52209678466948661 -2.1366092808978681 -0.25032560398590636 -0.64029360188797879;1.2352375903978063 -2.1050138672910497 -1.6818139380991692 0.36775691366346414 -1.2213585931844926 -0.29449239819681167 0.75894597250466811 1.4803343708183454 -0.12760397717341046 1.8921267691942139 0.44741500432723658 0.28419809202179691 1.5070152944663582;-0.50606969526295575 -0.64760243349942592 0.57189469192076947 -0.52253740673601945 1.3498705742998798 1.7942964481275316 0.40267673852169827 0.96534173382262756 -0.43445327263323097 -0.92377728746708987 0.68779393046328297 0.27462316442481582 0.28516762998130585;-0.19258370845276299 -0.030720846137509403 1.6269075723081894 0.14556338553355447 1.4128616175824285 -0.17771907349138971 -0.31935331924902116 1.1800146353357457 0.36452032082891306 0.19099742225730756 0.93120304547125132 -0.49273889119177633 -1.0135251812568555;0.25353465309326872 -1.2157567811455687 -0.50425658180885302 0.029268086938469842 -1.3281320708226965 -0.66583912723259264 -0.63993814634788238 -0.33728623597814228 -0.25996566548766575 1.3680715063415558 -0.50994171858117543 -0.52331322462272856 -0.0089028563028938044;-0.17848256201885432 0.024102856436069325 -1.5021054329721151 -0.50224265233634013 -1.2052754046863772 0.20022878912344225 0.26353350852143054 -1.4057081500254702 -0.46572131420495466 -0.40831645951978068 -1.2198115037856154 0.6074914090244522 0.90933754980046733;-0.72947299898857165 1.0448194767720875 -0.12868468808055528 1.059555681823944 -0.0036898658802432573 1.3716827573143213 1.5937174814998176 -0.42105803977088035 1.3899174114629311 -1.0438548609686715 -0.42489163832096161 -1.7641371300904858 0.9371501855197808;1.0166680418388092 -1.6409290009870983 -0.23450455715563803 -1.0363069607248583 -0.3906023427968105 -2.7902165146894591 -2.2194414532621547 0.16907068603468917 1.5105698381927024 0.95141113270516509 0.42117720788927071 -1.3723456733372028 -2.0679134766259417;0.63926789020585473 0.16064939272047812 -1.4105222827023027 1.5364972910771801 -0.97410962496782005 -2.6681179045073944 -0.97705416457759509 -0.42447076721223587 -0.83405075214120594 1.946735839621077 -1.5368373738668959 -0.010980172977712574 -1.258895542404483;-1.1692485711281753 -0.74612386275191078 0.25195325823700193 -1.9936775910912321 0.4243052042254018 -0.76094074714312299 -2.0224672044357885 -0.53947371409042133 -0.63983289259466414 1.3271046515552911 -1.371762406612784 -0.74705693203315571 -0.15509277717917366];

% Layer 3
b3 = -0.015603593040658899;
LW3_2 = [2.1024550104175508 0.7699591836012134 1.8679789446235089 1.7652277109013543 -1.8126449039915236 1.839190593781457 -1.5986956618241475 1.5436624188598203 -1.6124255318057905 1.1139391471074775 0.90703603433792734 1.0150153031354723 -0.89578990969738748];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
