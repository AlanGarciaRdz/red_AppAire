function [Y,Xf,Af] = PM10Centro6(X,~,~)
%PM10CENTRO6 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:02.
% 
% [Y] = PM10Centro6(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.281968137600451;3.74531835205992;0.00773694390715667;45.4545454545455;0.00462534690101758];
x1_step1_ymin = -1;

% Layer 1
b1 = [3.5433489870925601;2.3709147670473349;10.779853256752085;-0.29503091569471679;0.24878331212555477;0.75488258819589915;-8.3320543986879727;3.0456647109899908;0.30171172456690915;1.9565131725759699];
IW1_1 = [-0.50628296472375744 -1.2568990930322717 -0.4897088894689563 0.4348859321436605 -0.49044420563945357 2.546154346081142 0.063678426923512971;-2.2052493532262387 1.026059693392853 0.78548877509082904 -0.31837576020115571 1.9047292832167233 2.6563120456715974 0.15705220366217809;-10.230172388638159 0.75768501587548287 1.3038400480656662 0.70124833662144104 0.010503749720856791 0.86227589218327838 0.87659572501665373;0.2790591365824221 2.5946404537728083 -0.081613671125511364 -0.2789537524564677 0.23984117562308974 0.062325575170506041 -0.35785291484862308;-0.85914988633435552 0.53770877842560993 0.353325975394778 -0.022993265493786805 0.18122197060151057 0.50629989649367468 0.045109351867881647;0.57260087542209759 -2.1651237044383347 -0.7030499296752567 0.37686653364055878 2.862021779413161 -1.3996297639950541 0.013547202874583598;-1.281075223191988 9.1058761234582413 -1.6522611038616801 6.1878826324555964 1.9796776589964145 1.0366625960606828 -1.6509108950294022;3.1103838195887272 2.3791076391971107 -0.62312065587732512 0.18576754124867789 1.6145647740733171 -0.23704597853912887 -0.33282236949738708;-0.024746423777190114 1.1604237919375482 0.075179016868601831 -0.20459313477143987 -0.030891514898435304 0.51149452149637853 -0.038473278481316049;2.4919833026017777 -0.72018883479133888 0.087336351823827194 -0.18545590428079539 -0.37018259193502662 4.2740814842894572 -0.47454099351132106];

% Layer 2
b2 = [17.829558741769617;-7.1612163792978158;-1.5047636885716547;-2.1451264331125706;-0.64235433197265157;-1.3688806891185039;-4.3128917802154234;6.0534174716013043;-5.1869815402171788;2.4227020632104033];
LW2_1 = [-3.1770827543573006 1.6039930925019561 -11.634631901810316 -3.3981918266626745 -2.2808074656908452 -0.083081609528342551 0.81286772200988389 2.3418806107189263 0.049517799204322921 1.5272394940803897;0.3225711103270576 0.34986461304999056 5.7586844477194985 0.62479927023639537 0.70432198155275383 -0.75093899560275923 -0.84756797810344042 -0.55586289621882512 -2.0949724943533594 -0.3754502120627658;3.5447434857902258 0.58276014051638858 -1.2894312155177206 -1.7372268457585138 -3.4654457478140022 1.2408263946856255 2.0931560507627811 4.1573179608498361 -1.6001815335648248 -3.1616741902493004;-1.185107106680495 -0.66786500609881738 -0.63010048365116467 0.84556156093587975 -4.6124269126511201 -0.93892007826900437 0.23098752252537741 -1.7253380353139807 -2.2478502188549001 -0.1156646149470458;0.2719067297006213 0.6756530352188973 -0.28215455401170342 1.0126920748192367 0.073149382402457247 -0.786920624643629 -0.64324433972056827 -0.81668032635877286 -2.6058478763685962 -0.38008701598370009;-5.3077160166587749 13.111348146058171 -0.93662212646356036 0.17085889597299492 -6.9597232617589562 7.4510634573080541 0.24305217828472667 1.6200202628011322 -8.9867962086719118 -3.6846718127785363;-1.4234489082662913 2.5727121755494906 3.2424928619467104 -0.52702786108443345 -0.96708226497660732 -1.0708510898473429 0.30139054401146742 -0.15208947156891101 7.7184914330986798 2.6724895692337434;4.0309361940176673 0.79219940775511744 0.53660618440153995 5.8194935627138635 -0.11848060194402497 -4.4863154689980904 0.39789970987350676 -0.42272181766624989 -4.1711668122528511 0.6645345625941016;3.2175436508149691 -1.6068393074624112 -1.070089812033479 3.4418792631933672 2.2929528194436313 0.099925528986955781 -0.8355675897613033 -2.355487884149341 -0.065617310663734038 -1.5455224543691481;15.162166774550986 4.9933311808432759 -11.091862245015944 -10.013253509011037 -3.3629165275686663 1.8071695360674305 7.2091937038614846 -4.286637579696329 25.251469752125125 -10.554831635663028];

% Layer 3
b3 = 3.5081422091655488;
LW3_2 = [15.670678891427713 -1.4893505603305854 -0.093374487411427176 -0.2764908942452281 1.2743131062982886 -0.044294400645909879 -0.081788930042418689 -4.9527383193650225 15.510227157690796 0.096000531454995625];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
