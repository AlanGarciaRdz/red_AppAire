function [Y,Xf,Af] = COLomaDorada8(X,~,~)
%COLOMADORADA8 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 13:56:37.
% 
% [Y] = COLomaDorada8(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;17.6991150442478;0.00572573718866304;0.0175284837861525;0.0546448087431694];
x1_step1_ymin = -1;

% Layer 1
b1 = [-3.5185803821837696;2.1383108707755354;-1.3542481167121392;-3.316379894534017;0.27904121340695465;-0.0019785381162672651;4.6754633033750865;-2.1934019834742178;-5.2703663864156951;2.0967308346731728;-14.121635766068085];
IW1_1 = [2.6432783255916132 0.023716373634249666 0.61220583408117601 -0.085094717265554093 -0.76880824595403086 -0.44671743653940782 -0.034700406856230867;-0.82225018678680195 -0.91379649031442567 0.87953683943380723 0.032933086789621084 0.77264577814128232 0.23189924821793162 1.4070658879116316;0.036138764347354906 -1.1735972028080532 0.031049466698639588 0.11055030783628157 0.11849017597280349 -0.088455633491814317 0.049443714211157633;-0.64704649497227651 4.1902055344479976 0.79857557640779475 -0.04979108850376944 1.0049159361280808 -0.15049897521624345 -0.0060540001987906926;-1.9665059058164502 0.6540831563492836 -0.3108882925774154 0.51360800789171757 -0.835134497371539 -0.25023580894757491 -0.77891659746075015;0.71273390445152141 2.1576297183070214 -0.82758340916540685 0.54497613740363215 0.5388302769524167 -0.031368952301413532 -0.011978070414299824;3.0257027105343615 -0.052768376887150595 2.5676417357441697 0.35957856803904004 0.46483654382217454 0.9351344527205373 -0.20695802762145971;-0.88914422277821359 -0.59956342708714072 0.19160035133522382 0.23866729584769839 -1.5165202013963022 0.68144946505057258 1.3581272835714047;-3.9633366773733991 -0.022671737332183771 -2.200885058472831 -0.35896254515718407 0.47658549238460107 -1.8730698733347328 -1.2867938354091373;-0.011341711233451623 1.9903210616773082 1.3361724811053521 0.34701322002870344 -1.5667721788866373 0.85702968381340427 1.2342832075056775;-18.248000390220938 0.73663675153922437 -0.49944932587603663 -0.42768145212544806 -0.041728663454698056 -1.3449693380773884 0.41697783261959043];

% Layer 2
b2 = [-4.6580702558179592;0.35545388774778336;2.7409788000758826;1.0371698360105546;-1.759055635919101;5.8131731318524249;1.5536110019562677;-0.023397060289845679;3.8979813094985221;-7.3245920859790328;-1.921846472282438];
LW2_1 = [-2.1723933911091242 -1.3272902201734369 0.96183036043256886 0.28652953084493638 -0.38421154712400335 0.23535781434820066 4.1340658452784309 1.7883846003619253 2.3905509394086026 0.08790659944113656 -2.8831648473376865;0.92221576747059575 -1.7300320406989078 1.3104297742418591 -2.0239462805559558 -6.0548217546411438 2.0259721298343027 -5.4189712303202331 -2.6107489499587668 2.9527824479666056 -3.0018425718375186 -1.3575365864357509;-0.153520569153416 0.12026466880425422 3.8722680684250261 -0.82693343353518267 -0.53580563234075584 -0.8880313854069134 0.45077138332631589 0.23534756863328385 0.20642921705525344 -0.25215530204297992 -0.17989509699508818;0.84411787314928832 2.7210727042652407 -0.22467245114252535 1.5313519665579225 -2.9233319017730173 4.1710418134777445 -0.80182247708444843 1.3457989801933747 1.7803941913190136 -0.13533677494034088 -1.8495281844384868;0.37315359747649784 -0.20226953631920153 0.084844832869861497 0.61703200266938962 -1.2063432494083797 0.46957117105305307 2.8521914808602244 1.6176965754299835 0.012943193097068685 -0.49253703579486846 -0.40006950383280798;3.5526976492274804 -0.66473478477345194 1.6499523483506617 1.4693366034385746 -0.55400216731397822 -0.41101341634253247 -1.3703885231144401 0.20560886161024383 -1.1213967238313935 -1.0740889713281871 0.0091661035826818716;2.9632713224564915 1.4680172305951324 1.3999627941038986 0.44315374600898105 1.0507153402237119 -0.20838091802580649 0.029259499276865712 -2.2360383133763557 -0.67759801948811671 1.532617911023481 1.0678210558087984;2.1344289385735609 -1.087912373965596 -3.653903429657515 0.44499653595458794 1.3255587731641623 0.64489529662040912 -1.3082960795120966 0.28422289665535017 -0.82630022048584828 0.71885088579462986 -3.1958395244616655;1.4289988645618155 0.052882292233920429 2.9421301656360597 -0.67809117118977724 -0.62127123078070934 -0.76633678958872142 0.42652430435774452 0.29937437926648747 0.25242545900500013 -0.30623313078199282 -0.24086171205876322;3.0679414605405606 3.6764631491872266 -5.2627461068003143 0.44423627956910428 2.059649067313186 -2.2676098502374247 -0.94147516253029784 -5.3669372317187971 -0.47169164206380065 4.0828332818764874 -0.59822816637126519;-1.346033605061542 -0.41527574133500122 -0.86619121236743146 0.88352147129147485 -1.5985577173851502 0.32822523497111122 -0.14896318258266716 1.9796103430346714 0.18333190492558588 -0.97507895384747867 -2.3725790029843186];

% Layer 3
b3 = -0.32378811370934296;
LW3_2 = [1.7973060258291951 0.48851704023958692 -2.3214931022705101 0.054354256379177325 -4.9221938384087807 0.81253874061553122 1.0559371127281008 -0.19853149509817919 2.5395513367306153 0.40487283586302314 3.5318379695546298];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.448430493273543;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
