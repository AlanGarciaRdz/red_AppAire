function [Y,Xf,Af] = PM10LomaDorada11(X,~,~)
%PM10LOMADORADA11 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:11.
% 
% [Y] = PM10LomaDorada11(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;3.96825396825397;0.00572573718866304;62.5;0.00462534690101758];
x1_step1_ymin = -1;

% Layer 1
b1 = [3.1291576423762306;6.0475798330969326;-3.9435366425196681;-2.2321631739552554;0.84492667535914046;0.54655159109739271;-1.5774908387577251;-0.016925858887244821;-1.3487924908632567;2.2564121197556775;0.7237366745799737;5.2411665774143819;-2.6702323991307653];
IW1_1 = [-0.49532743409125968 0.23988942577466912 3.2209440112724579 -1.7612657860330498 -0.57532077251806324 -0.12924805825603589 2.7135324610901868;-5.0741159924517101 -0.10923883312543972 0.41822379517703262 0.14411644411533187 -0.28072323596653359 0.99951332295012962 -0.56372429044426464;3.3145008309899722 -1.8892290603670865 -1.7092417939031719 1.9526816929466231 -1.2026146199181933 -0.24555933936263222 -0.19523926924370388;1.2123073619207088 -0.47586458683501859 1.4757158896577445 -1.6939572292501013 0.21054736999752996 -1.5130799845009066 0.24167799691060377;-1.6338544676093119 -0.68116661841243942 2.2532932574374525 -1.9355107834355152 -0.25761449176953222 0.009295129102195189 -0.6202207584999474;0.70859404237485324 0.90335828688942776 0.86095968653572685 -1.7532857663927948 1.0742783165076815 0.34991692921024642 -0.29486657588804838;-1.3579129182308398 -1.6904511343489765 -0.46941600105530862 1.0260088829531024 -0.98462381549883304 -0.45418572211244729 0.27678629227832685;-3.5728971827713933 0.39389354166291796 1.2711295850473183 -0.18133557293191427 0.14125719458537606 0.30608642779828443 0.88802000082505284;-0.31741793187858686 1.4509950444898145 0.62663490029326108 -1.0493595616844829 -0.69195608804594255 1.0397374517033109 -1.0568008019577699;1.6529818157034724 0.8803900804912953 0.62250756050559286 1.4458762903640938 0.91482951666935552 -0.12629015818415656 -2.5921441369335509;-0.8050197507868837 -0.72936197454437834 0.17340290427793592 -1.3379001025538428 0.78261493684060657 1.5802805548493628 0.36182854464340897;3.1901081902186381 -0.12963024138628507 1.1070091181701784 -1.638464791943629 0.041765604684396052 5.6821797793946889 -1.2515188229013987;-1.1335161771945701 1.0603709093820757 -0.19600106410622561 -1.5619402828483515 -1.0550548998059461 0.53004211125824463 -1.4693809836602971];

% Layer 2
b2 = [-1.2972762441929984;-1.1948368255016306;1.4926860717193873;1.2891405887830132;0.85447478297910096;2.1089749836307541;0.65375063460802241;-0.42570190599106833;0.27891434227712614;-1.2238159664506456;-2.3504140904324746;-0.41025094760520003;-0.20758982915151514];
LW2_1 = [-1.0467771918798885 -1.0340926571506004 0.18887879044157704 -2.5857728058858092 0.86125035116731474 1.8456172751045863 1.3732468359195884 -0.066653955515602589 -0.52300387475942345 -1.4943607550449785 -0.5703669938647844 1.2920499049283298 -0.74777455330754472;2.3461993663520961 0.40697032173600312 0.23131462562842467 0.34147102716051086 0.61152924476846882 0.1705466315108484 0.61201539583404696 0.72728140177771106 0.38002028725762671 -0.10767169366966678 0.1132312064549567 3.0281995272440039 0.60508274403182227;0.20023344872466028 0.74144481698769249 0.32101942556279928 -0.09687713333091505 -1.9075149258848965 0.93270761294654825 0.57678679244981623 0.17623006768594776 -0.36956253690196594 -0.0051922549250953114 -1.1385964595488975 0.17301286354687359 0.32613675873907949;-0.025832828461181161 -0.36354233471680153 0.43953267703278681 1.0209134514871827 1.0236065426457177 -1.2189892484868341 -0.34878149714719348 -0.57907959902519257 -0.71795276327106183 0.83422159706307109 1.3761449651549986 0.27913838870463131 1.0142982883650802;-0.42757147325489764 -0.83570532602613246 -1.8449241351283545 0.10099949589152819 -0.43611423999275378 -0.91532253508825434 -0.85999765207921974 -1.256953644007174 0.0021165830296950121 0.10434814338389675 0.67881638862135707 -0.46775314052419042 -0.45629896833522327;0.11134471960292855 -0.73785449944743808 1.646438361069245 0.70028336848045103 1.3413438863633953 -0.36163528653418187 0.35494351855457623 -0.71564002905596991 -0.91736024638877089 1.0322917248032037 1.3008928719030588 0.21927638745378891 1.3300512345898783;0.3771677935003746 -1.8621217139461335 0.84009438802174596 -1.3477563640267698 -0.087545430076178016 1.0521321823278011 0.7367932498849401 -0.068801632204092161 0.13845059857691286 0.15837176225444238 -0.33337152531913139 -0.020880034574262667 -0.05491387497896167;1.498260891526046 0.55050188809683109 3.4743300024707269 0.69608656374939881 2.2507032464483627 -0.058347002306761875 -2.5068981633289291 -0.3336958074205234 0.29982372879803049 -0.70849398838361544 2.4500491363566175 -0.83259180181005488 2.5160618164279298;0.52899637548757095 -0.12764477472665131 0.33321080989491053 -0.57040880363417101 0.30049975511211013 -0.12888026240210959 0.088763405753366095 0.55302439178886276 0.58113415189121964 0.60727220981420604 0.9045817102212983 -0.75106321178501834 -0.12711333828142435;0.78755333892477397 -1.4653570027413563 1.9410959429974886 -2.3127346887952052 0.17482656438420288 1.7690837342967343 1.2862293090925576 0.30978227253044677 -0.25919482152670076 0.29588189230681472 -1.0650850354594339 0.81442500989322197 0.45368573450583588;-0.60464075622463598 2.4431461037901769 0.3787035723060862 0.19209103799521404 2.0144561210188696 -0.022634365379856324 -0.77718203329853797 -1.0401514406182129 -0.98850945258068934 -0.7035845378852128 -1.3745240318454963 0.21858579424923888 0.14988612948622959;-0.8394803243938046 1.163313977143579 -0.68821197064107997 1.5385244919550416 -0.36638870153380115 -0.99666307820094779 -1.1546222766114136 -1.2226656968628986 -0.43946037398886906 -0.56760105610372869 -0.2101020460717099 0.20650855789115397 -0.29725193621441692;0.11015446895863613 0.61277018992769472 -1.0006592402221508 -0.27103478314477969 0.33244521086635281 -0.99485330022636287 -1.0490860101330717 0.81602191610884245 0.10941082868450377 -0.18140077572297977 0.5003108305721079 1.133926057396204 0.037348851290847307];

% Layer 3
b3 = -0.5157576056351667;
LW3_2 = [0.36623458438587259 0.21600984666823378 0.96774136113222098 -1.4908366232437638 0.89178280736985371 1.0301588730053708 -1.8478615727435321 0.10571966788453706 1.2351458736897458 1.0287664830873229 -0.57620793511083701 0.69586063213608873 -1.0686376253927885];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
