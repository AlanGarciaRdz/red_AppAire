function [Y,Xf,Af] = SOXLomaDorada17(X,~,~)
%SOXLOMADORADA17 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:29:33.
% 
% [Y] = SOXLomaDorada17(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 11xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;11.9760479041916;17.6991150442478;0.00572573718866304;0.0175284837861525;62.5;0.0546448087431694;0.125;90.9090909090909;29.8507462686567];
x1_step1_ymin = -1;

% Layer 1
b1 = [3.6059287574966614;1.0803074271732243;1.3895979037650925;5.1514685446559865;2.6340013349881648;5.0329546363874709;-0.70819761028933026;-0.0537596565580786;-1.8228569716269494;2.2220446954225532;4.5933510251104179;-2.4536421725212132];
IW1_1 = [-1.5883774497574743 0.031409127606647443 -0.64271935414649894 0.1052714346935268 0.20863733747377189 -0.55883702381134859 0.044639595759480524 -1.2373479246240509 0.097412311141757774 2.0134299037029764 -0.04748219772149765;-1.3805972873759946 3.1781981261642804 -0.39738173037331742 -3.8192938120804998 1.1951351562167949 -2.1239767329834756 -0.13174065360811274 1.3509139249455395 -0.41953585817432398 -0.53261799203548055 0.19955186786728438;-1.6616695744709709 -0.94784086090548614 0.33633532918182807 -0.91498190793261458 1.3800551746771814 -0.1160480232331644 -1.6083041080318048 1.155415492105867 -0.73098961267697382 -1.3037262142463797 -0.33721267918788511;-8.8907352727306836 0.12624689855862872 -0.35320226863276266 0.7160683994075655 -0.21368076887828508 -0.93450953008696902 -0.5706751268405833 -2.8748542380032309 0.35547688168440517 5.145622569672156 -2.0095744077700624;-1.2094599684473128 0.14569205051113868 -0.2806183744906548 -0.10090723438029664 -0.55425370338880198 4.0838126408146618 3.3688994938491281 3.3235477734397203 0.17853558613890791 1.9601732008920343 -1.046738068835247;-7.727926821103746 0.067130003378429684 0.49155069437533727 -2.0696320874441212 -1.2652611208767197 0.81627915270023177 2.5537201787808379 0.31173122092742273 0.15838066109212834 -0.98497117646255639 -0.22659805641898298;-4.0774381026016338 0.022317087160155354 1.2029370434975668 -0.0093092929981209247 -0.60097340828927337 1.9081289027359039 0.93203092335969639 1.7774161157149002 0.48098463546697651 0.39204358605723105 0.086785249654434293;0.086956324577829369 -0.078750128277767076 2.9938961185369903 -0.61545652535620887 -0.49586027870221511 0.74954829676667467 -0.60054470807489335 3.2023984345717449 0.60103996996238485 0.68080072845068063 -1.4232818934753739;2.5558523520289538 0.1455206461351741 0.78385573635229677 -0.56741576773678837 1.1062074771784278 3.9823269064954818 -1.1549216583666977 3.8215970488687527 0.2694058335228191 1.5223425059146418 -0.65816332660096166;-0.91021413359054826 0.74972729052947917 0.9222129853630544 -1.6740978205230983 1.0044455094742475 -2.079731537800539 -2.4473189919254721 1.3271313077974503 -1.3993594116440058 2.3444442637979428 0.50145200802097611;6.8438456718422218 -0.034326583461620347 3.1503199862115432 1.1986028292599222 -2.6044239491542793 -3.7972486983992004 1.3538874087851636 -4.2705530292560692 0.70340065341556157 -1.8913111638314908 3.2755030470458446;1.6381709142421159 0.033123053599857663 -0.9939012623572272 -0.059038819752248742 1.2623840546594374 -0.15917621801610968 -2.2165448252790352 -0.27423760354735016 -0.34592990496955139 0.57760790140752194 -0.49873681892674693];

% Layer 2
b2 = [0.89170205457411422;-2.6702802160185852;0.99900425289468597;2.0130560069187857;-1.6709367457909354;1.3722209038461006;1.0542827736887137;-1.1497252530066138;5.4536772312206665;3.0266707939762147;0.72312531726932827;2.8477603841229002];
LW2_1 = [0.32817045177052473 0.14246803541327552 -0.26652239362312358 0.20813761717846835 0.75167557906635118 -1.1012905870000871 1.6821493417984461 -0.14481462252227092 -0.78347030706069609 -0.28312892407105034 -1.9065182701255246 2.0066119270001894;-2.7863628139477279 1.5710691928211156 -1.7173715752634555 2.2018802762482204 -1.7819755021958275 -0.21882931727679039 1.1954805745368762 -0.2684239060357444 -2.9991980027038818 -1.4452140244000775 -4.3112472210332555 0.35025260751806198;1.6507703120925226 -2.0736087715262563 2.0315689280564695 0.50509659408919039 1.8598004364399709 -0.0075445833049601072 -1.1457295077364842 0.26911804905870851 3.1052524493658926 2.2383753980274013 4.4204225119295959 -0.48579577142060926;0.58141260543300577 -2.6300476538219839 2.1541592936349305 2.737954795500023 1.9966454144627372 1.1844357507174863 -1.7137761678742711 0.25722206473678166 3.4410373593363035 3.0484936914263714 1.0460738807076602 -0.61887555944921546;-0.54934940039027091 -0.119212065231738 -1.2910930374012515 2.2379637345148202 0.16560235772798218 0.56204208795152188 -0.41477713887745282 0.50008911879747731 1.3134111651732037 -0.076629534897539292 -0.53953777033114336 -1.7670903775357192;0.62255153898911664 0.32896882215391571 0.68793116594901582 -2.1321640905124113 -0.19209070898246872 -0.25844759744849238 -0.007187427599791167 -0.46114331533986014 -1.414642298805793 -0.17682400507173726 0.5400992740526892 1.5806146850231271;-0.5586532614976607 2.5704020333393527 -2.091833994583526 -2.715271086398741 -1.9627420326537819 -1.1776776966268421 1.1191298182622293 -0.26574880410982193 -3.3746631249565411 -2.9638531667037813 -4.6687877209038868 0.54080585984314644;-1.2010667279026672 -2.1727633210901911 -1.8361353313541862 0.72211491186907428 -2.8904777339657182 0.10907069590678933 4.9403586784766791 -2.3105775559442967 -0.53166248987062703 -2.3197448092060315 -4.4464858951513007 4.0561402793589689;3.9855729459211586 0.87848819283267465 5.9760087945563187 0.081704497913894225 -3.4576054518184498 -4.7000845120523405 -1.8140929362091245 -4.0012457294854098 4.7440635145958749 1.196365997870287 -7.3802323111127528 -7.5689065847400725;2.0277127615492336 -0.79095286396837305 0.78104608723381663 -0.033316782753312645 2.0296354462146735 -0.12482766716126385 1.0050520391578361 0.40817068460290423 1.3770550941219768 0.8996068476804806 -0.22485385972512414 -0.062965843628875556;-1.2338095970239944 -2.2808567890894946 -1.1099255020093433 -0.13183810821318945 -3.5781578966174084 -2.4040321705191903 -0.006987988858312858 0.75536746567261737 2.4374550399327184 -0.73185951335701416 0.86963691982953595 0.93025020392368707;1.2941607620571338 -0.56377207294954745 0.94329333571442364 -1.9816136645842428 -0.34053352968549494 -0.010772244396543134 1.6567451313734887 0.070515248930273347 0.31171187816759854 0.78380835056824583 0.7932246458371357 -0.84911307013710291];

% Layer 3
b3 = 1.4891479432494092;
LW3_2 = [-0.082789281468736917 2.8375286978138643 6.4690440624303571 3.5256062136146382 -0.33534819466437105 -0.33200323403000165 3.6177344189764273 3.0397328724486914 -2.945359213140148 0.19970892115825969 -0.018489420753868918 -0.27587570317097587];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 35.0877192982456;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
