function [Y,Xf,Af] = O3lomadorada5(X,~,~)
%O3LOMADORADA5 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 18-May-2016 13:05:40.
% 
% [Y] = O3lomadorada5(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [1;1;0;0;0;0;0];
  x1_step1_gain = [0.0869565217391304;0.0384615384615385;0.290275761973875;3.96825396825397;0.00572573718866304;62.5;17.6991150442478];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [0.52363932838135507;2.277606802895364;-2.1139345754086194;-0.35319393914481573;-0.015425533768927449;-0.031403856203164313;-0.11622746532600396;4.9498111356706254;-0.95711447979900355;-0.62145282763779319];
  IW1_1 = [-0.021263365748372762 -0.032091471010170076 -0.015043857797890636 -0.010008171921155077 0.0098141762593753623 0.014828957047060011 0.27100471645675411;0.29735064270701511 0.054784788943738977 0.19017540999268345 0.06446169290123345 0.17381058124871826 -0.20429974406530824 1.4976720535665462;-0.035860884993040409 -0.089766316466598342 -0.4646835474854254 -1.6165012700941994 0.68841168452254409 0.55857451058232743 0.92017572306806883;1.7465537281657273 -0.075865384502351599 -1.1571337381749387 0.41215055546835749 -0.023421245600341145 -0.249151428533918 -0.22984084294653631;2.2218986170607442 0.0012236358228400602 -1.0416649565572862 0.71897016109625822 0.48526899895913117 -0.21245913863034283 -0.90545328862965835;4.1492392955178232 1.4841885618153206 2.2197306429078019 -2.4849719081465 4.9451662598727273 -3.644548547315047 0.188556481751076;1.8258939764564841 0.53013059182509881 0.33719103334610234 -0.3303279390865187 0.47761890237557009 -0.014480054285763957 0.41122973495032311;0.060032618569370158 6.6661473229695813 2.0417728240795778 -2.4697148859325666 -0.2670804358094091 0.26057735205104737 0.089597424752426533;0.88995909619675639 -1.3698409159466576 -0.35878847246916784 0.16902741536396307 -0.11459032057526221 -0.0305712439520756 0.49444718737137949;-0.97182773898109631 2.0328966914583666 -0.38732950892315621 0.18758004813772769 0.089379375987314463 -0.67131173906358299 -1.0147092939955267];
  
  % Layer 2
  b2 = [-1.1655341660607972;1.4745320956079762;0.19499960843900738;1.0770153643131744;0.34357074525550046;-0.75046761053565614;-1.5200904072202803;1.4062921071104693;3.152156053426638;2.1234342207801453];
  LW2_1 = [-1.1463360099023887 -3.4555802857082014 -2.1036741860397234 1.836021819241471 0.32557621602888354 0.013421991019201319 0.58440027547166085 -0.30615631031607421 -0.96941491718951911 -0.54561099421711301;1.0749758714394795 2.2909705747736639 0.97230565901626953 -1.4482167796421683 0.15343025503733726 -0.15537575003683418 -1.0333180131747515 0.022999504834985359 -0.38083030355235475 0.45960131886440331;1.5391672911540568 -1.1121185300558367 -0.18389059316519829 -0.21186438484092096 -1.4990518117975467 -0.10028137346859219 0.47896264631551061 -0.70515365754719528 0.25237938578957758 1.1242307997411918;0.18900745036560065 -1.199459752413111 -0.95487702718395451 -0.079067490885786643 -1.4011862360141076 0.54030921933119447 -0.58947017576783389 0.18280347706946412 0.0070584477655108325 0.049882985208098571;-0.17621925956128359 -1.4583293140751121 -1.003335240430355 4.3027303445263962 -0.88406642638399746 -0.90883330675665075 2.4586362194451312 -0.69584994354596419 -3.3394319473861356 -0.22929821017493995;-0.15518303142630629 1.4511707464154571 0.57755797655929364 0.23032968933732806 -1.0235260159934481 0.19230448478195775 -0.81346429178979873 -0.13826751003042509 -1.3503093919711302 -0.40602532565382077;-2.2163857369151647 2.2620833894173114 1.3448123317817879 1.98406588777493 -1.8128144080616531 0.2705987386177085 -0.84382344589368152 -0.13764248452277256 -2.3527094318273605 -0.89929332015631469;-0.1996274154447725 -0.068426258985125943 0.45781174845565037 -0.29021551834474618 0.076142509341651052 -0.27887662849745715 0.023874623681519516 -0.25727713593439089 -0.7857909246092587 -0.14047496762385728;1.0288217698412303 -2.4080673000269064 -0.99258966725466902 -1.8206896658266427 2.1225996310955297 -0.34742717914045967 1.102471892454584 0.39657357353123324 2.5781944748363124 0.70432878290434919;1.4197957665082712 1.2692459556025426 0.19516986274201215 2.9387166560854481 -2.2745531493245141 -0.19095594910243563 2.1545889861214067 0.60716169952253907 -0.77441685034761898 -0.6339052266404589];
  
  % Layer 3
  b3 = 0.23517874729464694;
  LW3_2 = [1.4383886773765382 1.3712425352271311 -1.0575019438307758 -1.9478642010832186 0.37355022606037747 4.7383498166176592 -2.6063161346412085 -3.0312857367766788 -1.8144549143715072 0.67226587465151877];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 17.6991150442478;
  y1_step1_xoffset = 0;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(3,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
