function [Y,Xf,Af] = PM10Centro8(X,~,~)
%PM10CENTRO8 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:03.
% 
% [Y] = PM10Centro8(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.281968137600451;3.74531835205992;0.00773694390715667;45.4545454545455;0.00462534690101758];
x1_step1_ymin = -1;

% Layer 1
b1 = [8.714674638330056;0.34605889256864686;4.9302305618412694;0.25374127170539962;1.2003747176594883;-7.579359467406201;4.9091006471297414;4.0305290189441347;2.9753226385648976;3.6411701071670008];
IW1_1 = [-12.699969951537806 -0.44172140786290803 -1.4948156888491162 0.047897250396857168 0.090027388488474455 -0.1405111579955961 -0.42366682458571853;1.1875848866034877 -3.1300680822918072 -0.1105793302473225 0.48706860546137043 -0.21225778859524613 0.86482713813909196 0.61738884535166627;-7.4361837322991731 1.1008389660689291 -0.82726277594129682 2.0769255698385387 -0.76575563013095871 -1.6582649495817579 -0.96117050053017739;-0.90940246738191088 2.2607169625736239 0.26870449100945643 -0.11931173790466469 0.19447817569013834 -0.6998215188529604 -0.31078296586596427;1.2111536444914566 1.108943541428532 1.1768772806766961 -1.9609358615123971 1.4605098207732852 -0.48983453577358987 1.4943793476229716;0.088378630558852644 0.55959432266929054 1.3193888942863434 1.921784543628978 -6.8738519616644336 -4.3514191477582962 0.81477240080420665;-6.0840488798830528 0.24391003765587582 -2.3114627078956951 -4.8446453913235956 0.040578301250564996 -0.23894889419667822 -5.1889756589327991;2.4416906678755583 1.0001245692520513 0.30787292416499312 1.3496450929259418 -0.43681526537419557 1.8554780278181393 -0.37289731409430082;4.7504228702216729 -0.50975544165634801 -2.0663483256549218 0.92971498263053365 -0.14198815141858945 1.9242731806215454 -0.37844880671562003;-0.006300350905563511 0.13048308858811347 1.8191044376005259 0.61233703017060537 0.12337841486881938 0.027681197322934947 1.4859192900108833];

% Layer 2
b2 = [4.0817828277798833;0.27201668542970503;-3.9337100330224195;-5.2310453193200095;-0.13267282821686427;2.8421223846036674;-4.2180353157295816;0.091289175526984789;5.4491209377766516;-6.3507591168795567];
LW2_1 = [1.1251776951536661 -1.9730625457499986 4.8162075441991066 -5.1544098732727166 4.6474059097744007 4.0060834771616554 2.1440617517852867 5.2453825175514126 -0.7617147510650194 1.3338487452883843;-1.1527194334104081 3.4639634642493959 -1.2437739890737123 3.7903643719200319 -0.1073461612953925 -4.8673771059901743 -1.089557121894571 0.27484954291497293 -0.48753985861356597 0.081639901225110806;-0.97133793484227982 2.7406073988565924 0.90648153967519451 1.835825826645137 0.38003438365357101 -4.6737992223578564 1.1363767716050956 2.1939077429606808 -2.1076240698377466 0.46937513134312092;-1.6965723276604507 -2.3639687468682711 4.9422513780961799 -5.2278747114002613 -2.0534497993235346 -1.2150388673413313 3.1803727699350883 3.5440631442714765 -4.9159191075042612 5.569665286692806;1.0275449941289294 -0.16870580725716966 -0.17019491495364841 0.094413182250579278 -0.84074460155355679 0.84868277556517435 1.4783962417600578 0.84044872684810645 0.28296199977581799 0.80566251920625065;0.010320661109170917 -1.5966929441151589 -4.5136147230910346 0.39772745707335083 -0.82406708305927101 3.5930774693364689 0.73076978472412268 -1.1904753791654199 3.8958116839363668 -1.7800593584317219;-1.464234311347822 -2.4885606504243563 1.2815929879477834 -4.0989574150384449 1.8555345339120033 -0.71871188526030527 -0.53799347306785816 4.1911901154921072 -1.6470395039860632 -0.86307301074788234;-0.12049432776200199 2.0223351150519413 -0.39416400824158115 2.6800081642836195 0.29887795053868016 -1.0289435400192695 -1.680586965607612 -1.1837787228425989 0.9063404548838091 -0.41156893040619025;-0.084217476975054939 2.3773502110161102 1.6508791606531272 1.7280151075098238 -0.076693501588231239 -0.26117553799699678 1.7286030030132749 -7.6072729910234909 0.19414509364616581 1.2454166702844054;-0.64039977051668739 3.2576119820238625 -0.60606948352834289 3.9635069826495837 0.3138845178041324 -0.69981967882077745 1.9613642533560662 3.6519292786893032 0.704595065548974 -0.97573104661821564];

% Layer 3
b3 = -0.75407680444723335;
LW3_2 = [-0.16284737873452354 -0.1734930447383779 0.23972892489681477 0.04157658790060579 1.2250027168477864 0.11558705162970072 0.44653568860613652 0.78345914616204826 -0.22065102460012065 -0.27125073839938046];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
