function [Y,Xf,Af] = COLomaDorada1(X,~,~)
%COLOMADORADA1 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 13:56:35.
% 
% [Y] = COLomaDorada1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;17.6991150442478;0.00572573718866304;0.0175284837861525;0.0546448087431694];
x1_step1_ymin = -1;

% Layer 1
b1 = [3.0604835666206673;-1.881824596117474;-1.6378437803387564;-1.6334783112532445;-0.40868498346429688;0.75857661241850793;-0.31688596675995301;3.4997630131103246;-0.43010223862346342;-2.9060588000670808;4.7196028066410651;1.8777358005408755;3.0222106456760574];
IW1_1 = [-1.046414438562046 -0.25330462013679311 -0.35579529238977764 0.96893556775791578 0.95835687285572402 -0.68509214260375195 0.17311217499622553;0.77051547276983301 0.63302645711320094 -0.54771274690363914 -0.19734386518843333 -0.30673135735611168 -1.000609085666152 -0.79759302474262717;2.493562261762968 0.29916072304548924 0.80636663252664986 0.43854233455853631 -0.053726696723475895 -0.7755063955753706 -0.44560561562023021;-2.1343236237646845 2.3432531857478551 1.1522200740864073 -0.32991943802905443 -0.42686408924341224 -0.96167309093288389 -0.5458752512025481;1.4002253380072562 -2.8402758241967327 -0.63192740629224786 0.56645635524694593 -0.69261399386954103 -0.97418502123347184 -1.6860615423845884;0.54183858579676458 3.4397254831151716 0.70878383717256432 -0.82878586232330909 0.78206734601410632 -0.51512882548528516 -0.61713056271366362;-0.39836984025943029 1.1426922248864919 3.1763384664654746 -3.189446186968794 1.3388288392704184 -0.19664955643057658 -0.086584924431593616;5.4188056260613511 0.45721401233241449 -0.13452735869689422 0.11425324087241158 -1.412225934231373 1.556516632659648 2.9783849210289408;-2.16853086399205 0.50470027403773687 -1.5817253091451848 -0.88248485151598943 0.14199105666987005 1.1189259572559629 1.4410838575354887;3.3067608463669784 -0.6120951813034271 0.10575030683154782 0.3276019022051293 0.022313045878591595 1.1880918479579723 2.8127061164637208;0.04755535521424558 -3.685265489090471 -0.0055574987417948002 1.9103556681260363 0.37802749331129737 0.38827459801498221 0.81751674469356794;-0.20793499015233061 5.8471673454544799 -1.2279890837304133 0.33965012851118825 0.18125312076490568 0.10280370561085254 -0.52325225146571608;0.33382644930803812 -0.26757952597865964 1.0385729451856309 0.94811719567890718 0.86123670531795182 -0.36296000524636185 -0.061279736758500701];

% Layer 2
b2 = [-0.89330466034630251;0.55967416637640921;0.73943692303209418;-0.76352489629502451;0.061359886065901328;2.0079719016510733;0.6190272566288243;-0.52889739013278403;-1.4550698561304873;2.5447679814294966;0.088641590375695412;1.4560617450377684;-0.1646785699941119];
LW2_1 = [1.0473608610388099 0.23844492129133066 -0.61609689646188193 0.2398238101231325 -1.6538328121508417 -0.67609556001051185 0.17811971941417051 -0.59596573810182807 -1.8364127987565346 1.743348200955573 0.63069462963642298 1.3564572945734921 -0.50991486984475587;-0.78574674508672193 1.6083186782148409 -2.1772699502667563 0.028747909986982997 0.96797307624092144 0.4623685151434821 1.1113258076075692 0.2606505965940179 0.0073762210724940078 0.10211511304175466 0.51698763175672569 1.4277571622724077 -0.25563160274753888;-0.54509818322294923 -1.3755672882450765 0.9895083463438169 -0.15295942555781775 -0.16148102449248858 0.63575648713942667 -0.013669121673084629 -0.35120180289532416 -0.10894590015088444 -0.48143190382568679 0.56043296632502604 -0.76437576636467797 -0.82713665557969829;-0.4492918747446692 -0.68048366846453001 1.2529695841189499 -0.17930892061502546 0.50636255975621058 1.9090517199135313 -1.044329544833591 -0.55185958363941323 1.0253937743593369 -1.4996932730477286 0.12620184077555729 -0.27005463821653103 1.6122417823127835;1.3444476419242348 -1.0638641410466432 -1.4476788462917882 -0.7911751502906057 1.5813197325274739 0.90127441333660741 0.34555909889166664 1.3166899132441607 -2.3349276092426079 1.7457232527909015 -0.58724379445242636 0.77781046271509879 0.16321051840994791;0.62925152203120638 -1.1332794402997477 0.8130112470498817 -0.82915802281899742 1.6108480204828441 0.98125725300613864 0.33425507383503972 1.4901270675218876 -2.4132603888539825 0.90800562695726472 -0.71033014935368566 0.75625310919586797 0.26732545975046024;0.26916778036826777 0.74076959390656283 0.32013900971723042 -0.078073612737637618 -0.76666089120365566 -1.0257220434447729 -0.040196264358412448 -0.039273689393670777 -0.27075874548244122 0.89708638729672074 0.16650069479077689 0.19966073230016032 0.23355555142137563;0.093801221373842558 1.0009240041787617 -1.3930008558073264 0.30102399487692133 -0.20619127215314439 0.29656308368217488 -0.0093982985593928405 -0.012833895736756555 -0.90714165534352709 0.21217511418817947 -0.79832129472897662 -0.13142894347132653 1.1434613557082889;-0.22906891683007607 -2.131796100355138 0.75218067050538029 4.5852874694918384 0.69019142219825169 -0.43296159145415242 0.17344856106131029 3.5471324903638917 1.9972276852573312 -1.3867913148311757 0.73835757765992605 0.63405657753620681 1.9033886676658183;-0.42023497567739893 1.7419094844978853 -0.90481095012281809 0.34922051194500753 -0.97178497636417094 -0.10356098047648041 0.41185998228334697 -0.6727334946476814 -1.1515144046011507 -0.053356291392710337 0.47534726866755128 0.48129740883049188 -0.48686445702689396;-2.2158953747358638 0.15987170739612683 1.3074969489470478 -0.39857677450673035 0.79445275918084501 -0.5952314679283186 0.60818596475702824 1.2854330296751282 0.91645004313892575 -0.76838376568165034 0.3917897083363498 1.3348207766894273 -1.4157724349162284;0.2796076956073742 -1.2680407615595646 -0.64478639202981525 -0.79079267547077536 -0.2001405981121335 -0.6882580108695795 -2.9757394547701517 -0.45547046225882437 -0.16127699519849426 -0.15455145778407908 -0.12235341845656579 1.3528778678177795 1.9295797681283122;1.9412499711786362 -0.74932927816317862 -0.24428959400446343 0.15378236945747004 -1.0362433574912659 0.46134742406575796 -0.88148761994902602 -0.67989244218156253 -0.73090731899185146 0.93677501353630133 -0.5193081900951444 -1.3527016338076396 1.2646386376909311];

% Layer 3
b3 = 0.31807411525966034;
LW3_2 = [-0.53633034647539579 0.61239227158763376 1.0487577822622953 0.70893897949153539 -2.9736168864548049 2.7148869220424805 1.3382259111436401 0.64107988731220444 0.23426229321694558 -0.56843692587232986 -1.0921765239843491 -1.4460048816716427 -1.138576379677283];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.448430493273543;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
