function [Y,Xf,Af] = PM10Atemajac8(X,~,~)
%PM10ATEMAJAC8 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:19:56.
% 
% [Y] = PM10Atemajac8(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.00968992248062015;166.666666666667;0.0561797752808989;0.00614628149969269];
x1_step1_ymin = -1;

% Layer 1
b1 = [-0.24671438996066714;9.0579840924765378;-0.13194478950036312;-1.6655766624205104;0.050389719801241295;1.09485745468927;-1.8953653312716556;-0.67240941730970993;12.018589028635038;-13.638430626378252;1.7955676774223077];
IW1_1 = [-0.13664510037222363 0.26854840607781194 1.635105567191401 -0.35952580341397861 0.41441892761266613 -1.7068985600225171;-0.40487064123497052 8.0881157352830737 0.86694366908243425 0.20760834146839025 0.11061177883466067 -0.35648705542997183;-0.34297362881213578 3.1142909332903068 -0.25412737863606205 0.18035493518111495 1.1925740208330291 -0.35552030106061294;-1.2863523857005383 0.34473899910501593 0.17387964088560165 0.29605004189614281 1.6837788265961593 -0.12782936339013637;1.0597121759071026 0.36910329529717567 -0.11304145323804866 -0.17182639357828297 0.26983786551153816 -0.067286291366610906;-2.9027148234957254 -0.029471260086587049 0.065160682556525282 0.41583146187242703 2.2727361130507826 -0.30170013756545189;-0.9002215406710854 2.0241136215883215 0.39467880831984453 0.091272767638746977 1.5892586585531938 -0.21425433221897572;0.22007594991388271 1.9269213168279884 -0.064082774242962715 -0.13139916797738588 -0.81062080936985892 0.23384127362620333;7.2448109573471591 5.2006809584618185 -6.0984130736843571 1.9042904744873292 2.5384951920134742 5.0867499101471338;0.19083384769605355 -0.02681512954390514 -12.877144514013164 -0.1739550855480077 -0.17343170946669781 -0.088826414516090219;0.9181524644494693 2.159198635968719 -0.94773561244302329 -0.26664174064778134 -5.6846692593365757 0.19430050325368808];

% Layer 2
b2 = [5.8648646719594533;10.969345688220519;2.349085237235327;1.3146005617801164;29.733807890635546;6.0427931850910586;-2.1373644477575837;10.271664334675465;-2.736316073540062;5.9265776572944624;-16.160567470207408];
LW2_1 = [-3.2706044700567407 1.5970095960113995 4.2788620191481268 -7.1642845062335434 -12.464501595132019 1.0727108167582826 7.0830707318445283 -2.0546319279972542 -2.1575903977138129 9.6722571944544153 -6.145671812386551;-17.93569305219869 -3.5419306780063113 -2.2040660112415398 -5.3998331975616001 7.7871017377518799 9.257725239447959 1.417934761883765 -1.0673341791600488 -1.8747638772570863 0.23204365294002699 -3.3620107031025177;-0.72243319343731494 -2.1617816015360152 -5.0523644436686181 10.087619542256251 11.681839425737877 9.1426642050232036 -7.5707093817426561 5.3007541378680809 2.6251104898625961 3.3474018004019097 2.5145620353833116;5.0561626770695343 4.2282441753825166 0.23484144104687454 -0.70218590600800124 -0.14072952541588471 -0.96682951088017011 -4.9192007711726475 -0.56454409793280524 -17.725174170663401 -5.3876106070671144 5.8254724651729877;16.05083841866367 1.3442283657632592 7.3910247232121993 11.887540325489161 4.8705977528794548 14.131574428439585 -19.377184267332495 9.1201620229066833 -12.530325909372142 30.085615052622551 -6.3672177411784707;0.29287113419361199 -0.13741970152083346 -0.81249458274497954 1.8645989512970851 1.0058611722707154 0.55417161215920807 -0.94391266678847952 0.96863970733864002 -1.1753891211513134 2.2468189340728162 0.23937102282204653;5.5688363274024288 3.3702382322818489 2.7717294815517945 -10.41877406970436 8.7134495333266564 -21.823652108558917 -27.054520815475808 -9.9540131725495566 -4.8187038883971978 -0.14320055499368872 -11.417385051411927;-9.6149322014850185 -6.029264503294911 -3.7345177140554702 -2.8690314502033329 6.3102982347815315 5.8788692697345297 -1.3546160126178255 11.240718689397889 -3.7981592799901742 -12.035272765953957 -5.1627353368328635;0.59976231903056143 0.27237681829649002 -2.6412693749573513 1.515863319558006 0.83856876302350158 0.83228877510159094 0.15496383766225083 2.2986530480054466 1.8977557726293164 -0.83840096537601505 -0.30855408624377789;-10.071652745188731 -2.6650831328437241 1.3289828612228365 3.2341014162784281 4.4478256393223257 -1.4408202827488374 4.2130646479624367 -4.4041156640049426 2.7056814165492855 -7.0130338569731885 2.4430262247201111;-1.3563612787114978 -5.4513946420364459 10.621364581567878 -13.632330296038482 -14.900670918085527 0.64590391436680872 1.9784624570504421 -7.7699253286956953 -17.660317877144585 -21.03788955927957 1.8822978803735533];

% Layer 3
b3 = 3.7222611542360622;
LW3_2 = [-0.043147053621710237 0.11397538958029295 -0.10384697117270567 0.04373657558812255 -0.0058277976426317985 -3.9166176479997135 -0.0089810913852323669 -0.42521441770158086 0.3175111696498622 -0.14794901372244187 -0.047053533568099062];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00968992248062015;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
