function [Y,Xf,Af] = COLomaDorada18(X,~,~)
%COLOMADORADA18 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 13:56:40.
% 
% [Y] = COLomaDorada18(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;17.6991150442478;0.00572573718866304;0.0175284837861525;0.0546448087431694];
x1_step1_ymin = -1;

% Layer 1
b1 = [3.5505860885959533;-1.5462599703851458;2.3269013625732429;1.2331725417880357;-1.5905553788913043;-1.0938276573570977;-0.47234990215684591;-0.046716772713312191;9.3820238361721628;2.1616563269075493;1.6300460169709776;1.6130962144995074;-2.4252619355378542];
IW1_1 = [-2.0151922385752039 0.097167012212888426 1.5309597559788022 1.799163468844043 -0.37412377356003912 2.803127880779845 1.4247835051157554;0.058251623900216001 4.0976875849913252 -0.30834862726181766 0.024294000941421028 -0.20814547790132842 -0.21189466009102548 0.24251314550909181;-2.0859055673218223 -0.0054363032752992486 -0.42383187810324718 0.017042439722491184 0.37898477881614029 -0.28108881870416419 -0.51056924966509731;0.60232544341881056 -0.51437397187260847 0.76261352254099501 0.70874740586872076 -0.30668205743217497 1.5181650775839122 -2.750211136842601;0.0085058379705180154 -0.68496145393599173 -0.83015667220779021 -1.1153527441334199 -0.17151407227753809 -1.6885102410973876 -0.33929889759001874;-2.874229227110825 0.51861697771160253 0.93530930430375392 -1.3558352454037397 -0.26163274783915808 1.0572868798613082 -0.2865754586182454;-0.33035435324790646 -1.78219267381833 0.73449260788408544 1.6650278378083276 -0.58183906019151632 1.5375486151897071 -1.3415782440265962;-0.032792939789313032 -1.9569002370461293 -0.40614890888168936 -0.1173709298092053 0.65693695068423952 -0.58854946924726959 0.88699794597323822;11.053030062489301 -1.3430376412196741 0.54763722404621284 0.41488510948740687 -1.0168717092288548 0.36659948035171136 -0.44673385456082648;0.43231661698628493 -0.82754926125616324 1.3342351923427791 -0.772203706895496 -1.6548573347435749 -1.1980842276757211 -2.6128774930554761;1.0858691933446238 -0.3552406001736918 2.5874637770251763 -2.5320679708007985 -0.41490410664836286 -1.4114442655415176 -0.93585232578741129;-0.099112210383436983 1.5001116559121017 -0.37057683628207172 0.010921200600001457 0.34891822432502795 -1.3969886770052122 -0.37279377712878364;-0.11888207657765545 -1.476193468849903 -0.26963679900695664 -1.0784456034913183 0.18250265911301877 -0.52235025856105965 -0.85264608422362864];

% Layer 2
b2 = [3.3212354837481821;1.004864326248482;-0.53741870464562158;-3.0136624985598868;-0.66548570236490012;-0.49717193458733705;-0.80496470507725137;2.5829899498167537;1.1201339716030516;1.402854078431174;1.4079655853328275;-1.295499997916242;-2.0523005967330916];
LW2_1 = [-1.1076455862229233 -0.16888507544522821 0.38609956126864792 0.65561841324717884 0.26131277992991409 0.15970351864888824 -1.8388159737436276 0.77885160481850568 -1.5221856114321324 0.35554986196645516 -0.30452537706689536 -1.0821761668258512 0.18509323742945741;-0.34802793692454281 -0.14013999009486328 0.36790236335091736 -0.45706439947444077 -0.24920753009261812 0.37190611898453291 -0.43996237350045514 -0.11614006095726551 -1.3497255806118753 -0.32899198454205109 0.41613674575771786 -0.18114557494231315 -0.083026696410175488;-0.17846857543934994 -0.3390239794744887 -0.63338725995737466 0.24378145071542368 -0.66940790250563253 0.0088028710004762999 0.83606574924134847 -0.18392339364152926 0.43695411945162799 -0.24281101257755131 0.30431229466399334 1.6050995216202064 1.1623689021802546;-0.85339075113661056 -0.66757282033498844 -0.090330640058534917 0.90490103930765919 0.025550310808220351 0.55885205355161471 -0.96415256810269623 2.1937099548188703 0.32741631609156507 1.5478388350608761 -0.963372504146491 0.94085247629763891 -1.9535589267170608;0.16327978794049544 -1.2796458736394434 1.8332575390455019 -0.86141750077097068 0.98863411958867664 1.9115086848832692 1.3717551626225379 0.19528850546704107 2.7058389384055896 0.39158918984150193 -0.8415162475788126 -1.7653076672594423 -2.4615136948781009;1.5663835783807256 -3.076601850379149 -0.16789463825039871 -2.2865476579578825 -2.7560446190925112 0.19152629637120455 1.022066596351308 -0.66215108157252422 0.29058340886156964 -0.27146027610557127 0.67482578859128561 0.37043850095349279 1.580726279844;0.28740810782294735 -1.4679644022319513 -1.0340735836976545 -0.23797286637766871 0.32925331259790891 -0.10940376668400999 -0.82465887929105652 0.18314329092229509 0.061367815138861428 0.79499896819930171 -0.60276890857985543 -0.79692102496889516 -0.4656013593684809;-1.1476347536935145 -1.3346364817632999 -0.59728231930736686 0.56198341789119877 0.36663552280470679 -0.89731067731066361 0.57946162458647654 1.7616707471221509 -2.4134155942713735 2.1406519043332435 -0.18663651693352845 -0.50654750936097348 -0.52194407577862301;1.0316770258064021 -0.24063412070613391 1.658459733485202 -0.18632349271136095 -0.42706285406202749 0.242738877376623 1.8528069661754576 -0.040210752947349084 -3.1111321716202069 0.72249959467065883 -0.74711857335160115 2.181754676381622 1.075267148386468;0.14324751727652485 -0.42451235345246102 0.34411084933855207 -0.77222114789943441 -0.92768357799618184 0.33508537398354332 0.10680502128193126 -0.57750360837593029 -2.2827649297149062 -0.34873827495279863 0.49687959272954996 0.86930179509848604 0.95150064225686681;0.14805995700686142 1.2215406932696318 1.170336791555378 0.25709622173036711 -0.65705596999950422 -0.45586680061552937 1.3963157954747205 -0.67138532847492105 -0.10752649241093566 -1.1088190842582326 1.2784585665879269 0.15158532361001575 0.29305615132011642;-2.5452823717799977 -0.73776254885731052 -4.6081658547732927 1.5766602951737128 1.2275674662582312 1.2270776186768402 -0.42624982410047491 -1.5367939366069974 0.85770423656174655 -0.47188556217271083 2.0518871678781707 -3.2572427805925406 -1.8338351730733997;-0.64126778013100849 -0.7505100872256798 -0.99827904159006486 0.22705582060311119 -0.450701265161911 -0.021773300597748488 0.43217740873984689 -0.28601950216417021 0.24128036157762411 0.61418074895178809 -0.22795681401096646 0.2322850517262493 0.058131508882301015];

% Layer 3
b3 = 2.2323119410466492;
LW3_2 = [0.70789813294268233 -1.2297648234790277 -1.0248935688091001 0.28454793172397236 0.15231840345462908 0.17387805591179201 -1.3850675826320817 0.31554722835070947 -0.45634153127364357 0.85058792085660051 -0.53469325699010428 -0.35644954803515022 4.6274845310505874];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.448430493273543;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
