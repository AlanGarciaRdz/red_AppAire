function [Y,Xf,Af] = COLomaDorada4(X,~,~)
%COLOMADORADA4 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 13:56:36.
% 
% [Y] = COLomaDorada4(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;17.6991150442478;0.00572573718866304;0.0175284837861525;0.0546448087431694];
x1_step1_ymin = -1;

% Layer 1
b1 = [6.1138160772836523;1.2514836419489648;-0.52137086654303044;0.42113775895513816;-0.70470098734671127;2.5667192035973287;-0.23167611044390363;-1.3158240595939741;0.70044982345796658;7.176620110154416;-4.1056401489824479;1.8814158411175368;-1.0158417019100738];
IW1_1 = [0.49054061327205367 -0.33005224250388404 0.43783595850467755 -0.56088996325707507 5.0762048900411196 0.052856940502088112 0.85324068480207182;-1.4040123516303857 0.72100800947516841 -0.36155982569849732 -0.098977967484163473 0.022525999170741259 0.18082000286932409 -0.40254608267256609;-0.30796098805879235 -0.29603430344410908 -0.1355748955402003 -0.30799273027714102 1.4222939099020442 -1.4467085781512368 -2.0099456850364392;0.50485288002539097 -1.5207549345069862 -0.40813203660504954 0.206070646921483 0.47725046285312611 0.11893252054176777 0.86153643254728407;1.4761917383502425 -0.31611557877269103 -0.81977057980929835 -0.24653200862728172 1.6615653911868797 0.59304135865085794 1.1031275392851927;-1.6717493510645289 -2.8645395527738104 0.49195966613336611 -0.57120376069470657 0.32049129548786925 0.59202074855440945 -0.15364114026838419;0.96318235061839585 2.1015526514380292 -0.54894559752298555 0.15514258638305381 -0.81112149257367905 1.1342449951762423 2.1210308779223368;-1.8639525870617404 -2.278406233994748 -0.63830300926364902 0.45270892133271856 0.48461709953788629 0.59568105874059807 3.1277789293340481;1.73928524691086 0.55083064070418941 -0.45418125234888634 0.038538892367347082 0.68298624650200634 -0.76933563328697652 -0.016939647251516109;8.4486546252673591 2.845595445138716 0.62701615486241402 0.54250540859659913 -1.8357260378404876 0.68126808990134557 -0.052763113077345311;-0.88635056272763835 0.67476140114640859 -2.1537127282512185 0.35560600291981986 -1.2321636734732235 -0.45466776784807827 -0.46517965565767633;0.077705146269111819 3.1025407335772894 -0.24122343987713787 0.10135777859852939 0.23367706500775778 -0.3632324560142518 -0.55603606808117967;-0.95461157829905774 1.00496316568727 0.67956673250021882 -0.15099696536368937 0.26100848612008609 0.69786537008260097 0.50064816167687265];

% Layer 2
b2 = [1.075442437477242;0.44824859631085717;0.4505938189752573;-1.3762399325032204;-0.12206889840005437;-0.60480682064829172;2.7531560581387811;1.4181184414414663;3.2914529242716304;3.630017400117763;-0.63701936917982571;-0.29475697329067396;1.9198286651973311];
LW2_1 = [-0.34258835898421386 -2.1981748561458838 -0.92067492958504593 -2.324490369882108 0.56661186310026912 0.55429141432106033 0.051011906482164922 0.22402606373343534 -0.25764004618464464 0.25352714708350066 -1.2164471974906206 0.69763686970542838 -0.48842263268187336;-1.2353932229552345 -0.62309650835252262 0.58964277748386029 -0.099207959340199353 0.55025371442906978 -1.0670931754762818 -0.75870807340471713 0.1936214466852812 -0.027288463316947731 -0.043252486628385579 -1.978521957173176 -1.4198542405733265 -1.3338578631726463;-0.32773821953167048 1.3587680183823996 0.39229384060011002 -0.34948827246265368 -0.4791737491298817 -0.28788522278736417 -0.23833022025483577 -0.12914945392002372 0.73821328750338 -1.1918568790713158 -0.77529741227075344 -1.0615363116744139 -0.46839367826664474;0.27002745862051242 -1.1900503645226377 1.6018975409893152 2.1563674092746794 -0.17729022725410429 -1.6396719104933277 -0.8056104042878206 0.19154686091946113 -0.43802026658278009 0.70905646231658914 0.50017982312264864 1.9738495760653008 -0.71372089997902011;0.085152707470387057 2.4975699478374342 -1.5913196813140886 -1.0048796196358691 0.78190531228915805 -1.0229294071685688 -0.59290644198301701 0.097612150640880746 0.25208229422633222 -3.3540121693267708 1.4085088242840551 2.8378891140400562 0.042235914128508967;1.3255202970867097 1.3189569249094122 -0.54410058186115162 -0.39983874303539213 0.22687009696290539 -0.27215102210020825 -0.35744149338036002 -0.089729379298666742 -0.22969254521147603 0.016459544974291168 1.5918036722450921 0.17014072720881498 0.2159945581424165;3.4103022062855857 -1.3514647864638076 -1.3656191936895663 -0.3745796201066961 2.0148136919806214 1.1153455833408721 -0.59958629623796034 -0.40179071951278161 -1.6074916065193208 -0.80074863808029317 4.1984695445606643 2.4231253662978518 0.87760296446485231;-1.0852373124100858 -1.2206924091668627 0.93675110855463617 0.80023232557972845 -0.19049997249504674 -0.4787283709342004 0.54915393326915385 0.14934626089870515 -0.23447727329984475 -0.01749720375358655 -1.2354466406728566 -0.22669940760593238 -0.36602368361727233;-1.8053706309267255 1.198139464504963 -1.8277140195226216 0.36806209363906317 2.9852719801693879 -0.46934576314788651 -1.652191689371209 0.72046956561744535 3.7310749815453184 -1.7516618364393612 -1.7676419994421471 2.3879145523594718 -0.16136916605437029;1.157470731510136 -0.65420568329697448 -1.0008323813908615 -2.4109004958869922 1.1430689211045302 0.81649841984318128 -0.029211722047077039 0.35369856400424154 0.12597379990025073 -2.6011196500192293 0.95423013821418079 -1.8662011579448095 -1.0873335251274607;-0.70336478912580636 1.3190202071683355 -0.040144307977599034 -0.084349010850386597 -0.50303498870109264 0.12157212708915108 -0.570316213486043 -0.23884223916953812 0.94233089894265565 -1.0093868533545718 -0.36948967794629833 0.72819605427611189 0.22074316090979518;-2.4854568486837652 -1.063644947040824 -0.15852364430567309 -0.52201898250167389 0.31756945158222183 -0.83185771824866961 -0.47375981021092328 0.35977230828562862 -0.27100261246730217 1.358557603548123 -1.7848925677899052 -1.4381437515378999 -1.2862740120982705;1.2811212057692545 -1.7598330810944198 -0.18869843500399722 -0.6399613843281845 0.95001668768957015 0.066278953909223934 0.01648466330031392 0.090435371167274139 -1.1518112871915696 0.16059226014420325 1.4496029253137088 1.3071023695641508 -0.30526626687488506];

% Layer 3
b3 = -1.304966140083579;
LW3_2 = [-1.0725498006651282 0.87365422903080525 1.3184439808160004 -0.64881231107443138 0.69960537118164801 -2.8066000480711071 -0.52158958404638134 -2.6141182905988827 -0.19278189181568448 -0.85944852857381726 -1.6097392254220182 -1.2564300133716901 1.8995203544470303];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.448430493273543;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
