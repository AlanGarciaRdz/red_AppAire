function [Y,Xf,Af] = NOXLomaDorada20(X,~,~)
%NOXLOMADORADA20 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:08:25.
% 
% [Y] = NOXLomaDorada20(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;4.5045045045045;14.7058823529412;0.00280033604032484;0.0179856115107914;0.0558659217877095];
x1_step1_ymin = -1;

% Layer 1
b1 = [4.9174123834532937;2.4933167825162785;2.689311140350489;0.060118569233223083;-0.052833002851264563;-1.9327902844475315;2.2703892314598817;1.8951345377697033;3.000681052466311;-0.61256472317208621;0.98969015437424801;1.543275627917615;3.4551265089546361];
IW1_1 = [-1.768765218226491 2.9835180466892921 0.73060469635892433 -0.89564978043745336 2.2305270817585643 0.70879628487979363 0.47674321931515307;-0.48914789138523129 0.52526580691646707 -0.6657792260297688 2.2144430877794798 0.022324054814153761 0.81449007705074206 0.63174094117788504;-3.6505301093107207 0.1307666139688014 -0.8098393348701356 -1.2451248963627692 0.065409712350548752 0.27247991872747596 0.70984225429862702;0.12226216278875357 5.7040305150152681 -0.0083056491484276886 0.58451295159235728 -6.2876175484557345e-05 0.14254630538166901 -0.67762722144536736;0.48402965870358328 -1.0403775918829388 0.89779764580915722 0.72222295964305228 0.02420889122700982 -1.0200883750723282 -0.87973239620992105;-0.94632979668923345 2.626405635849423 0.84161261422799583 1.407690888033599 -1.0349339533949191 -4.5315971774791892 -2.7293302863576878;-6.8951078258474015 -0.33721289296419543 -2.6307829654918113 -0.84483852992319752 -0.31578756270902963 -0.61687965144283863 0.39654379937332623;3.3645196775808786 -5.3086445639447772 -0.43511980551587337 0.66596569265918104 -0.62315029866221261 0.88733760824475716 -1.0140087588285676;3.8858886134353483 -0.22223437416365135 0.34254198285477072 -0.42379641785595557 0.02983777099864935 -1.1215909146861571 -2.357629663599305;1.4231237084761039 3.076950045300443 -1.1926056571342851 -2.9290964722307713 -0.44608962070691671 1.9750364018212896 1.6376653822130662;1.7249231913238141 3.4333151796181118 1.1543867243180665 -0.69365388415002804 -0.80535541079633755 -0.30237907782700491 1.2262746533777409;-0.23711286522127395 0.62716183963001448 -2.090714624555404 0.37178265109288489 0.82549129820169254 1.3804421550814561 5.8771944018780644;4.3379065846231519 0.14627265023600675 0.37771236108388589 -0.0053623102361103868 -0.18321473633054935 -0.87467707569769682 -0.1076503692450391];

% Layer 2
b2 = [2.9034449932406714;1.0137119770915954;0.10427678004370537;-1.2638077601116007;0.59948750414109031;-0.63218296138932484;1.7598319254377597;0.51099862750732072;-2.2388208148445319;1.2575585973205565;0.02318239436071319;3.1706545175039782;0.077295628180972312];
LW2_1 = [-0.017879995418717515 1.1031527337922007 1.9375824932628354 0.56875719258076818 2.092613403479898 0.58892935689934356 -1.4639539419528544 -0.22397335655521261 -2.5154607526339592 0.46740128196428854 -1.1878879373228945 0.30135918474718831 1.0338149512129708;0.73725358954884779 0.49555498501082423 0.36156902969820826 -1.192404256956425 1.760863621447599 0.13580216408819648 -2.1881473740998607 -0.022325775478708627 -0.26303499090459187 -0.10962210294189417 -0.52623233219874244 0.18313581198014672 1.1850756590495362;-2.4273685262748206 0.59163154515114313 0.97279252945430938 1.3711012451145836 -0.065612469672485782 -0.95598446748779908 -1.5101902106277156 -0.17807187296141866 0.4988187319278935 0.60311916770011931 0.90295078342270074 0.039834639327414587 -0.22049989946107884;0.31944424762933837 0.074951279696441289 -0.11464632296702806 1.0033000938167698 1.4745367766914939 0.32700405683027012 0.83156700608138212 -0.27648746725041257 0.9854431300052412 -1.13062506676689 0.036050614617856719 1.0468442382825867 -1.3555504902100255;1.556537029338777 -0.61136298029682412 1.1017766765108263 -1.3644878373817888 1.5107085137457619 0.77523449733214256 -0.093320107970038896 0.10428210374878168 -0.41745545536111128 0.27100434053981215 -0.87217005565964767 0.0051071103658889838 0.21174110048748934;0.026838427494781995 -1.2621889067088989 1.4595990309724578 0.42139140126311991 -0.52730603397038878 -0.22957564709658532 -0.9556308126464057 0.1955955844781154 0.45317915948854071 0.10128641198085717 -0.30701541134791999 0.25339096370356773 -0.86530967457879382;-0.70859157168493347 -0.85008229793619194 1.6293985200893812 1.6543833889968329 -1.0904266814698194 -0.74218163020324324 -0.62491035670730399 0.67826283303846868 1.2359664757194995 0.63088852360841507 -0.040325899158580314 -0.78991773418836053 -1.5430386061613646;0.0099577889067001199 -0.096137782330681792 0.10733215017572517 -1.1830989272710462 -0.77502692165397413 -0.51113291142577821 0.35719723811197929 0.25891352362999914 -0.71727739017780878 0.85158783641133273 0.82048886512484831 -1.1026944630442557 0.89143461775992161;-0.81517942898261775 -1.4349487624835624 -2.5085380775071675 1.546403748410623 -3.8390636464903185 0.18719527007916223 2.5557379272808993 0.5455627768204715 -0.39296000008988996 0.070783152141149039 0.35473669412202946 0.17764745474581312 1.2010699829282929;0.30168397808910258 -0.8035750842501842 1.4729914307691971 1.716737857015701 -1.3227120737655385 -0.56138411165261703 -1.13244734099584 0.73071161274626661 2.4483554153838267 0.26960819354218835 1.3277607803847278 -0.54537190491455823 -2.210714869340888;-0.19390112373498974 -0.69439983452195364 0.98037641070048875 0.30766644188252196 -0.28680623889323803 -0.095173253847997533 -0.89486458007639103 0.12454338003476016 0.073699232801599859 -0.025816339069904142 -0.38800630214554199 0.21834959672590631 -0.24420317995081592;1.4811878488079067 -0.5698464334819332 -0.59575466696556034 0.64733687988103505 1.3503464100472768 -0.71758293997115341 1.1188012034153072 1.1959847490520463 -0.45907437648234117 0.16771582990523892 -1.1208854992839232 0.13398243393876472 0.3887737656306004;2.0262032632153364 0.18678308047429326 0.68493367076846712 1.5212491712121612 1.2424833033041527 -0.58985447158495441 1.1441329333189465 -0.1699672462867598 0.090701820306840486 -0.71337707623148017 -0.53924957266555607 -0.2494026325118302 0.65514002878330646];

% Layer 3
b3 = 1.1196783763869813;
LW3_2 = [-0.42297136557030574 -0.772441716536171 0.86317703840944038 1.24890700098204 0.94611404029855195 -2.3006715192286475 -0.95530032416924116 1.5979138558498622 -0.50439730558066487 0.82051995615371143 3.292039022094702 -3.1052280252176421 1.039815540140318];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
