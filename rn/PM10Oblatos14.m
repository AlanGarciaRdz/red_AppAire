function [Y,Xf,Af] = PM10Oblatos14(X,~,~)
%PM10OBLATOS14 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:24.
% 
% [Y] = PM10Oblatos14(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.100381449508131;0.00618238021638331;117.647058823529;0.0560224089635854;0.00280033604032484;0.00462534690101758];
x1_step1_ymin = -1;

% Layer 1
b1 = [1.4613149251137392;-5.263919713432899;-0.82854173263701447;0.76992907956401468;2.6911971908992838;1.8921112099237978;-0.13026900376342915;-1.6313156008490131;2.9006275233024295;2.6311984576137912;-0.067559401494371271;1.2615908200517649;1.732126859913925];
IW1_1 = [2.1057584434094694 -0.9016023875320488 -1.0991916945192239 -1.3824194037310518 0.5355074086166709 0.25738203309079966 0.20199665411334761 0.18784667847594777;1.5994420303003332 0.38586624430738514 -1.1383349803092766 -1.4060139470387321 -0.28527908215378689 -2.2812421831896517 -0.17051883907617588 -0.65972360610350067;0.99626343212527924 -1.053416503918976 0.22817921199523322 -0.45214091634937348 -0.87345807683509946 -0.29908620043118334 0.54197388040019112 -0.1777472349372568;-0.94542047061550749 0.56694911977900553 -1.1068928352312186 -0.033743068642960006 1.2430773523420535 0.55863061228600508 0.34381538403970946 0.99683777990687461;-4.1100154308917318 0.40394411790895307 -0.97420823455772598 -1.0167437864727462 5.4037821768272973 -1.1610581592438469 0.39730260264344647 1.4058730937375148;-1.9372484526855127 -0.6997333857088599 -0.080763882487387958 -0.65232755225510985 2.5298015720835556 -0.017995664904180621 0.55349722981201177 0.75168497035669068;1.4394154149845748 -1.160796841780809 1.6105717308536096 0.42418927275239504 -1.4956469979657594 -0.95579194560297798 -0.75486412991143836 -0.90287179786303462;-0.47452295864739646 0.32551336037441903 -0.40636438613395132 0.48687592287682857 -1.9475020956932527 -0.95765551538501359 -0.0079526247390706555 -0.73777818180439991;0.53637615209700396 3.7520310497336107 1.0341360501085672 0.62771334171762538 -0.68764114066098003 -0.11867953926815877 -0.12236397775696431 -2.0614977086998501;0.92990587564916183 0.42326945665919707 1.1158645835686134 -0.94347884943331295 2.321762908410141 -0.4146735517225355 -0.67837544225837354 1.8697564542082219;-0.30491963644321274 -0.31389358039219495 3.3672024649316641 0.94399646692007266 -5.1396692335940815 -0.035855653425468453 -0.1420430771693896 1.0550416149543984;0.20760101711598875 0.2120342441231311 0.4468338048798523 0.066746202999556484 -0.075904979332216072 -1.0335297588596595 0.30719821122944635 0.8945789353641177;0.14395562676610929 -2.8092905365634757 -1.3387027454347109 -0.25837199834916053 0.95421917271561862 0.95772113371440848 0.77756909751388514 0.74890269891923789];

% Layer 2
b2 = [3.9159442114469356;1.9379512262836629;0.10606775329503758;-3.8014601934964505;-2.9908363587985565;4.1249354529026094;2.464291835282824;-2.0651924750494248;-0.57979122054274757;1.8734610344394156;7.4354457690014257;-1.2463165341895441;-0.491466055856004];
LW2_1 = [-2.7645998639735709 1.0471754755408895 0.99957621450416978 1.1110999483510962 0.35698599601209574 -0.53915468707801528 0.35310929253451334 1.4783671911659655 -0.38413299515377636 1.3321634503166573 -0.24286128682537769 -1.5780977671508596 1.4984822400017317;-0.60292532155497747 3.6360765208541341 -2.6733733371124422 -0.21631979893984699 1.5521735375672387 -3.9072674132892167 -0.41352336662973682 1.279581739417615 -0.77389405158481062 0.83873734395856292 0.75126429285567242 -0.4710631604785267 0.47004846974718767;-0.87978456126459548 1.3495493360652377 2.7533768512349792 1.8933353500471184 0.82310607634778898 1.1768636596087061 0.85985074095081127 0.95285996973696352 1.1732973450365354 1.2333917480373531 2.35722272950879 -1.9431466029228517 0.27489883955170452;-0.28004810425235194 -0.38962640310297503 -3.9367517235383276 1.7151235076455014 -0.3289430069963426 0.54641547064668694 1.3275065855999282 2.1030309124973252 0.45759217110914341 -0.9648723275470763 -3.9291069453092256 4.2443362947759278 0.83210517956939378;-5.9353770220282485 2.37429382733509 2.0262756189986488 -4.3293724717278952 -2.2296828141407623 5.2965498724388267 2.8883986243725359 0.49980485811649011 -3.0796553802368121 -2.3368640820693645 1.6214202620219296 -4.1702203412549315 -4.4756149757016734;-2.8827528510394376 1.1908978526352922 1.2436867438034831 2.064551756249986 0.23542293236767453 -0.48836943821161 0.95642024547257276 1.4835091325359617 -0.26665738581968973 1.3285405666691192 -0.23175530815365925 -1.7735419057398969 1.4246000873711009;-0.68556242604988504 -0.09714863039746531 0.35536223224237734 1.792537468813578 -0.37308185037578462 0.54059283431033345 -0.079144985968626361 2.2157469802808634 -0.51454411258954247 1.9529309134431485 0.72777339511815287 -1.6191504566048007 -0.32529424089422604;1.1321339738134164 0.22382852847390322 -3.2443783255772063 -0.81634212956640861 -0.89332263682169288 -1.3992640160037695 -1.2356190607962698 3.3813538012470863 -1.1112415476648227 0.65386527149215035 -1.4092365651017211 -0.61269461978616102 0.29944962928509594;1.5991440658993874 2.2277238719881218 0.24995435239925198 2.3584613853373546 2.9115823143815067 -2.2437253483099129 0.63347967285186091 -0.36131023918925692 0.7212475858774795 -0.28369070126371054 -0.024152208683571246 0.73188304970401097 -1.9966188514252106;0.78691521395995112 1.5863626344887412 3.0007147620091987 4.3422330332680286 -0.85554794784225674 1.4784272745661009 2.1343674916871422 -1.0820743560455259 1.3370963165954228 0.80532714514501935 2.1981713409698669 -2.8417576148703345 -1.8684582999736348;0.60713686808889478 2.2096113156774302 0.74442192599693191 4.1428719579829441 -2.2695091436300507 2.9127031806214805 1.9973212868461598 -4.3675691738557756 0.36847086607947699 -1.1475167903942367 2.4144646535463332 -3.4873578627262991 -2.0377812471685046;1.6763158357032917 -2.6411547077463786 -3.1420865628710994 1.4638108313356968 -0.83797412617005329 0.28708926348251634 3.0518138276369631 -3.0265947516350242 -0.52961105647837792 -2.2963236453164435 -3.0942686408845748 3.3732532296645248 -0.75550793290582263;4.1263820949977381 3.7947759578250011 6.0907452152710766 -2.1986448715321476 0.74231371211766262 -3.4768404844199852 -5.0508517586067958 -5.2301652862657235 2.5127642831406627 -1.5999096975719698 0.4339594342754749 -0.39504719947418077 -3.7812861095013246];

% Layer 3
b3 = -0.30576348606950948;
LW3_2 = [-2.7968164613097355 -0.099072089099731434 -0.15219334506779861 -0.086527839877602278 0.22450551227540927 2.689986800426369 0.15267195743402528 -0.087209606816674237 0.056679194514017851 -0.12224457713113789 -0.37558313304246033 -0.14074848082315405 0.05527393847619156];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
