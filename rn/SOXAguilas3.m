function [Y,Xf,Af] = SOXAguilas3(X,~,~)
%SOXAGUILAS3 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:29:17.
% 
% [Y] = SOXAguilas3(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 13xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.448430493273543;14.4927536231884;11.7647058823529;0.00666000666000666;0.02;35.0877192982456;0.0561797752808989;0.00588581518540318;0.125;95.2380952380952;90.9090909090909];
x1_step1_ymin = -1;

% Layer 1
b1 = [-1.9037275090610775;1.3555480948549934;0.4536939720126999;-0.88593390199849986;-1.0654035057093807;-0.67124749276686024;0.28123608062422356;1.1887106889248622;-2.0033521209510887;1.3796318892098882;1.4593344529757055];
IW1_1 = [1.0331789102164379 0.46482678666368904 -0.36070710175894161 0.53125178577789056 0.047119428564814658 -0.084294518978381403 0.034664266354266463 -1.1385949069503307 -0.19131527205575466 0.0512332107289558 -0.0058705380727716704 -0.14142029791857452 0.14547579050101747;-1.2745766338864259 0.19933040843583796 0.18856637585510741 -0.29876176885987038 -0.070013797969873601 0.14591583497314736 -0.41168359748815708 -0.40654335752512683 -0.21455794952573928 -0.22713154363653429 -0.13546932941391035 -0.41814071934005798 0.15404710646905675;-0.01423744890299725 -0.30687320956736003 0.19302566668764984 0.060167520498494109 -0.050022528090766842 0.60066100647758247 0.41452339879385974 -2.3756018984147649 -0.14787335702668336 -0.15598150286549728 -0.01092989574368293 0.46547765385895246 -0.18172161631542574;0.069966514262186502 -0.70234010147066284 0.26900481227485512 -0.37050537754189644 -0.017902213263119353 0.067304017058427951 0.12991112566434002 -0.57050133101667233 0.35963066905827129 0.096915663578948028 0.038600221154631957 0.24736572213365912 -0.19601021250679215;0.21518760643029461 0.11184639377682341 -0.27444738035222416 0.86783733367477456 0.011321199157179048 0.64946687597783437 0.15951657857430576 0.69286535352271983 -0.39584197381545466 -0.4019693849584467 0.87793071877809092 0.60786963079114487 0.793176157826327;1.1428411253363375 -0.94106524552034676 1.3045495128943867 -0.38617582209217716 0.59419263030864511 -0.97813925474391539 -1.1135626859445651 2.4125095276636714 0.23272707379674379 -0.041228386950281602 0.84340202761656191 -1.5890403723378823 0.41975050536222691;-0.0001479212854018047 0.36602972044513782 -0.13326417300128809 0.17034229786645508 0.018862344979798648 -0.0079150702141144759 -0.080369019860886612 -1.0841223543021148 -0.15026759170525661 -0.043819404295865394 0.016926948727250958 -0.09560421934335861 0.071244185819649489;0.058436239478097771 -1.3843921078305927 0.072436695042067525 0.028268355479313091 -0.095745997616724893 0.02186250696367327 0.02559659450531596 -2.1235297548258338 -0.33595424653910561 -0.065001891520729826 0.76100981952516888 -0.06161617390950129 0.39755781364233983;-0.1445181292863027 -0.59209044053879212 -0.50061649017427456 -0.28975279561902478 -0.40750401861187263 0.62584251350780595 1.3851761582587763 0.98582948953253469 0.80508887107812943 0.75224257384960236 -0.14689068081197501 2.742916553018647 -1.5942457605873281;0.099225680441248243 -0.34238768291258648 -0.20743611379742094 -0.44980024773067379 0.36639477438032586 -0.6567261996373257 0.28974692301740246 0.14360978188027798 0.43653483545340493 0.48722004008502057 -0.61563381933745653 0.036502646583206177 -0.24769776476310551;0.74138809710960507 0.0531732991747738 -0.27604802056827876 0.25388598939270762 -0.63487962211761351 -0.40129337727817327 -0.19190692772366078 -0.81504154478477131 -0.029716015814508237 0.58872952484957775 -0.65615802540567991 0.12701190507492868 0.4062719463007694];

% Layer 2
b2 = [-1.9012169385567117;1.8053765130706996;-1.1658987904597184;-0.54507294918574378;0.40113778306357517;-0.060129985028008717;0.27502024416360848;-0.85245894735048533;1.1914659324293437;1.6432590294328895;-1.8598173408519325];
LW2_1 = [0.8104465681161499 0.0086055759079671622 0.016950293935562175 0.027638293377796719 0.71807301245887212 0.59728944109190862 -0.54331010097540677 0.63059318775610373 -0.40532830442635787 -0.28586815431286966 -0.81996332153630669;0.060586620874003398 0.080534797894724147 1.6281322227336588 0.25359503851368254 0.2659098123828571 1.3280895996187103 -2.2882002769124421 0.32034552281279099 -0.62343480941973817 0.18402755758261996 -0.27668639160841429;-0.0050254906491864829 0.41011382952995512 -1.1250723748519476 -0.2995238102088279 -0.38013370614599756 -1.4993012834636223 -0.94518794317904353 0.77694477078995516 0.19431728168021498 0.25780500214480911 0.41369220508393562;0.48799807590881006 0.88313461227244516 -0.33734510415855606 0.46412097110506673 -0.2641987829458422 0.50712925488336436 1.629623377957294 0.029841010545802613 0.0053316254124921468 -0.26614829777017918 0.47830967403896124;-1.1215983451873286 -0.76913819094824998 -0.54231204977807546 -0.37715595737016061 0.35099967804294702 0.42344664778007785 0.85666280902637215 1.0042434669702609 1.0517484387020857 0.56368754975164659 0.10670368800197393;0.063595418801524792 -0.32613084815534676 0.046230010403321281 0.47423242173938435 0.19200159310271883 1.3266736664721914 -0.3855676327821172 1.3486769809104235 -1.1843341725200331 0.39395207991069142 -0.068062321686865185;-0.59213850144654667 -0.82597756835668534 0.42324814235590102 -0.74374644843139404 -0.28199375960905138 0.08161099635638544 0.48322079484216585 -0.43260667860610652 -1.6262818870144382 -0.88369094696570494 -0.61057858087456507;-0.43248730809195229 -0.078621609378983257 2.141310695784028 -0.60239871556781421 0.7617115303319516 0.17290377978331989 0.21658568886731044 -1.2922140008593948 0.16897120175412811 -0.088197347526774023 0.70246460796527221;1.4116917979991732 0.63118938553689075 1.2690009083367639 0.77748952835724028 -0.48005625224176884 1.1075502503148371 -1.4672383909105091 -0.54379240735524759 0.39034067127955241 0.73415794324470451 -0.31928190938072193;0.33592416761633398 0.25363303419703892 -0.35018621267849803 -1.3350062395367799 -0.066356925689223661 0.76233377272163227 0.61136944594578768 -0.032281871975654047 -1.3145661744573434 -0.44985910390837791 0.35818127745618233;-0.10966471202573799 -0.40286631422097879 -0.15980312680491376 -0.713910378317553 -0.68231430593893017 0.046438019391468272 -0.050911692104705454 -0.51964952391097086 -0.53805417328626703 -0.96974809481525381 -0.08291894031657554];

% Layer 3
b3 = -1.1597026828613195;
LW3_2 = [1.3951662482018663 2.0599506325960877 1.2165528837453152 1.5404834040523594 1.5694356071023634 -2.4597694353765074 2.2084492505991649 -1.2590926056294123 1.3468403256375756 -1.4692657494207295 0.33080569774951701];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 35.0877192982456;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
