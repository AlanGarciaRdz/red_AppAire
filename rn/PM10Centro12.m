function [Y,Xf,Af] = PM10Centro12(X,~,~)
%PM10CENTRO12 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:04.
% 
% [Y] = PM10Centro12(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.281968137600451;3.74531835205992;0.00773694390715667;45.4545454545455;0.00462534690101758];
x1_step1_ymin = -1;

% Layer 1
b1 = [-0.10206434334469559;-3.1087360762282144;13.907704845998452;1.1038077955955261;-2.5949080115755616;5.4410793520095151;0.50516167892119324;13.734356021197458;-0.91938311504145898;-0.38227201225818419];
IW1_1 = [-0.89110623292880642 -3.8002841278370254 -3.2349644777205011 2.3835983951727178 -0.52515094698771059 1.3754332753812721 -2.062219083320568;2.3072921358330718 -1.5706458890957282 -0.15618678968597186 -0.5957425653134385 -1.9221498769490801 1.4934819887938962 -0.1352868312391958;-17.166607982015517 -1.0624918078038144 0.54515997684360606 0.55278088758173383 0.78724536074680984 -0.99783961482581263 -0.75936433541471748;0.20251925088927555 -0.36686491603711419 -0.054078520792174636 -0.22063124011680507 0.37777881310543182 -0.09664431667129865 0.43514951321998574;-3.8991121815779208 -0.217877776401977 0.68055050410125428 1.6027881753774029 -0.99064981814729802 -4.28142526859477 0.92654553552294905;2.7109168059601427 -0.41640620804205886 -0.20598007652250175 -0.40774820179143345 -0.61447006258175407 4.5627106679873091 -0.28541997325828183;-1.6697082358117969 -6.2212428475269244 0.41011515142992783 -0.91331581341539603 -2.4199439390599538 -3.6181648988999151 2.295751288645842;1.4593701666760845 -0.55773931388479936 -0.46412233675546083 -0.42937683352695805 -0.17379617591583152 13.700773420966708 -0.027199467897776566;0.78107737901952989 -0.75038995874007763 -0.0052960463501316238 -0.34975040335079882 -1.7612987800308386 1.162303101641609 0.52321143787017721;-0.050961195797650384 -1.812532116175839 -0.13005751751584432 -0.14239914594135167 -0.64542002710970925 0.08268835560497495 1.2811651801390933];

% Layer 2
b2 = [-3.1150743540405244;6.6380654998335133;-5.8391706335161784;-4.6333557402614245;7.4130715424005142;-2.3278813290920986;4.8949658698189964;9.3788852408783292;7.4559199004687464;0.56399984724764773];
LW2_1 = [0.73226578094022809 -1.2988383440476623 -5.65504890763677 3.2138801165809969 5.1979818611638091 -3.440245396735591 1.2620678223437181 1.7661651761347683 2.1418656483092331 -1.1820779045424397;1.1880832145132185 -0.12798071542467648 -3.6821247995512967 -6.8629361963124254 1.9949075333687594 -10.124923015681548 0.089534704998245659 7.5001377953592723 -2.8176251568142909 1.4392548899254596;0.61925552137531148 2.7877982954648597 -0.49897993750342007 1.726615302501886 -0.12105881999599373 0.42869843032146199 -0.91053794541507416 4.7213748263535287 -3.2923619957503139 0.82206771041638382;1.0883795365335318 1.4018877102405558 -0.4930042034213909 3.9030278639228886 -0.016997919782146452 0.40989906385167713 -0.0031734414057386709 0.48391311997748204 -1.8644343249862365 0.41746617866692537;-1.2765956598900809 -4.3046121776046533 -1.4992508170742982 -4.0238485804671216 0.72160042272147784 -11.003934925596296 -0.25597487834793003 8.7401127416673265 4.5435671511762088 -1.9796714762624943;-7.2522444588832116 -1.31769187321975 -7.0587529218747953 -4.1580617620300071 -0.6649072588174455 -2.9127151804542017 1.2424172931868527 3.6641370083202061 -0.94585207489779255 -1.7418491547972341;0.017894173412227297 0.11857521057360117 0.61681689544191465 3.7705616239986712 -3.703271602072618 -5.7693713694924504 0.93027904966560893 -1.521856954553066 -2.0589061098606356 1.2527490933776129;-0.34610061809918968 -0.64185720935747337 0.37054772699706134 -2.7855026532459277 -0.74909953085213477 -0.45404956389922796 2.7839874922369487 -7.3273556092997802 1.6446619602574377 -2.311295360570452;0.93956380279192442 6.237327978266161 2.2725737017831755 3.48790709791714 13.090932804918957 9.4494849755595336 0.96130370970584278 4.4296639787139007 7.344044106367253 -4.4728865744907065;0.12386520500107118 2.1348636859273835 -0.61522336853149939 2.1722559197055933 0.26113642839485945 -1.0041198106004783 -0.46862534734039751 0.23547453530395701 -1.741483967815199 0.069354097815867446];

% Layer 3
b3 = -0.58092281510323829;
LW3_2 = [-0.093830361058309997 -0.13279894327022962 -0.46295648766226616 0.40839521136832674 0.11825777106764998 -0.035852421017441648 -0.12936756489960324 -0.18089084870204014 -0.17774591840456108 0.26917704769687106];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
