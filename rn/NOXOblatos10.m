function [Y,Xf,Af] = NOXOblatos10(X,~,~)
%NOXOBLATOS10 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:08:32.
% 
% [Y] = NOXOblatos10(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;-10;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.100381449508131;4.05679513184584;0.195790504160548;0.00618238021638331;117.647058823529;0.141843971631206];
x1_step1_ymin = -1;

% Layer 1
b1 = [-3.0104494124101882;8.7795367361860599;-1.1300724234429218;-1.2573683742794932;-0.59847858533101761;-0.44582430838075748;-0.47357979243475601;-5.6983781312669484;3.0241049633768093;1.972451744154645];
IW1_1 = [2.2009912559786433 0.24960442686661971 -2.251379170980246 0.32326735395238021 0.9620693498320142 0.36606428946005209 0.11759526393349963 -0.22093128025203387;-8.3743515086940263 -1.9167453198515818 5.2958065307811966 -3.4441820382877872 -0.35098856476864809 -0.95186258758017361 0.28810268929676408 -0.76244272709009819;1.2438709772310417 -1.0302912789043601 -0.4642727852302671 -0.023631874632364797 1.2367130789267633 -1.3252002168902126 0.59985475000288691 0.15967543002408341;1.7109523563113997 -1.3878804106252884 2.6263469547817992 -0.75363124737479792 1.1052719180484394 -1.7270637478338355 0.4003961656153186 -0.35064634384755472;0.042361354976454199 -1.8290710395715994 1.2723577588375317 -0.29173636082702797 0.53292278544931126 -0.042660607714723742 0.096147345404964668 -0.14139410932437671;-0.53241887573458035 1.5869951897804613 -1.1384183885880241 0.43395537284066993 -0.69412316469953017 0.93081871598867205 -0.32795809922631747 -0.10105453713952044;-0.56882770224428758 -0.83605075048886046 0.0090660224963964864 1.8344459552685448 -1.930974719473799 -1.8233882646363535 0.35928305151585949 3.0359820041899663;0.45334092320406355 9.0954239926137088 -0.20498730161625561 0.44646974011433688 -0.41572079875612167 0.74502543306011759 -0.10159161881414405 0.11965293392953516;0.44910806362069661 -0.14464150940667808 4.3622008200926956 -0.71268171512154233 1.0946988298740759 1.7667997957319588 -5.6731915718018069 0.24746700721480547;0.23804531346081681 1.3531917735674115 1.388337671139398 -0.90522708768011639 -1.7152154663926238 -0.43902327430456217 0.30370082377935076 0.50249046850454393];

% Layer 2
b2 = [-0.92824474612165453;-2.8740837546579945;-1.2853478990533111;-2.0241065482407805;-1.0560856686514051;3.8733516215211847;1.5605375717063452;-1.9517023794549582;4.0005238908058303;4.3456045960590526];
LW2_1 = [-0.14117954432832022 -2.4864270832779742 -1.1220708010696994 -0.050736213597016661 1.9104618333712222 -2.9868628532735113 -3.0971131473706386 0.14665230645700181 -0.11709667537160448 -1.1127355704801183;0.96313936389358046 0.52044814421800922 -0.7071242861096072 -0.19920131974455824 2.1349976125260439 -3.2836395396565385 -1.4911470197173127 0.83732112341019127 0.75910020964185632 -0.16787563708493417;3.6996095612058983 -2.170181481673279 -3.0796153011006244 0.12252648545515053 1.4466113070672146 -3.5659525441332924 -0.20823313999094556 0.11774617537026881 -1.0237547078324496 1.0229435041574748;-3.6017349105779233 1.9795476492457262 1.3395696362930853 -0.61063936743816649 -1.649502267277094 0.84610186906337526 -3.4398976905832126 0.6065558718931181 1.7906527639842076 0.035656855979920785;0.62141999852346985 1.0736686130865345 -0.8701937565871396 -0.68903310885930436 -1.9677839469244995 0.96896528585246977 0.13316413623146076 0.9389808760784949 -0.92177060765256247 -1.6779133183708259;1.6019147777270812 1.8482602477520789 1.0471469016103341 -1.6669534043511338 4.2195604671629603 0.80509678466211365 1.9836509112647389 -0.55103942942335771 -0.038003191654122435 1.0535584039351147;2.5912137519173664 2.9181586951695726 6.163360378786428 -5.5096126615290082 0.7059932165928009 8.8214404052981283 0.28811574862051215 -7.1591988395671535 -2.9350942067850387 -0.91298418913892054;-0.90379025890780129 2.8900993590594002 -0.32264145459127641 0.97052682079586683 1.535954211076112 0.7424701952182905 -0.78251920514409767 0.39459925104566201 0.1167393590608274 -1.1765516765597082;-0.24248361374500146 1.0366227468681362 -1.5256375968382589 1.2593467092499662 -5.8587389240281098 -1.8355175745455266 -1.7970357031276056 -1.3757073320617255 -2.2668880880635811 0.71503443617882922;3.000001247392325 -4.3122765077056666 -6.1131765110877101 9.1357960280697998 -4.6515527442675531 6.0081627568037748 1.5943370126913678 -0.43567459048414681 -2.7058577102574595 -3.4558806973461142];

% Layer 3
b3 = 2.1350240442651303;
LW3_2 = [0.43401164496103922 0.1652828278451012 -1.1725832038625561 -0.88872653142353786 0.15318621435358851 -0.7134172854105838 -0.14055297341545281 -0.58931345213221109 -2.711639896824642 -0.36577952394920293];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
