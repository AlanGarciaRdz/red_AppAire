function [Y,Xf,Af] = COLomaDorada24(X,~,~)
%COLOMADORADA24 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 13:56:41.
% 
% [Y] = COLomaDorada24(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;17.6991150442478;0.00572573718866304;0.0175284837861525;0.0546448087431694];
x1_step1_ymin = -1;

% Layer 1
b1 = [2.6108314056998498;-0.56577163957149879;-2.5697785217589044;-1.5727770452128478;2.5363354699602421;-0.70659420230692493;-1.050349600832944;0.87987820648602599;0.016816613842356744;1.9692372494355568;-0.64390490202380768;-2.3146795757154028;-1.8863541480094881];
IW1_1 = [-1.7951248140420584 1.9655293209242608 0.58533447394959648 1.1744057115353699 -3.5895058909187663 0.86391730531728861 2.0733112381633467;1.4435333097255894 2.5138027683123201 0.87670771054004626 0.10004055056892266 -0.51854946173857042 1.4362475709037077 -2.3804457207249663;1.3495950560886316 -1.4205069428317871 1.2340922172251823 -1.7698818936679639 -0.36978780105210945 -0.23470366283364569 -0.14140553669688521;-0.62963322573699199 -2.5138383684320629 0.24183987688973929 0.87038526664756721 0.0042603446708352546 -0.37921271670381146 -2.2128176791021152;-0.99506271931271195 0.090670009063780158 -0.59882981571273519 0.82759704757243846 -2.0822458675031523 2.0707806359065275 -1.7233423841780435;1.3514622088487411 1.1700858440224247 0.50510064291477486 -0.36776521162478198 0.13321923718381581 -0.45759540921194897 -0.15980221404175793;-0.99645007142372999 -0.5450012290198416 -0.45845446156958786 0.10157002995845579 0.071431926066364601 0.82223498009721319 -0.63484354736300685;-1.1859357780621986 -0.54425049701364625 2.13836997355356 -0.6470742254543701 0.1228419179874472 -0.26387974300858147 -0.39398654502834535;1.7827616298612645 0.17630041069744859 -0.50416965789633583 1.1374906003487117 -2.4561460792080765 2.8433955233856558 0.55310137783703439;-0.4310582631375614 4.2406601954117038 -0.13307348832515487 0.10313805264328807 1.0502323093168791 -0.57931030125041905 -1.0837604326990147;-1.1888807090076619 3.3358122701828119 0.91889757212604684 0.0072853306295763099 -0.54155348614636045 -0.40925222473558243 -0.10582232833276045;-0.07919223424107609 -0.57212281701366774 0.80605692272641638 -1.7222294870438015 -0.4789679507159153 0.77767797911977865 0.58535563878046049;-0.3074765260618198 -0.25119562697385495 -0.45455890716697211 -1.0040219561660573 0.47755801235091327 0.92691660417231336 -0.19118143633355986];

% Layer 2
b2 = [1.2046858948761843;-1.5635969552252535;-1.4010453979780091;-0.87247879091458835;-0.51871933766700951;-0.73836182414724438;-0.90279362792256157;1.8055875750477111;0.15928085960389188;-0.84808119848793428;3.6622836170070863;-1.8154110410288635;3.4090191381958217];
LW2_1 = [-0.79479310256357483 -0.54759292461248399 -1.308975032887886 -0.53974262654891103 -1.0474570184758738 -1.9000955799032817 0.236001054512639 -1.5899319076141358 -1.5050606049856661 0.77167532320312271 0.86124077862348503 0.69487021340617983 -1.1458386847029094;0.29816026975152798 0.12627490060786398 0.2376055090259182 -0.6139972208401937 -0.64310369755058394 0.19860553355066207 -0.16756561725332797 0.56516052275200002 0.99000917282784096 -0.024518727320095635 -0.18528181710999295 -0.72983372484673315 1.2130456304578165;-0.28547261391875928 -0.62589891972661105 -0.55208311738361016 -1.0786411885312019 -1.0931008564609057 -0.4444671813812191 -0.95299355263955665 -0.14884344671562166 -0.90940722391093165 -0.12359438440853102 0.52399469806436239 0.85866951225636579 0.35267904009189521;-0.17702861157826197 -0.5630506612167383 1.072072837664976 -1.8542959750549437 0.026010285519078837 -0.55711279327358987 0.58277533976464857 -0.77527980043397038 -1.4147947225885067 -0.82768009786619279 -0.79938564748111685 1.0335368883022091 -0.70947904582602606;-0.31145285121400346 0.74862123207114717 0.66707997479550296 0.55769939571420335 -0.49780279588066551 -0.19801457572543965 -0.174654104987995 -0.97756760463322367 -0.46663265026508471 -0.65309515896141268 0.7485277501677351 -0.490264448387422 0.2112747445314429;0.15271328393632386 -0.92391016914559865 -3.0359339374160781 -1.9779646916954616 -0.91410012942297014 -3.1324146421636949 -2.8368165212001819 1.6653902042297188 1.435858797064816 -0.78270364675120452 1.4369737342466844 2.5599960579985441 1.0540214162957398;2.3044473928878473 0.44708151581170641 0.79263339695142165 -0.15766226528817961 -0.318254108922845 0.37490942130807725 1.534407952311688 0.56124112571115325 -0.34958215903650175 0.5719568590101195 1.1562463808891983 -0.32868235928495437 0.24235275488088159;0.8786830814200125 3.0125984883523445 0.70240604984319621 0.39828110301321745 1.1341789791962067 0.66463263327567246 -1.1517319452418682 1.0275491731132727 1.0116025468599732 -1.6990159735399988 0.71136011307331326 -0.85762008190756789 -1.7167156738570517;-0.39278672251380065 -0.2221167618019225 -1.5123154181462666 -0.39838526400506197 -1.0839986661033403 0.21916720180942847 -0.2096002013864609 -0.69908344793403487 0.25459110748988056 0.36739956068286017 0.35516758334881776 1.0935254175537952 -1.179878954116506;-1.0704836425121149 0.51449710591220799 -0.72965664115011875 -1.472335558114475 -0.4729812854905347 -0.068714561968376248 0.83290900180699379 -0.71532909217700613 0.33679106591540597 2.081606919802347 -1.3625005296575623 1.9423440664539695 -2.4216546816594793;1.2376898947545338 -0.56647911548823815 -0.19778093461350518 -0.45894593575749526 2.9888073072337389 -2.8933645979948972 1.1274871682580883 2.0255320945202588 -3.4309997070029503 0.8205576208972527 1.1181808537377191 -1.5453086617918432 2.606326717969877;-0.58326022936454924 -0.35463588191785733 -1.4650729021824809 -0.082742041508677436 -0.060866568072549601 0.0011415918883424525 -0.41349259807680733 -0.65644407193016885 0.48750601282234779 0.36253513490114159 -0.81011918142067185 0.20269820101095856 -0.33849678589701487;1.0728762380975552 -2.557062230703413 -0.84805178143227067 -1.9598959722052007 1.9012960995251771 1.1984688967560833 1.4124064133187901 0.46433311559756513 -1.934637848947196 2.4480995859841328 -1.4817458899015861 0.78213920129926306 0.0076617079525453657];

% Layer 3
b3 = -0.47046909604680115;
LW3_2 = [-0.21612096966723157 -0.91314296013107765 0.55831556711071362 0.29676494040356394 -1.0955794836102919 -0.24867716312340665 0.9738904324839931 0.5459042192420358 -1.1943924757069606 0.64157635432312166 0.41343313151735139 1.0362847498979444 -1.2540135642189267];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.448430493273543;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
