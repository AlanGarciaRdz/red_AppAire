function [Y,Xf,Af] = PM10LomaDorada19(X,~,~)
%PM10LOMADORADA19 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:13.
% 
% [Y] = PM10LomaDorada19(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;3.96825396825397;0.00572573718866304;62.5;0.00462534690101758];
x1_step1_ymin = -1;

% Layer 1
b1 = [-3.2001832577367249;1.3605552208517058;-3.4163255340521359;4.5722773977293238;-1.6949965181974413;3.9645803252722858;3.3322349780581728;-0.17203519339433743;-0.21736571331734308;-5.7788445683437271;5.2390759211392393;0.031973678141089076;3.3893132445468765];
IW1_1 = [0.53608683635402965 -0.38227976539598318 -0.720804548874872 0.36781643438644063 1.0618044470417147 1.395702221132094 0.55751865109538379;-0.14457530068486832 -0.86938922373878713 -1.3545015169530528 0.30305666083905347 0.17418831184687297 0.26555666649458198 1.1585256957589667;0.42325496901393234 1.4330858197811238 -1.8061956743077936 -0.88733709447269205 -2.5291244867018396 -0.090982753539726735 1.3175233073526671;-1.2864948851178106 0.16167068821249864 4.2328301178946823 0.85379325265658668 -0.36048352678974876 -1.5668434012967896 1.2208844728151955;0.073947639557375849 2.4921759719859762 2.2588618857042357 0.17361308848589768 0.76214897296598827 -1.7405516577633515 -2.0222905312173611;-6.2259613280392436 -0.02260824852006342 4.4400173079524503 -4.5502611264549504 -0.42712677340934901 5.7284724524662183 2.2516938112489315;-10.707739138845017 -0.035469960138974473 -0.12106300739817852 -5.4761575014267905 -1.3377066195043201 -2.6198655396578694 0.90934622362559669;0.59813309155693795 -0.30095158685550599 4.1025530644345878 -2.2220187578785495 -0.82190304226481914 2.0675481034392691 -4.2461462712066593;0.029019996518837687 2.2111795035492285 0.029898809484224749 0.51136351057805707 -0.011867696979808509 -0.43067417863726937 -0.39793628335885178;2.0424884546576751 -0.52448944038971079 -5.455917239841666 0.81991221743566656 -0.69819255070853203 -0.67859607393688104 0.86949119566421196;-0.27180933133894253 0.44495420479334136 1.5656241099260015 -3.4641682904471613 -0.28645387078033957 5.569023492353498 2.7548808979285537;0.24322977273556154 0.26765033786612191 -0.64283618569406076 0.35598592180547983 0.22509496397052781 -0.051357436539625816 0.25841882007127198;4.4203573870273098 1.16673618053646 -0.61804075225617217 0.40026613820506518 -0.10691451206496699 -0.50378530318807002 0.21677114916427198];

% Layer 2
b2 = [1.3701420556837649;-1.3504406507290401;-1.039089461262209;-2.9746490533219614;0.2094289429492065;-0.19305513173569999;-0.59782239047006436;0.013068358722045828;1.2243901486412005;-0.8683541921241017;-0.52209328262474286;1.8942429517928661;2.8611130791025539];
LW2_1 = [0.078056321936946352 -0.027836959235889761 -0.20710399382251041 0.5656331530518357 0.71740824339452169 0.59198192383186998 0.31087238918411292 0.68614971568549521 -1.2335033492096052 -0.73802554266303999 1.3896749921047054 -0.16599723689777293 0.31588000848584552;0.12609006637887599 0.98300900007384528 -0.48272529596426483 0.49472208511677623 -0.52322673696135369 0.025106134434073956 -0.14682667585081538 0.20944127411487873 1.8312260076939535 1.421676182201929 -0.082394781697445074 -0.36510219611902012 0.20395411672450386;0.22272529759929158 2.0245497741431553 -0.556075651095568 -2.2618308455164198 -0.68630489186473032 -1.3200993328529982 -0.83857981173502616 0.58191421487663431 3.506773738553925 -2.5404947567492844 -0.35174525764188502 -1.7102494423462333 0.1750624042147392;2.0707959528744913 -1.9848732804279123 -0.78200957078374311 0.55960431271158873 -1.7024690253698 0.69513159246604428 2.8791547023588722 0.99907414896859148 0.73237984460736238 2.3556723642717952 0.63828080550315203 1.7472481744684758 0.3442249650414172;0.45081233902291362 0.15500056877125934 -0.05332691302223818 -0.37381516966024747 -0.76351631791664742 1.123255519868918 0.77613455440645296 -1.1337301192152571 2.1498432836698864 1.3043093175750229 -1.8015130258656298 -1.4955427293331449 -0.40107548576646262;0.18539829856437387 -0.46968113164430647 -0.97181740572059427 -0.70152518818133114 0.1038516358428269 0.74123219531835738 -0.93600056122184161 -0.61822320392039332 -1.6594707788695822 1.1232829124893506 -0.30738194679588482 -1.077031567541511 0.27048893212863367;0.45688422544689128 0.046626865156575936 -1.0996216801742233 -0.74688481601162449 0.062536797594496082 0.68154121185790328 -0.95172007139191472 -0.76214284825513834 -1.2935725619103389 1.2548381345739301 -0.43585533676785132 -2.1584625691589672 0.3470270900747135;0.55399915925057075 -0.87190552824111145 2.6104457929818965 2.091055236922486 -1.4877733493798377 0.34995776146209145 -0.86829153647174884 0.051689621649677803 1.1220027456091217 1.5241980422444241 0.047148202089633731 -1.4072530921610678 1.2194700777163114;0.27630495434548508 0.11353308268666656 -0.073391370627702332 -0.50358196644877617 0.13207640494804149 -0.1519753472387636 -0.25307391141728841 -0.17489413369296428 0.098066975841524628 -0.75943358558895846 -0.35549204943494844 0.39629509153887632 -0.16279992236731755;-0.52185410530375687 0.71917223819264731 -0.25020708703906624 0.57820953023957244 0.23884669982565387 -0.80171466072196274 -0.023153042336079718 1.3258249175090275 -0.65164837302156542 0.18729481984343935 1.8919461506981499 1.2207284426051372 0.81498275423320476;2.050577039358739 -0.4414525692428159 0.14186156058824892 -1.2307786867464163 -0.32228411413729841 1.0334397709195486 1.4062490578461502 -1.1607481812962477 0.90967749413258892 -1.9970623068276081 -1.6938477678986459 -0.98047856376413578 -0.56810474312275272;0.026971390472297338 0.0145992272325981 0.73705374089472775 1.6240815771870829 1.1940783918633489 4.4332987147363356 1.516886727623673 -0.27255569736860369 -1.6918925951027437 0.48045746757850094 0.95915420619862979 -2.5446222010566166 -0.19305701814585874;-0.29024162250767871 1.2920958219317884 0.97679500677871556 1.4782790128828083 0.65218166952538359 1.0698061984051688 -1.2614970836784738 -1.1359157455235798 1.4159827375647485 2.2000490887269688 -0.36753499843515358 -4.536516045846227 0.31368693692017002];

% Layer 3
b3 = -0.49415254860340718;
LW3_2 = [1.2031325452741564 0.48406713640417276 -0.1215952551030567 1.5879489435226464 0.57680846989221712 1.000787453315678 -0.99971322038614263 0.07620402018728227 0.64037623532256616 -0.96841562662495118 -1.7644147389448539 0.11692245524157499 -0.13580135429679807];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
