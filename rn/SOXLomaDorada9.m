function [Y,Xf,Af] = SOXLomaDorada9(X,~,~)
%SOXLOMADORADA9 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:29:32.
% 
% [Y] = SOXLomaDorada9(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 11xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;11.9760479041916;17.6991150442478;0.00572573718866304;0.0175284837861525;62.5;0.0546448087431694;0.125;90.9090909090909;29.8507462686567];
x1_step1_ymin = -1;

% Layer 1
b1 = [-3.321176577422198;3.0239587092084408;-2.2492548697322752;-1.5925241362888916;-2.5813024705729601;-0.29940982552856454;-1.7591084956142398;4.8595229799403228;-0.4410786061512082;0.17535293377360617;-2.8033664963691809;1.3055403143804336];
IW1_1 = [0.13704321568590119 -0.62099534550585056 -1.7184052898970235 0.33247727850611541 -0.18918872786838387 2.4151227955543684 -0.61869570631566218 -1.5055771228413668 -0.70814545550252983 -0.16549756331746809 1.3170541373978373;0.89321877317833109 0.023433346042008557 0.66310070288436496 0.75014097363436183 0.4859916405241313 0.92846884856956002 0.96936425623145295 0.089004305133989617 0.064048154086329467 0.5347158018279049 0.047529353800495076;0.43913071979521268 -0.85152022721491538 -0.2506786826880909 0.22133117058604862 -0.11700862222621822 0.31312577524739571 0.17483188112330228 0.27612659221397345 -0.5747389311181208 -0.2710660891375789 1.1682371673049732;4.4427263710403286 0.04580022811167811 0.28833795722028382 0.094415542238055428 0.22508067981044458 3.1477694993931746 -1.1140175337734481 2.9330409035459777 0.35874780015894514 -0.10018116266757625 -0.13411059914344076;6.1247578891402048 0.0024058012472516072 0.50382574452232243 1.5273353369881217 -0.27694514455598696 -0.59107755255575289 0.24845137957946467 0.089266820150288084 -0.67976979203773924 1.88982445029434 -0.52004539913201731;-1.2942603785889899 -0.72537035204323319 -0.76057114920775315 -0.86103650359415018 0.57686922005035823 -0.35569855898357411 0.62047592238940419 0.21625518181750636 0.59266198957398097 -1.8484792752037029 0.090733889306066906;-3.2280456724672777 0.31809036230356258 0.29371049238999852 -1.8704786412373329 -0.32743624566437257 3.3683221983128186 -1.2374109478097037 4.0258323421773099 1.2756427051573844 2.1806711060272819 -0.16502783782913943;1.2935894323509207 0.12878844728582423 -0.68900634159161989 0.78447381251503856 1.1342600151243512 0.12411637779583447 -0.26085331015242752 -0.97243648629053747 1.0239230574920293 3.7206838898241124 -0.52612376520573334;-2.8878225201765573 0.14235644562645605 -0.11426661735718577 0.3779490965715101 0.60399480377872805 1.0250969694074636 0.85564308337186068 -0.54779142856766827 1.3140985627617419 0.048070713192909856 -0.94583599121138828;2.8645104473291836 2.5993958544714602 2.7857315320019671 0.83100286886084229 0.16571945559682838 0.2902985896415381 -1.3569007002893314 0.16164059889414373 -0.40126226928662057 -0.21650384849181209 0.9628169557834354;-1.9833875814588362 -0.27655379738947433 1.7535794702766305 0.068223487164080512 0.82227604173720037 0.24185856664912914 -2.829720790740498 1.0613522421038777 -2.6501224381109374 -1.9482030532016186 2.0956450642253968;1.5069202281830851 0.17028401646090918 0.56473550695576957 0.29952241201147717 0.95793262682590141 1.3057338075214806 -0.17769572535101313 0.66416855345366066 0.24750146545531113 -1.8526900586466919 0.77292529263942988];

% Layer 2
b2 = [2.4436142729872996;1.1998140911200528;1.0168134859559872;1.113546542321084;-0.82067269114132613;1.2960641346977175;-0.23399745569991451;-0.81404626300026739;-0.77353288679050891;1.2057755586082193;3.1276601787843732;3.1503900260189757];
LW2_1 = [-0.73405740170311229 0.0032039444778693554 -0.25488763541023224 -0.44468390101561722 0.75441279885111445 -0.21676681591255642 2.3322533324187673 0.67874038771636747 0.21582000090899434 -0.012528152786642904 0.40420789256879941 0.50691713592279719;-0.22846360367009028 0.69897207486225843 -0.32704678340638721 -0.02794302436809773 0.83134871921723663 0.20739506549110118 0.1197049580987794 0.39509533068315184 -0.93448079400780526 -0.28287544461998892 -0.22531466778870404 0.55517587966508519;-0.17392544124913234 -0.35297304390423717 0.8027496700149277 -0.55624222832979897 -1.9273856610020097 -0.70733444816720115 2.0925933327300341 0.90360931585357085 0.31776276214917792 -0.27917047120592792 0.44118119165532832 0.40175043461814586;-0.16483613735498709 0.43915680700822601 -0.89477190046533317 1.4719161076957075 -0.19829490656516269 -0.55118171256788617 -0.11079281586620299 0.57323877409271218 -0.36596443554033598 -0.56194242315456144 0.099529406628536293 0.0341222264304911;-0.023159093470129594 0.5185595866941044 0.054357194794495446 0.12677999163713347 -0.25942751468224629 -0.070040841524729947 -0.37588669255144613 0.019225743978797505 0.7515143649727889 -0.078110906685844708 0.30572980743595796 -1.271418803759548;-0.62198091978114078 -0.36990142805509263 -1.6497664763684052 -0.22836432021637865 0.78521304647598988 -0.055394901829648832 2.1203203592816937 -0.095558001212082994 0.044644566610259159 0.10779340307530619 0.033495392666521552 0.43400453400236322;-0.15129590344232505 -0.36271285538568082 -0.57878448112335767 1.7628372166053339 0.58080469491289821 0.30330106923985634 -1.1135240370448209 0.69901701546245643 -0.34547859832572242 0.3251703226924737 -0.06293826694175883 -1.4434537436452439;1.9322154834289573 -2.1725273546608426 1.1245430970728911 1.3861433584014962 0.83867502030221042 -1.3609965321321287 -1.8856180012175969 1.109087403414112 3.2877953720758391 -0.56197480865563509 2.2106493409324952 -0.66877768013917627;0.12029483035993294 0.84905211606248066 0.099140210943136534 0.33967557609173171 1.592384569660978 0.72907109791833391 -1.9567720395760213 -0.15123725796651416 -0.18129940781758372 0.28982977020510015 -0.086756898530568866 -0.41050931711654381;0.79392113352062976 -1.4709798261763349 -0.21208127406116706 2.7436139380247813 -1.9360778863903996 -0.85061489427179127 -0.5319077707483939 0.811653578342588 -0.11719301802668028 -0.4381563580806016 0.19108025071342244 0.35351656708543988;0.23078469330463339 1.5282418473379831 -0.49208555453837055 -0.82117045821737311 0.53690509322989288 1.5562289868120012 0.91140107329451092 1.079475391948473 0.071703956150096781 1.020471705176873 0.64901843763714906 -1.1096060049123493;0.88439006649743146 1.7810975576405328 -1.8563902392416005 -2.5049611617747241 1.0128583759266998 2.9451928748881095 0.9350980928242959 4.1668665028153704 -1.8458223519878025 1.8218269313224782 2.7456152154066702 -1.9503330500472074];

% Layer 3
b3 = 1.5851258581974044;
LW3_2 = [0.92242491891070955 -0.34490694920652015 -0.83810510679089978 0.37613665034716737 -0.15250162183821542 -0.95831358402098776 0.063260664349401377 1.3385644114964128 -0.86954198391306115 -0.12461383227938207 1.7717600447999167 -3.0240210016515938];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 35.0877192982456;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
