function [Y,Xf,Af] = NOXVallarta21(X,~,~)
%NOXVALLARTA21 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:16:29.
% 
% [Y] = NOXVallarta21(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 9xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.412371134020619;5.12820512820513;16.1290322580645;0.00782778864970646;0.0208333333333333;0.02710027100271;0.00632111251580278];
x1_step1_ymin = -1;

% Layer 1
b1 = [4.9532905636966689;-4.2789757239227324;4.0680866621265004;0.65313496795341153;-3.336975907408819;-1.4209635998343983;1.9481757808373601;-0.12982340541920967;1.1896164190631258;-2.9091280114118234];
IW1_1 = [-1.5054127099420198 1.2176874041842707 0.99314911237293158 -0.30900433343495826 -1.2754105960699611 2.2209172960764079 0.42419810938967412 0.39580202146705862 3.8934351379387886;1.0603341434880982 -1.6914933725183896 -0.68318976439770729 -0.11489944435491896 1.1354139943911623 -1.7415684645072564 -0.38496878720125871 -0.001969530728574977 -2.8373346136864948;-1.5442706649725659 4.442319376385381 -0.055099340438905971 -0.2827855185094586 1.2418086432192166 0.13515773082195195 -0.20829156635073431 1.5697360648206875 -0.0066704409840276611;1.5143141023935436 -0.56196593069451239 -0.52209333341984221 0.51698224427597705 -0.13886333010851046 0.094886710613096642 0.22317793380934312 0.27538057285126188 0.014418438542266878;0.4643480403133548 -0.231951287031709 0.90834257087832149 -0.51171263584936033 -0.11237220342880493 0.74655500355705251 -2.5799861372224178 -8.1430183531804889 0.073998049263141921;-1.054908699846008 1.6921282920884932 -0.099659307373518302 -0.24909624581875692 0.1360508208469772 0.0052074865970503587 -0.19274917330191915 -0.022923451005980106 -0.014118815378051958;1.238959252448818 -3.8859781260922217 0.18020498208113159 0.0027844717150253273 -0.20676543477390724 0.17714001271196061 0.4929044733334173 -0.25458415555688035 0.073430120315226111;0.57450938365398541 -4.0611682207323803 0.041461333592505395 0.14870415838441703 -0.045231703189393395 -0.031411975987900555 0.002168077100886079 -0.58182172026440393 0.10766955880257106;4.197117732588235 -0.55890862814058184 -3.4558180041915012 0.35658660318286794 -0.072780352933745809 0.79887513247324116 -1.0866083211022908 -0.077752258119367257 -0.19400858319100781;0.64118703034955582 0.057775200345495853 -2.2828771677191573 0.8972390314156593 0.0056525931504601418 -0.064896550535700578 -0.61970614293791415 -2.4150957123016092 0.13655969780980581];

% Layer 2
b2 = [-2.5578895240121748;-5.8142671808582564;1.7023018049490379;-0.45131995984770384;2.3625868804659693;0.65922676219061416;5.0283396373015323;0.39765402488194035;-0.65295915023305295;-2.3937154715978846];
LW2_1 = [1.2880204798610404 1.8447633777349857 0.88972393401667993 3.1481549768066319 0.41389579289622963 1.336928310051372 -0.6813277590949891 1.1644862983557196 -0.45687473720167904 0.03547973273957921;0.77733339930497591 0.82688227158459393 -0.60527392466934571 -2.1967625755949989 -2.0464831473114882 1.9826145865965108 2.7308594502828254 0.16988521515116889 3.6061542618935389 1.4431727668009655;-2.2440281158948827 -1.7150086150280535 5.3741107451198644 -3.8514728697359808 -0.081952406215005352 -9.1340198626049318 -0.58672288099435654 0.74972987223796328 0.28120206281091809 -0.27213371055170116;-0.21200643556703549 1.5436210571067563 1.1673280098998347 4.8000207243891264 0.20189097543242765 1.8967613874828562 2.6602036081754585 1.0995672135532928 0.37130697857516365 -3.1415812268258576;0.17720791933118832 -0.2370151296371539 0.18811466829284365 0.97393413459250955 -0.50029979962045523 -2.5973371359996551 -0.63922790764590298 0.85664942021748858 -0.99918847393597043 1.8187333969522026;0.2118645481379503 0.27894314937190368 -0.61395646919181668 -2.1121277532397169 0.54704303086198203 -0.38922095357078318 -1.7085050405308151 -0.86073383267599357 0.36711637574831535 1.5420053343863176;-0.25372594070128951 -0.32692439520049549 0.60920831456534419 2.0328742340157926 2.5184280118785911 -2.4259009782218079 -3.6683668919685082 -0.13184739687483446 -2.5678416525225072 -1.978623223983365;0.230956921228478 0.21274260782354221 0.2094713180214163 1.1495796734305996 -0.37270534056455368 -2.009810558728085 -0.12896934650766376 -1.6862238295177823 -0.92235223034045077 1.6769022376624712;-2.8781800582472656 -3.4013703543601181 0.89467351418315688 4.1136631620094333 1.3356485496220736 1.5859353231064832 1.9156706349206725 -3.1685924005643922 -1.2171455034270178 0.95115864275627526;-0.41555992008069109 -0.39767839588612275 -0.11182366370544108 -0.78428910479284497 0.46617326065328929 3.7525153365605304 3.0272481964162861 2.2026838056390323 0.90374458456141094 -1.8791893395088137];

% Layer 3
b3 = 2.2393729437357908;
LW3_2 = [3.7297375017361145 -3.6879073644093929 -3.3074799680110516 -0.17486629389860073 1.373764616440919 -0.24119081357757427 -1.2180902317593247 -1.5691886205212719 0.1221997115282291 -1.4238154681905792];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
