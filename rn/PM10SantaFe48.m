function [Y,Xf,Af] = PM10SantaFe48(X,~,~)
%PM10SANTAFE48 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:37.
% 
% [Y] = PM10SantaFe48(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.172786177105832;4.16666666666667;0.00341273633199099;0.00632111251580278];
x1_step1_ymin = -1;

% Layer 1
b1 = [-7.8045902270256438;-1.946871120500159;-0.9609888823773024;-0.14207913574221367;0.47019533842449612;-0.17645837390701749;-0.11259637551514332;-0.11028791647137802;-1.2215737160374893;-3.3702362545142379;5.1256251170945282];
IW1_1 = [9.6670197766299477 0.50254426902592042 0.068560742320409068 0.52067187334647391 0.93176855660209423 -0.4278318738048667;3.1381790519811967 -0.052206721781299106 0.79933077455157064 -2.8445132776024402 -1.1982119234038047 -0.18946823250435343;1.6041554830224038 -0.055253374190368215 0.70831444737249682 -1.9816963825285874 -1.1025666770439322 -0.51823814109186239;3.284037111144968 -0.1408484751587262 0.063422747964832715 0.26485188866149567 -1.5446545392945192 -0.04902278090042974;-1.3550060245043336 0.016624706651162641 0.041686867858287416 1.031177053468225 0.77801596105439941 0.308330264444793;0.023305967413479227 1.7261712271022907 0.11045451481274203 0.22245114930159143 0.12766151467722739 0.029031586223764623;-1.7071765170036886 3.1365264057556699 1.1377834781020464 -1.0368471546071973 0.46555169942175167 0.42689563914780471;-0.7297903783212929 0.2571513780390684 0.19223729345897259 0.11626244256770148 0.15696373515980019 0.079760799627666926;-0.81045671315511258 0.94550111232115641 0.15808593868036791 -0.59826721844332809 -0.34001218784911175 -0.18276983201116548;4.4864358121943422 0.4647659252590482 1.0380597774325759 0.11786160298504757 0.017219994111052298 0.89361253334799706;-1.2235245768637644 0.34048654414242918 5.4674085079419985 -1.8117647385671305 -0.082306318996721417 1.0698792877102243];

% Layer 2
b2 = [-3.2903552971958314;4.4913467521243104;-2.8123851676987992;0.82258776094627295;0.44848105646888592;-1.1461047220280396;0.14008975758349845;-1.3427713697520685;-0.89908617841472827;-0.61144674951452049;-0.57277050194618029];
LW2_1 = [-1.1233084426325715 -0.60361395703200627 -0.70638225475805827 -0.58446829475052997 -2.8551393967297614 1.7442787260545487 -0.70023551628692393 1.47874886971773 -1.7361326127319403 0.024151675755042932 1.3798262145220279;1.2075685266238418 -1.8736014051480454 2.3418447787553451 1.5517863814122421 2.2364246065826792 0.10916731612547638 0.87092669736889028 1.4412916064934087 -2.1382534184799411 -0.53562366525966409 -1.5906679006522748;2.2877911126290447 0.079875469842921196 -1.1782875951516989 -1.2330566684353899 1.3254680876041913 -1.0261250530528736 1.6268856303687718 -1.1277659084702478 0.20376443140187678 1.0784815244820676 -1.1833843119432463;1.9965982078729314 -0.65059431849475102 0.81399666412379656 -2.2136742921172492 1.3509203993284413 0.78063114943565526 1.0629715598522538 -3.7144135572830601 -2.5132677482431443 -0.62152287968738562 -1.063022959630644;-0.20918539723932894 -1.6367161478579741 -0.068989892864070174 -0.47952520679568256 -0.44084170153299496 -4.0953814267458775 -1.1356519600930717 -1.740056153330622 -2.0827250083659306 -0.50414650047328602 2.1885734462704516;1.5937199572877043 -0.015461878946832985 -0.35673745862569034 -0.35298392150400182 -2.0640689118442914 -0.069752381643623546 -0.25431248169984838 -1.8311558051125207 1.6581271221044049 -0.16531307898577985 0.076618897036092579;1.1537307686559564 0.38859378430792169 -1.076041320509618 -0.82486834474071402 -1.2443615243522648 3.8444815884735353 -0.21691150026591066 -1.329699879619497 -0.17716263073055305 -1.9714880952944613 0.88654051859746674;0.72214366520199025 0.29605657795854845 -1.8674026072587522 -4.1452106061455227 -1.2417425903786423 -2.2847206241105296 1.043200622629965 1.0419988546415599 -1.0696307567862884 0.60355907054307034 0.22780554237020639;-0.88267580709692817 2.760130885833989 -0.55007422591160182 -1.7017084398548374 -0.1770510899643849 -0.8417918148236937 -0.3679787110840918 2.2249519827374744 0.18661315829425207 -1.0166589915216491 -0.13076016207979002;1.1871292388380525 0.20037576766095816 -0.4646591516325469 -0.45814829769900411 -0.70994556165866174 4.5302725424478805 -0.29374328042547931 -2.1257548801976633 0.75924997644944925 -2.3486166924901841 1.3793649285351697;3.1768015032068826 1.4386297362105769 2.9851565697663207 -2.0784049488488976 1.8913721049613781 -0.14423737611366577 -0.8719105157705439 -0.59847427855810331 -0.8519243199390838 -2.3165144531669251 0.82442574741388897];

% Layer 3
b3 = 0.81372800617020469;
LW3_2 = [-0.31027708153641226 -3.4524981046333458 -1.2379670608524711 0.2298462897682797 -0.059406740172193474 -0.58218608783071324 0.41149326810037945 -0.14448895483885121 -0.25953356083539819 -0.3069812461019315 0.1234284747462451];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
