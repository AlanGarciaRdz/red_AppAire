function [Y,Xf,Af] = PM10LomaDorada4(X,~,~)
%PM10LOMADORADA4 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:09.
% 
% [Y] = PM10LomaDorada4(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;3.96825396825397;0.00572573718866304;62.5;0.00462534690101758];
x1_step1_ymin = -1;

% Layer 1
b1 = [0.17998980247533086;0.87303519871076418;0.43795127899049296;-10.11729336402828;-2.5867901459763147;-1.5375034753049006;0.93367867505358448;0.50069055754093572;-1.7238869721445544;1.9934394592173195;1.6940333784009418;3.8377042329721269;2.0527436712734346];
IW1_1 = [-0.73681957542383691 0.93930364375829345 0.25188852112941817 -0.34025131299613015 0.0060629174141895344 0.49115661314093095 -0.971752211842284;-0.47568853004300499 -2.1643470132561764 -0.0405321973102283 -0.21302597277358393 0.82793484958383656 -0.34292935257285379 0.066524368254567201;-0.98768000897366248 -0.40604555390909619 0.14316760745349003 -0.25151470014854793 -0.41321900012229779 0.45790437243671084 -0.43327441343110734;8.869351361103206 1.1249216302358371 -2.3546725835171367 3.3167643486679683 -2.3725068040202495 0.86982278032234728 0.3787755146864844;0.59191204006763176 0.42911143705130672 -0.35059768029608557 -1.1651620486266021 -1.4693555542701553 -0.062556948919741104 1.3046905200505636;2.1977881566698572 1.8242432282735457 1.6703203393458168 -4.6401749290496941 1.8264686387090967 0.086915497080705673 1.5957418703718305;2.7442302891180512 -0.23915715758232906 0.30279759372629744 0.069113517189311288 -0.30442447398571315 -0.68212000849466026 -0.28197725019140124;3.9799806997699698 -0.21709881823177887 -0.10943443850051562 0.96375901492192806 0.12686954940657802 -3.8295803565532367 0.06555001908647648;2.6049103877454209 -0.50523824188663613 3.9613724080078532 -1.0247495837012832 -3.1733620449449873 2.6411558889992399 -5.1736720570794983;-0.48529443849876919 -2.888702079815848 -0.068279124285356721 -0.6188462008907859 -0.30084231040879578 0.44693216393759871 -0.20212826998792119;-0.63949912717590063 0.56513523285173817 5.2223187251986172 -3.0746275257543845 2.4479888295054599 1.0099378884884855 -3.9220926469038075;1.4664513172771179 3.8287342940014066 0.31305720686235328 -0.022633666902638599 -0.45652335577969461 0.70499952492375839 0.54435834794001681;3.8508419665069837 -0.12785641775756981 0.26186463450210795 -1.3951688101414574 -0.70483733489484524 -2.4998954546320959 1.1048151601684184];

% Layer 2
b2 = [-1.3514016985919735;-2.8952465035497617;-2.480309388910475;-1.3754459760584721;0.63440747050826674;-2.8528653035338745;0.25732521496989125;3.3973548303022456;1.3692964846761493;0.31745086406384804;-1.4882584926618259;2.7747745605473515;-0.32101363254749798];
LW2_1 = [0.083911246492468811 0.12300096753528938 -2.1048133108876885 2.3717174136968957 -1.9797647882834264 -0.071037996841211107 1.6240381353249491 -0.92263507646132636 -0.74272082246821114 2.1669108073827998 0.19848054552906311 -0.45345695290571264 1.7835222228155561;0.75818868393197303 -1.0182477993520831 -1.991713770621959 0.018393417374809561 -0.61499863143228017 -0.29276116410505121 -0.059609057150234228 0.45287663257094407 0.076914680000698746 -0.21068693543355527 -0.40887630297814842 1.648998107889853 -0.48528159215589789;2.2292174129273419 -2.2181276485870729 -1.5008715671523625 -0.14351043799552243 -1.4186700025583696 -0.345134499132424 -1.9060531367085629 1.6670467257151025 1.9562597750295037 -1.0547573278173032 -0.65356465505515438 -1.9362426914857578 -1.1725509448341105;-0.036517389112282278 -0.57616448251332697 -0.36351970793039878 2.1430831805340338 1.2280868209681515 1.3170064248384101 -0.013095905127332635 -0.27105666729447797 0.6609796072152293 0.57209893526952926 0.69211010243420057 -0.33208010432386925 -0.73353318650019883;-1.8125794847496559 -1.4721110816467775 -0.29472002199578218 3.3475362790854857 2.7106444536236811 -2.3908699585035218 -1.329784004045554 0.93652172569968073 -0.20530442443198854 1.4109722225759489 -1.6865900571654051 1.3815169743401845 0.78552137400624633;1.6143072738216362 0.53344641385641189 1.4684527589395553 4.139351758959708 -1.1623247315761434 0.18450576258222068 -3.0004256666065201 2.2319529332895232 -0.33657599432372765 1.7624127633097397 -0.36626059336719363 1.3908913726580943 0.303257603704639;-1.2639114813002761 -2.9283012534593693 1.2389747450456268 -6.383735327559708 -0.4281383221681121 1.0235908530753155 1.2748849449852684 -3.6260720585080839 -0.33954026481934119 1.834319178334171 3.2433243814244466 0.13601967897807332 0.036189567900243524;-0.86239032677752547 0.24570474998262939 -3.0088858578073352 -2.8123549684728117 1.6669076622156354 2.5143697305452473 11.299897925579051 -6.7046227144299566 -2.3018385417876948 -0.17655061000621888 1.902511852125657 0.49499351139675696 0.70854349133932948;-2.5652610388754113 1.0685281810550122 1.9258959077919591 4.7953133018748035 -0.26117598234741002 -1.1166940579515805 -1.5106132512594488 1.0799782744070461 0.10943826498990594 -2.6672352546604947 -0.48208816112031116 1.059734730350081 -0.076288035303954727;-1.4250279667865373 -0.55028407221882258 2.8075747565594269 0.69107765828742251 -0.42297193053977522 1.7699904705304188 4.2349654393812504 -1.2229715611095113 -2.2655384681069495 0.30617786378721196 1.1053800817978614 -0.27772368965177652 -1.3372863192439026;-0.71400013220364866 0.24814894043007263 -0.95815525322589934 -0.71709249542258702 -0.69945885944001074 0.091485631139171908 -3.2394961686430799 2.2799511734954394 -0.29626483112174296 2.3680496834214528 0.54161235262389518 -0.98140928964589191 -0.39600954684114292;0.39252433719228896 0.49802661157604311 -2.1221088825232197 2.4209742904968805 0.23418458725021948 -0.59949098734397166 0.86505969595158316 -0.752848543826662 0.029069443627599473 -0.29383001148572369 0.33553441429182401 -1.0365987278591675 0.99336240339044535;-3.2443268087180734 0.28715207794204667 2.7898002261789712 -0.65793263438755833 0.94438713454796464 0.58204261530407431 -0.96797793357887807 -1.1284588551534604 0.70937666424870127 0.28380848240079226 3.3813325023424867 1.4951518100214358 0.43968195380901898];

% Layer 3
b3 = 0.054501237988789461;
LW3_2 = [0.18857776862298742 0.65742159836771719 -0.083077825098397493 0.88581340937248776 0.14777797242784968 -0.3742453640692871 -0.76122236950653743 0.14136646262243113 -0.92459297013092467 -0.098025915717244158 0.35046657593211827 -0.55151011403681449 0.082923343089881293];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
