function [Y,Xf,Af] = NOXOblatos3(X,~,~)
%NOXOBLATOS3 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:08:30.
% 
% [Y] = NOXOblatos3(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;-10;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.100381449508131;4.05679513184584;0.195790504160548;0.00618238021638331;117.647058823529;0.141843971631206];
x1_step1_ymin = -1;

% Layer 1
b1 = [2.8689762570043991;-4.963779732053788;1.3014635930470462;0.58673664932334957;0.3943834493317645;0.44055009235145898;1.5668405462484249;-0.24635893909643156;1.9312195835636421;-2.1716983176811269];
IW1_1 = [-5.6646559523216711 -0.79081776381406665 -2.898558419967221 1.134632332296212 -0.01461567122239691 0.12993401857762338 0.48065306497296106 -0.59510496281851799;10.546447737424412 -1.109804709175515 0.64725418833172654 1.1759954927560141 -0.63486477316553569 1.157524492619594 0.14097418947939117 0.3218118454623291;0.15694790801193995 3.3074119445347545 -1.4214613692538016 1.6892752260561152 -1.7920940143632622 0.57828024050802251 0.12600818555474858 0.3315233270219578;0.14549276347364606 3.0235630158541791 -0.55807867676128264 0.51130239906109254 0.92492138431799686 0.19049854605881669 -0.16840606055132396 -0.09453898847814815;-2.870023191220044 1.9457366892721382 2.048400078100332 -1.3781794413940789 -1.5015479813775567 -0.46589990166367884 -1.4498080869999763 -0.26995801644139761;-1.4573390607378727 1.2521546674456752 -1.6418201812316282 3.1680096554631691 -0.48904718259032365 0.8784804195084055 -0.80240978220417325 -0.12385596235112281;-1.3312413348719836 -0.76153139724346997 4.2718284563199695 0.87477154076276054 2.2712501509137457 0.77035358916965724 -0.59076657110990827 -0.43467907182017346;2.1709875157313716 -1.4409819137332116 -2.225498938807462 -0.74310056504211131 -1.3153612200607037 0.21073286865998597 1.2669212273422563 0.28629969655880261;3.3595808583952733 -2.5689854530656349 0.10044311085802048 -1.1676478258786074 1.1658184735414454 1.0700887608785601 0.25453781722514851 0.30716037930404783;-1.144328765431144 0.24140051820993835 -0.71950081441112246 0.43165911264967105 -1.7083203377451268 1.0214977726556507 -0.23972761793104139 1.1894212266465296];

% Layer 2
b2 = [-0.051500196084910611;-3.3982159352358035;-0.037415443863455744;2.0506545671652514;0.39788880881921146;0.75205311831362998;-0.17653971488532597;-1.1226271118443263;1.2902951021021383;0.51357755691459395];
LW2_1 = [-0.56205371635560786 1.2176400882705853 -0.096768995996360407 -0.32097902493880237 -0.2941229846355477 0.051075094161870234 0.077713771753640179 -0.038079029317903516 0.30113109981477298 -1.214320796972735;0.34533146584213048 -2.3471484227412787 -2.1232798280858458 0.48269442143034569 1.4327544095348834 0.78576323673917692 -0.16977026640253901 2.0503294655920521 0.70393174802309155 1.4824377018418704;0.62586916596176279 -1.2703364852677874 -0.249314891614245 0.94141906373480655 -0.33130994773319034 -0.32899252292546732 -0.68929000186854428 0.49535364439209911 0.66890084723971044 0.027443711257013365;-0.059785350778070602 0.040787579421152242 -1.8082279594913611 -1.3160763583958821 -1.4669635539783492 -0.39126576886271974 0.46690267165588084 -1.164757723247519 1.8595895886029206 -1.7884762167285906;0.85942792335240004 0.088760549249945531 0.55696098197769495 2.5431571961591275 -0.14622491545278729 -0.40220277713536234 -0.31979528361639004 -0.37276941424438131 -0.29247003047940617 0.43116727319109971;0.73383934214852298 -1.5549213683738765 -1.9868369383896749 -0.86729916083337111 -0.87844101130578056 -0.39611982862071254 0.62905982007944894 -0.89039489862031163 1.7959162686756605 -0.17798846706373245;-1.302161154358827 -0.43549073657562498 0.046189371595203532 -2.5827078576555484 -0.63046668537229467 -0.085735022585170004 0.085796438256600854 -0.5565497856134074 -0.20238520716078479 -0.70927578086583254;-1.2353816264690494 -0.73385056557755257 1.6062318645619984 -0.23867818184684936 0.59393745007463583 0.69554872589891203 -0.31695695626514492 1.0024850526372078 1.7265708994629949 2.0195764444570257;1.3296062859278039 -1.1178758734663798 -1.9174732822734093 -0.28859870259642556 -0.023886002576147342 0.73324758600616935 0.98567277282687937 0.38749961755670365 0.26861027486689004 -1.8376312344199619;0.33780528147017269 -0.28592898821045792 1.1589238635897023 0.070567297835101683 -0.42681645758025982 -0.53459253289576858 0.088298867021632949 -0.85767457091644705 -0.61830786111805347 -0.093368560648071447];

% Layer 3
b3 = 0.22976050566387229;
LW3_2 = [0.98591545540250791 0.45738268506001944 -0.44757681443473746 -1.1637137918202693 -2.0714715972543809 1.160429241901811 -2.1622185527245175 -0.5183372013302765 -0.95288731115903014 0.97549098322814087];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
