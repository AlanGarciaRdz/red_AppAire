function [Y,Xf,Af] = O3santafe20(X,~,~)
%O3SANTAFE20 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 18-May-2016 13:05:50.
% 
% [Y] = O3santafe20(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [1;1;0;0;0];
  x1_step1_gain = [0.0869565217391304;0.0384615384615385;0.172786177105832;4.16666666666667;10.752688172043];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [2.1367240191898218;-1.5328544777966953;5.0277663912004718;-1.8177945992704294;0.36337700733474526;-1.0791002319524035;0.52950196630958113;-0.188820313827394;-0.47487177372217149;1.7076490764111867;-1.0006190049534398;0.40627963235326497;1.9874182793109505;-6.1941934077984762];
  IW1_1 = [-1.7207246060452124 0.070852060156764096 -0.53975838193881254 1.0153098126361284 -1.4907761546299771;2.1552109825922527 0.55306609337830803 0.32468672285214617 -0.3299508471651364 1.3651080127145903;-0.53331176717421946 0.70604002507495622 0.203085782287942 0.8886953358909101 3.9793416552532728;3.4512320244435384 -1.3466563343012126 1.9712903965294013 -0.57650764723300962 3.2066012336446921;-0.5430364788361548 0.58488917618027114 0.30240892102592809 0.69080509090408315 -0.74578333068631553;2.17530461929652 -0.34513185035390165 -0.60925224371590736 0.19673941208673304 -0.27761521847655601;-2.492767777754215 0.016068898879994395 0.76857871729216554 -1.658493014963851 -0.91599538095795563;-1.8988275132281698 -1.4697335152455762 1.3402491952860149 -0.041819332627679284 0.66034999935991601;0.81726162951732051 -5.6077207248995116 1.8012325681409946 0.56601104335204855 0.11643937326061243;-0.4175502910885866 -0.72993772816784885 -1.3202585993987264 -0.80768638392471492 4.1808811423756662;-4.5811781373928362 -0.25928704534031721 1.2376477978994365 -1.4082966616136263 -0.36066365876739143;0.29673167298503933 2.8047021027253924 -1.0145172095923836 -0.85024221251931964 0.35862429478886032;-0.21958953717047175 1.6792835822699925 -0.66534999753323654 -1.0876548034299489 0.83802738831709711;-0.3708870015654418 -4.347030776311577 -1.0626521016137378 -1.2643138649403878 -0.91078443088233785];
  
  % Layer 2
  b2 = [3.7587056448311342;0.88348829771195914;2.1068068146928902;-1.6499073811035221;-0.54163011100840386;0.75415738180306702;0.87472106082246126;-0.7887732962715821;0.091037234860715327;-0.52635171448513229;-0.35474505646888732;-1.6945773889632769;3.0825449472475057;2.6926776298223616];
  LW2_1 = [2.1323043135423161 2.6903787197735318 7.1266765699059578 -3.2267007834853092 -8.5014870216621556 -1.3368016877224553 0.56770148368745665 -1.2059155455129063 4.1429013481683885 1.5159494162118006 -0.49542443649472112 -3.7976232240023711 2.5175807539029855 -1.0833655288034152;-0.080072456547036097 -1.2259965995085769 -0.52786348969901009 1.0223694655493016 -0.26630519379962619 -1.6116560242944948 -0.8460417024494159 -0.69022138382965881 -2.0646732478640062 0.28049836895341596 -1.2748433153926697 -6.8175763721884977 0.44756315166314031 -3.9882863309542831;0.81857959248603085 0.86328203039669971 -1.9561143329138699 -0.70830353943809321 -0.51496188771083795 -0.049284595697418221 0.81722545959062831 -1.6370859869961285 1.8597528472636837 0.43408412717465844 0.026574495027117947 -1.3362013482605051 -0.36148691511326381 -2.734192375848703;-0.090785742303457928 -0.82613701959779995 -0.31219635987545863 -0.65312896876901738 0.022162508881622085 1.3407974312111006 0.097240214794534027 0.32358217257876937 -0.73982268013969577 0.39008265336890985 0.4386011080601111 0.24905809285614605 0.28189748789888003 0.38611821627850695;-0.79483182558330856 0.098045781048884145 1.0390010700889958 -0.98419897946460377 -1.7510764560334184 -0.58768923717386246 0.82045860995544639 0.26068556104720264 -0.14109510663310929 -0.53837972361019337 -0.13016915836960968 -1.8476970459051114 0.18814101038025069 -0.89010056078409316;1.4634465492533004 0.39799448276515054 0.48675488937967709 2.1656243838736176 -0.69120879075189612 -1.1040963578290359 0.62414396394216509 -0.64091323937184552 0.89394537648514705 -0.37973898549445745 -0.2045215949619866 -0.58344351496264313 0.18497520479047275 -1.0783590897189992;-0.61653201854579098 2.3476740323532996 0.37777396313205081 -1.546039765217414 -1.5752698311389064 -0.96321441214191517 0.36477644287627947 0.092963816868066651 0.71718799349374496 -0.60028870392267475 -0.37435005422860679 -1.4350096577202713 0.66423313206942725 -1.6486585035767798;-0.042100090120945621 0.086839229527738246 -0.44998851907269644 -0.05272831104905986 0.19784721850911433 0.67051629765759402 -0.24652667394751648 -0.25921341201991432 -0.04838891081367877 0.31032048950573843 0.33539750944863095 0.51885846791325996 0.28751402030864365 -0.055504865182815208;0.65542752708957275 0.34094586514467734 -0.23857027394473135 0.32692607092991149 0.048151233820882239 -0.31848306594798925 0.77070352354454452 0.68774972904083131 0.65944554967999003 0.2353717067074097 -0.23107962437354387 -0.77361357365802474 0.64538171117208309 -1.8276344917880794;-0.65550330050795713 -0.23915172299465312 -0.34830952655423142 -0.30383982940784005 0.096632745296111558 1.2722665647077818 0.028818135627900924 0.025803265867172097 -0.3874189843170861 0.36386916343223946 0.52450666142998592 0.11441257073636432 0.44636489939898205 -0.17068182320799657;-1.075748130177185 -2.8521940953191547 -0.10828972977420737 0.1530939920733965 0.66991608611444764 0.96376460665325347 -0.62467477986754483 -0.41260402296155713 -1.0336933608892409 0.49154499004661512 0.47547595473402754 0.95487088483429894 -0.8030846110447758 1.7504603610483134;-0.46918727030091889 1.6179984826792861 0.94886577652612136 -2.0396526483152644 -0.27605454824575648 1.079377468142136 0.39175345555885854 0.69239941015467343 2.0496189767834654 -0.67830501342886618 1.2097435676534296 7.1279373184366621 0.37193731112351175 4.4645199636985859;1.4461402431380965 2.9950849469833942 2.1319697548876073 0.81978367521002582 -2.9335134706454977 -1.7378959311990552 0.6245597244533535 0.64788126094368526 7.1794180653090578 2.2429264425463602 -0.87612706734947721 2.6401200644516138 0.93817082595447177 -6.5953609166975831;0.13321856412387315 0.94070545773339553 -0.046470501659916272 -0.25268251539777109 -0.35728413550359933 -1.226525679073549 -0.45206803279746238 -0.29492747577306688 -1.0558869261891684 -0.14621094967761622 -0.80687192405485519 -3.7825056316676675 -0.52267879824715735 -2.1206154445390748];
  
  % Layer 3
  b3 = 1.4067464478697929;
  LW3_2 = [4.4182031681557268 2.762726699623625 -1.5285323648049514 -2.7141482134644894 -0.95735116743625615 -1.8571173748113889 2.1352254426918966 -3.987926404754615 2.0679110824070319 3.6723709604612522 1.4651328231377558 1.7021502406971287 -2.812351624170998 -6.4730210130464476];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 10.752688172043;
  y1_step1_xoffset = 0;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(3,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
