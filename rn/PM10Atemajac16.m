function [Y,Xf,Af] = PM10Atemajac16(X,~,~)
%PM10ATEMAJAC16 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:19:58.
% 
% [Y] = PM10Atemajac16(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.00968992248062015;166.666666666667;0.0561797752808989;0.00614628149969269];
x1_step1_ymin = -1;

% Layer 1
b1 = [3.1271425989706745;0.59310527073572916;5.8237643586408758;6.4059751026579121;-0.61385850625667338;-0.99002351986229786;1.0730205802487098;1.1872479999917134;0.75654087318649621;0.89804443980321746;0.84321141102940744];
IW1_1 = [0.28669488244782892 -3.5580239568505005 0.094945861371439247 0.54536323561463351 -0.62200601902242181 0.12706557587616574;-0.038498489467593294 -0.23569814775012329 -0.32241597112086201 0.56139418522274975 -0.44696231449906548 -0.05108373744156941;-6.2039278675696101 0.34550915782086755 -0.58201149704511712 0.3676237093035748 0.81418345554783833 -0.69733594583783853;-0.053565108364878586 0.30057753246190599 5.5027470788618542 0.34120169098969533 -0.47868010445775311 -0.060809875117362494;1.173816378303171 0.23300051028812552 -0.31156740915205783 -0.15609371514462525 2.034051442525898 -0.042952898253274016;0.10514069194138267 -1.6328225914939607 0.14544085164381529 -0.024382086766494091 0.48451636067629594 -0.0090047440071872199;-0.19082950863085568 -2.0792242375248926 0.89156958865907066 -0.30021348527907621 -1.209202903970261 0.21485162253290038;-0.053801407435546698 4.0655105742338904 -0.23245721703615271 -0.20626868967095607 -0.62043333404709888 0.083590974755052519;-0.88411840227322924 0.13573733625480672 0.50671801872897959 0.093523405166855922 1.5985073387728634 0.1274004748387928;-1.2113929356540114 -2.4135461141903556 3.5912140157202739 -0.72191933370280992 2.434679220570827 0.49015045102910471;-0.73285398464537577 -0.31530403884447422 1.1734990241942524 -2.4054247175232866 0.43734187159824317 -0.14232943744653187];

% Layer 2
b2 = [2.7997863101235376;2.0962022937911917;5.0282600258637586;-0.30285769553794412;0.0082485832239699765;0.98157335003336588;-6.4546120724772216;-6.4155192598895274;-1.9494053951802832;1.8076143814423076;0.14763161683541215];
LW2_1 = [-0.1990624482628803 2.1208106301260505 -0.67975702085944323 -3.5321195881825416 -1.9338787382043399 1.2712860356614246 -1.9455729828228592 -0.13696329599587198 -1.3412117120905949 -0.42875602573661642 0.33058796796223622;-0.90394224034565995 0.30544870557294962 0.23659044130065265 0.29674595038540003 0.41865016869789767 4.6149320210136429 2.1546741470629689 2.8394411820790686 -0.11125131433400176 -0.033935500945682373 0.14148650222625697;-0.13448887202852597 3.1856904956735361 -2.873022792095723 -1.2590892239332883 2.4417601634481656 6.7835958450621314 4.4480171393105943 5.4346724278117984 0.62077954280169056 -1.1833720750216825 0.78089258343046597;-0.87396828846288976 3.5314245503366157 1.5114577318643545 -1.6255137566840301 0.65247882889794484 1.9785004120034979 0.7402114736550629 1.9236000733973384 2.9181115756281284 -0.34362281476066547 1.0001128004844115;1.1577632698634357 -1.0826312481731841 -0.70376441078643814 1.1416868796827804 -1.8635338857694734 0.61395767991018746 -0.83465904030679738 -1.1364984715867839 -0.23864473238520659 -0.87346535646365731 -0.19654364602010843;-2.5859443109292606 -2.0965136610994897 1.191391722633119 0.60909160405118845 -5.0880699856585379 -2.0149032974481695 0.66695454154769518 -1.0913861282780961 -4.008781229068755 -0.35844968081275974 -0.77271415273583743;-1.1835621343770366 -2.7435909110246213 0.2390624414582182 1.9926330516307944 4.7576081478077805 1.265469462674818 0.29406252006597694 -2.6126149782324704 0.62131531728869116 -2.8853357960064598 -1.3574755070348397;3.7724509736603586 1.2241211814626767 -0.17880986785050301 3.0788985785091629 -0.70305050140042735 4.0596696360969009 -2.1056428219148331 0.63813029046055181 0.66689319492767163 -0.74920143850370136 1.5207915048846627;2.8665172827678904 -1.5368659662321409 2.371234328534928 1.8371936610300252 -0.87121378769437496 -1.3756774535087559 1.8991673549830326 -3.9436243220400087 -0.33478041448446061 -0.73518420202289358 -0.00033524177069961525;-0.17407224106913519 0.6225705835705212 -1.7608208461140982 0.53433747659534581 0.45813685867209597 1.290965973916004 0.076016812733001274 0.79879824844174829 -0.014737367432058316 0.25683662597235279 0.36384050514848792;-1.002809046113909 3.6275836031950965 1.345945227923991 -2.1549279843009121 0.74878933070966636 2.3769439683619527 0.84769886808992523 2.1802944485538678 2.9408946570970871 -0.47348112475327209 0.93198931395905749];

% Layer 3
b3 = -0.71868791019157663;
LW3_2 = [-0.19841738878509671 -0.27137870058559821 -0.16610305379453549 1.4411305813509585 0.22784350420771776 0.031089444458017656 0.38705129772119373 -0.16778952751330731 0.20582425028514265 0.4472174184988707 -1.3486605842382704];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00968992248062015;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
