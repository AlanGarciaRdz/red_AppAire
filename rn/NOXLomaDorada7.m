function [Y,Xf,Af] = NOXLomaDorada7(X,~,~)
%NOXLOMADORADA7 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:08:23.
% 
% [Y] = NOXLomaDorada7(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;4.5045045045045;14.7058823529412;0.00280033604032484;0.0179856115107914;0.0558659217877095];
x1_step1_ymin = -1;

% Layer 1
b1 = [4.4170851679881107;1.2403807558153606;1.9572751527317522;-1.256519560288244;-0.0089441920730069964;-1.3942789547371293;0.056904057233188893;2.0589085254273893;-2.7527587656548116;1.6425096968309727];
IW1_1 = [-5.4500905502378494 -0.25563347725997565 0.47681992918549088 0.63014876974793843 -0.14655921108031214 -0.026021144305092943 0.087849865115817535;0.63403749489767647 -0.41560641333150233 -2.3819413117797366 -0.76041825161699639 -2.5565237443299229 1.3748076864143286 -0.2374283683787943;-2.7519012845445263 0.89032710728126152 -0.55048619813547539 -0.45134833812666797 0.18996679790348697 0.44721126924067062 0.3346392010741861;1.2833135835336273 -2.2786424129640102 0.3071492541019572 0.027045065664200708 0.097790318909459148 -0.34910666769871412 -0.15474676445368721;0.63462221230525062 -1.5042604865107652 -0.70774726250844322 -0.64794238908221458 0.16291797334041624 -0.01635761727912953 -0.86027948042624869;-0.51163990624683076 -1.906573678180669 0.026381301846090163 0.072049115522539772 -0.044696453041607111 0.24876003464736279 0.25805357112234112;0.097078833358279465 2.5862176829672392 -0.26106759187427253 0.028783073787541684 0.049358136509577502 0.084493504309408302 0.38740248041112801;0.98733139038252027 0.12049547842999059 0.45494941817776591 0.33309194197473818 0.23673171785388172 -0.040282803054016957 0.65258573110877416;-0.27183222981902916 -3.3768183030804448 1.7163338775952668 -0.54555513123189081 0.37290394714086916 -4.0497306052093887 -1.6578133310665326;-0.93145033761950102 -1.0885090482326334 0.56331585819785113 0.4278714653632803 -0.32319300315992694 0.0094570989137788431 -0.19343079199255464];

% Layer 2
b2 = [-2.0701214758578441;0.88076276357319516;1.1466678065498797;0.12693470950050603;1.2841464239058469;-2.3940220472859193;1.5755046548177252;0.93293880076363189;0.027532620667107724;1.6445361189901602];
LW2_1 = [3.9395229350898506 1.4180900288528977 0.90410552949392964 1.8581730402576584 0.28544547640121065 -2.8393368697899874 -1.0767662210426761 2.4145087450470575 -0.43924702525739262 -1.9649718243862289;-0.57642197912781035 -0.10075543037535319 1.1649014627677572 2.1538598829827347 -1.2012064686181614 0.41506566094968272 0.74401151048018899 -1.1140287799897792 -0.48148289439145647 -0.063945524247735724;-0.28404687022313663 -0.64847978703711806 1.5914141532916231 -0.17721542797542836 0.59788368735463182 1.1739621740141482 -1.6126642240206392 0.93139102053136791 0.18240143196187061 0.021939950920195891;-0.73259642249559098 0.34632176619455168 1.0607577834749615 1.9981336071954103 -0.75502644183227219 0.59913249089287324 1.5799039568080762 -0.51637234503366591 -0.17468003213037414 0.47152625827428463;0.57788745101239114 0.47491076680387229 0.046836025944461547 1.8241803096655631 -0.029792098751434522 2.3999361337708525 2.4122232207980963 -0.88920542030995053 0.1052310424625949 -0.17279321500050232;-0.26922765602571286 0.15429029237071451 2.5949344916301715 -0.5141184174099287 0.73716480889183778 -2.1153012141431651 -2.2870649751251246 0.087954146848246456 0.11347603518478701 0.49231418973588886;0.79978326943413547 0.79847679913389746 0.061553038009229226 -0.036808471364483057 -0.14021432647535215 -1.8504895610724472 -1.0238095199482298 -2.9888669297393564 -0.23938709202724129 -0.36341069664101305;0.61037552264023953 -0.97285590808548239 -0.2379327159835114 1.4526111537629971 -0.39394255784227411 2.3349330813597136 -0.39689121034767244 -0.78645999920547971 0.1663251997611358 -0.45853708634550194;0.16106192581336132 1.5213527009084944 2.5558303735776771 -1.5930850619361008 1.3243890251449542 -1.9793863833181071 0.27757886616573363 0.33031325550512253 0.3798762916259546 -0.090871713958813632;0.87197008432190048 1.2867141333906282 0.0046893267749596578 0.50154147750739353 0.48903899493264547 -3.0234030247427559 -0.29849470912943415 -2.9926631949042597 0.037090059274721192 -0.78595502518045368];

% Layer 3
b3 = 1.9600697122459265;
LW3_2 = [0.93046053712736898 2.1663537471862946 -3.1480505512470471 -2.9363459725886436 -2.3534236957169061 1.8617184963525226 -2.2943915302190994 2.6181794336550417 -1.8977711993558928 1.1337684737895284];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
