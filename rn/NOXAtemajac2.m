function [Y,Xf,Af] = NOXAtemajac2(X,~,~)
%NOXATEMAJAC2 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:08:14.
% 
% [Y] = NOXAtemajac2(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;4.04040404040404;16.1290322580645;0.0210748155953635;0.0561797752808989;0.00614628149969269;0.0213447171824973];
x1_step1_ymin = -1;

% Layer 1
b1 = [3.5228480691562378;-3.4187801338378589;1.9093444198031115;-0.11622989126829308;-0.47390809070695666;2.1145904943964884;-1.5281828525309065;0.88106732994506576;0.41586597135283537;-0.80622269282302017;2.0776049465400188;4.1996860406749059;-1.2228133020942669];
IW1_1 = [-1.0527974714158836 -1.6572799843978325 -1.1431267393215283 -0.28201919243685836 0.56335356801901004 -1.1015178477051615 0.071524174157874293 1.2229440407409191;4.1314599987144867 1.0684030814864562 0.91048424840502395 0.48087300315219333 0.63392790780444763 0.33085049686684065 0.93151936660325818 0.58711283368970868;0.01453342061992003 5.8663368193771044 -0.97961481232725778 -0.1053661335211532 -0.013580525344012348 -0.14885741507935396 -0.17674827363339277 0.18096490506464324;-0.15738308309438384 1.8116112778537115 1.3347465121658635 -0.7934001454254006 -0.41373126848776676 -0.15591334050754066 -0.052526539214965064 -0.56646581338033342;1.7899712235256415 -2.2269406359255339 0.79530010994278666 1.2051493866371563 -0.92195348345268502 0.37186262472027759 -0.069160071054182592 0.93346459366316847;-0.10080028718263528 4.2421798474343761 0.084214221465907763 -0.24051311462998587 -0.023726943118858063 -0.19216350263656623 -0.15135653379871028 0.059359727573959291;0.19650121384690827 5.4665360302932271 1.1479866720756076 0.5753880671385494 -0.30989011125483923 -0.17800690613513506 0.27531275671583866 -0.15950244506632796;-0.16637023768026579 -3.9207709536126334 -1.3121942246730713 -0.2855638688123453 -0.23609857326496542 -0.42844708518461455 -0.17003269399645704 -0.29433174837529597;0.083074377046216397 0.95468084596316238 1.6403522837213935 -0.34170449936589892 -0.39718045193480089 -0.40963450689752151 0.069328858137396934 -0.3148838036552814;0.52983603874597829 -1.9512634507482953 -1.4400705990756313 1.8657462506227089 0.48190912739683828 1.8413879141503984 0.47074911541862097 0.071092751454895228;2.7614710507098081 0.44490201796330642 -2.8679942401464826 1.6642878368795588 0.64916509129231814 -0.36180542187840187 -0.30132499844313637 -0.17793698231635297;0.017770232451526726 -1.7075264104437753 3.7128542734165579 0.18833837781560028 0.24509726468473259 0.12130352851475264 -0.0037141113733327805 0.14983456600911441;-0.77059929608246924 -0.46779061235535357 1.7421809381129363 -1.269249669169038 -0.69133334458219542 0.068534874807207671 -0.022385101745077407 -1.10862129947331];

% Layer 2
b2 = [-1.6232669201304593;1.6816234789477003;-0.85818562720502345;-2.5083563407805061;-1.0211193531588174;0.45844348465881546;0.21488629390709169;0.36395931994424818;2.5504680193832527;1.4418598019899298;0.15615486347619004;-2.6035547475858745;1.6622882459809036];
LW2_1 = [1.9089209341763016 0.51731828395757185 -0.10453880028503669 -0.1630738620139642 -0.11510463047938861 -0.88246650531731308 -0.61788719370836975 0.3283043228761342 -0.18794621043497825 0.19003436648221508 0.077063718683393817 -0.35193327278712788 0.029828533074304924;-1.0315042733935766 -1.6080037166345373 1.1498897532725005 0.26590413622117354 -1.5068820168010753 -0.40717276122797008 -1.2010530447124204 -0.04714853065502253 -0.54294716184519853 -0.0091535858821371625 0.32663375498518948 -1.1562670029836744 -0.91417418353591595;0.24697843492844362 0.584813349148263 -2.1663735356428009 1.1086099530070264 -0.52556082801530923 -0.8054663220800532 2.3414488592953977 2.5695972139693697 -1.304861720784231 -0.6014285652971505 -0.25739313502302558 -0.088074453380000764 -0.35563019075928198;-0.036034591974027627 0.33079817013369189 -1.061685262905008 1.5049500473105435 -0.24819343473354105 0.64167142118655884 2.1579863448436503 2.3920933770334121 -1.3780410961408651 -0.29690295247612497 -0.51519393102925959 0.63646809383230218 -0.39969080376110405;1.9908336014470176 -0.22497555656108589 -0.14705165386874919 0.60858115950612857 -0.37192765089793794 -0.71167332149710871 0.2646815817668432 -0.56525085400582642 -0.46751515012313949 0.086741716272330543 -0.052640486819686749 0.33309895860483524 -0.30073395861979835;-0.83791618986823901 -0.5436197937714452 0.66811668220902698 0.13124971858710197 -0.27951510119503614 -0.05807775694116743 0.0054479170829937994 -1.1582489427219056 0.082746708413439368 -0.012235845402179901 0.14018335660506301 0.1137301093268875 -0.078335956046307123;0.047544718200958951 1.3295089548740815 -1.311205581227149 -0.34623574019925563 -0.2098400484611572 2.1438078388373278 0.11900233195846903 1.5597089567883682 0.1398385534224604 0.13739713891067312 -1.5040070339164513 -0.84781382295807683 -0.14815325103081345;0.42714246758690716 0.37560062547777889 -0.26588248505267653 -0.59173780598543391 0.1877678994059383 -0.37854843255092741 -0.077608500189370641 -0.6046761881539171 0.5203968830996607 -0.58374241283071782 0.68422389003506956 0.3758950258497169 -0.24429799781668107;0.43324128008370838 0.058111682809197152 0.90363028350931396 0.22479774395211891 0.60298746061568997 2.190509804667907 0.10820378790056398 -0.54083004382643041 -0.12328393713094882 0.61002922663535586 0.30500086242614161 -2.1835723720064122 -0.094336508937670496;1.9593237418088152 -0.02816047428230823 1.2954433104602203 -0.34996254580326636 0.42808427941428412 -0.45245853905714195 -0.23550493188647847 0.63985827163688069 0.93684204346496702 0.46565485428853776 0.56462255497501457 -2.0424892811199777 0.46259225011573374;-1.4751401669636288 0.29014504073153841 1.1254962762530527 -0.77512122314368503 -0.037017260797125744 -0.47435835926557235 -0.80744630465454259 -0.21788398920669663 0.46472260851656133 0.0044309342912621959 0.24178119868707623 -0.65826095124128181 0.22793867698905118;-0.3967140789602267 0.34037949268714485 -0.69703120064354052 -0.62837181359822236 -0.20460573373622409 0.22219448255209093 1.6753352679513069 0.94794678955235401 -0.024169400712306846 -0.26325548209093558 -0.3611335749683966 2.5253843433163206 -0.18206526284382502;0.35801971614019446 -0.36207435645357894 1.3789547071361614 -0.52611476986648231 -1.3564324064192441 -0.95617513351540473 0.41780288155106587 1.3602953889760279 -0.91580948217704816 0.9336996775275731 0.38856749232808624 0.22150520001956686 -0.18233513566284171];

% Layer 3
b3 = 1.4942759196866986;
LW3_2 = [2.0087578613218149 1.2273757563014218 -1.9852281249727193 3.1833282883963019 -2.3169266059273004 2.4547257319504587 0.20948696028658545 0.28735669431790795 -2.0337086958227077 2.1139778155736679 -2.4397429952017267 1.7954861985836639 -1.2726721469159186];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
