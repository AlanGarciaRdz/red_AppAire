function [Y,Xf,Af] = PM10SantaFe1(X,~,~)
%PM10SANTAFE1 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:32.
% 
% [Y] = PM10SantaFe1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.172786177105832;4.16666666666667;0.00341273633199099;0.00632111251580278];
x1_step1_ymin = -1;

% Layer 1
b1 = [2.5139461589500187;1.0784768104602531;1.2201128529825032;-0.06700674834526231;-0.0021849228818595981;0.58009462642603526;0.5091922146663963;-0.73855729812072746;-1.850600121187274;0.76937734317949835;4.451398633709859];
IW1_1 = [-1.3522925017115472 1.241766972099088 -2.4133086032327871 1.0735307591048084 -3.2142245381061612 1.8630305669992708;-0.15332508497800176 1.0970997506482454 0.23985366415942685 -0.96649234678238072 1.4911266108969568 -0.65895468933793955;-0.25506259351520877 -0.67609233445534689 -1.9731463304469719 0.82771556876399299 2.7140069522416272 0.81873826986096132;1.2307431192977969 0.22410628209995326 -0.21631016332315775 0.69338767897778986 -0.75269182098764209 -0.23616318876435274;0.37217950566405261 -0.28353658610164645 -0.9740627291973557 0.07447954378016225 0.5700490088053517 0.39146516515113833;0.14457188487506586 -2.2662221624650543 0.080255661881073553 -0.16969461133681904 -0.84033595015742768 -0.23320211964005594;1.0581826571820145 1.4436328780314518 1.1041332080837689 -1.5391970967473201 -1.0432362017536896 -0.28939325884738082;-0.11775668352348696 -1.4905728456338672 -0.41277927190036451 1.1760789386054462 -0.18142723269208499 1.3407952019781848;-0.075608355282725803 -1.1589259375057086 -0.83416379761770676 -0.16586742208979693 -1.3362930948023668 0.28646669884753784;0.43204709777577549 1.5355358433088777 0.25479283280429438 -1.6379791119701259 -0.31703449775272491 0.20854112078855047;6.7507924999093163 0.093595105104498491 -0.14534602216896397 1.2606683929252309 0.44101648386606435 -0.75666643042197756];

% Layer 2
b2 = [1.933043919280214;1.0772341832529722;0.74702669632872509;-0.42527463577606905;0.034745983142695731;0.25411134892408682;1.2315199770572032;0.3111069794551431;0.79476825111879901;-1.5210351578497165;1.1679737260399243];
LW2_1 = [-0.29426799704232476 -0.13857094971207182 0.98749498338317254 0.29270465287232833 3.5025868107976939 0.38888639010819021 1.278728873516902 0.29111652266861571 -1.140370080337779 -0.32003395253214884 2.9632627031639394;-0.16548203380349485 1.2099116684078641 -0.91077310382770649 0.19433287086115164 -0.50569627740036771 0.86911115394005867 -0.65277854643456168 0.46633500004591194 -0.022437698754916038 0.028063168058490105 -0.074976698554110432;0.39386593587669561 -0.58753585058935665 -1.186391088315043 -3.1372845272372154 0.00052278978932070869 0.31492895133647997 1.2956884479426118 1.6952064527136639 0.13820064957634109 -0.27391172306161299 2.0246325557839042;-0.43405051088950741 -1.5368439380799692 1.1581382930370838 -0.86477150801661995 -0.48442817252277121 0.099241365063225256 1.4361481671899206 -0.48114383870444211 -0.3514476115510361 -0.1478784043816096 -0.29467831853423404;0.81641717131907465 -0.42262978706109156 -0.81669510103497167 -2.2321125996430116 1.6050911638604608 0.71241585264499374 0.55940681819659754 -0.85038468666208122 -0.82471386843595829 -1.4930022466590556 0.16534634858370864;0.51098597528052569 -0.037512024041838871 0.54430441203952007 1.5386673481684239 -0.058014914682048932 0.42779003447401404 -0.92834516836340431 1.7906531836331951 -2.3869729054323914 -0.58727161344364798 0.59075989019843089;0.93691238870718008 -0.26470387651011762 -1.4020241651150664 0.41547147787877609 0.04748934702840911 0.75853929010595911 1.4956514972266839 -0.6612237250649986 0.92181774040203546 -1.1689456984604107 -1.4166188390307692;0.45442231306140174 2.5968811298885091 0.044612213736034509 0.16282159268415333 0.087552073479244014 1.6197148572922828 0.044294439624900248 1.564806080499576 0.12832612402944688 -0.35255956989163384 0.11425767732782263;2.9422151064093045 -3.6272210056691843 -0.73902996679238564 0.29215303609842258 1.5280178242238753 1.0027042025981803 -1.3295226922075174 -2.1462909754829012 -2.6779221260084243 -0.69980011266612074 -0.78443271160748662;-0.88010003437308881 -0.1428002015087978 -0.82784046744975859 0.40179895678371946 -0.23736352377192152 -2.9328556117731184 -1.0354168414966585 -0.64270359032602153 -0.53103293996842249 0.36986493190438308 -0.1503439827759312;-0.40973199186674736 -0.56333278493034522 1.2961469359992528 0.21962058595116107 1.1248308456105411 -0.54832871213702028 0.054549154082760502 0.010440701308148765 -1.0071294988947534 -1.7347360939465417 0.59936376206756781];

% Layer 3
b3 = 0.82409510069580538;
LW3_2 = [0.13810882270469471 0.59559190896885261 -0.10441342046191729 0.2431500550296633 -0.26879478363477527 -0.09734890498066856 -0.18367206201653491 -0.23100595110881153 -1.6409806553156931 -0.20168021637584549 0.15318105636131288];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
