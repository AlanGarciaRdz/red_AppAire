function [Y,Xf,Af] = O3vallarta9(X,~,~)
%O3VALLARTA9 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 18-May-2016 13:05:54.
% 
% [Y] = O3vallarta9(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [1;1;0;0;0;0;0];
  x1_step1_gain = [0.0869565217391304;0.0384615384615385;5.12820512820513;24.390243902439;0.02710027100271;0.141843971631206;10.4712041884817];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [4.1917547005052951;-0.13683872974952616;4.3537080507128101;-0.44019927284799876;0.64626949040357617;-6.0782352316221857;0.72758114877471269;1.3734684315897501;2.4039713649871022;33.658195122458181];
  IW1_1 = [-0.44558017486556056 -0.43372579118857657 1.2804806361712526 0.90637500242855717 1.2155421114535789 -0.071161921147798055 1.9012771691903843;1.174208021279314 10.109598310738122 -1.2174823723675543 7.8983755497374624 -2.8207627742754062 0.13391351167582488 -0.0049656398209089268;0.15966266066857698 -3.2128218390274519 -2.668754377751573 -1.3695201428580466 7.9507039419032601 0.40509619527940977 -0.33766161552548402;-2.8317092790761951 1.2864794619331843 0.41119762345407074 -1.2172038664327105 -0.056430078843474923 -0.10640395290405173 0.63030754434997249;-2.565539374105311 5.8544628182356675 -2.3306914045354654 -0.48639051147689727 -3.5662833597852801 0.73443965414053503 0.73419475208414786;-8.5183061163538838 0.012403560312127053 1.9246742860502144 -1.3103049682963981 0.96501392712247747 1.2876366963135621 -5.6232837781507286;0.21374789175637118 0.0037705680261772897 0.31587039660221011 1.0903017623398183 -1.3213743298673337 -0.16145450978255757 -0.02046886322665668;3.4942690976484445 -0.62723083466377683 0.014628858801983228 -0.18736095146769921 0.5193819696752987 -0.021149568194229154 -0.31429133454105351;2.5155741329680428 -0.16309384533611057 0.68890614262212946 1.140904636390911 -0.47541695933484113 -0.021952767001658866 0.46150906691616284;0.3465047053934045 1.2701986222923787 -1.1713687879790602 -1.8015996992885592 -0.54625582388337268 0.25308746946530108 34.475786336687207];
  
  % Layer 2
  b2 = [-9.7191694495691863;3.893480102767187;-1.2906373360800765;2.5529696788728451;-0.98379362649062307;-1.5558815229591476;-2.355245010506013;-1.8169988995517934;-4.4823479546247906;2.9430043899846337];
  LW2_1 = [1.5245402157950736 1.5949988889935114 -1.0471094404444097 -2.6509766683740303 -0.63463160449623734 2.3390246425891892 -0.69047163263946054 11.373974229774261 -1.7788165177685207 0.92491202312473408;-1.5383440834323354 1.0303348035273254 1.1222755908616293 1.1168845499460036 3.2517838172899638 0.75773224202527667 -1.0196146270411346 -1.2047321857773303 7.348454759809953 -2.0950225260447923;0.4371480259624369 -0.55982155534196198 -0.54650297070760523 -0.2121637629359335 -0.083772392752994751 -0.60078809435468628 0.50990796397732097 -0.18758199490179345 -0.94010753413749193 0.94784410283350029;-1.399524350689711 -0.83825299475556003 -0.4653323063146606 0.64642326962003172 0.25346385741968969 -0.16470141929521623 -0.87555762334280884 -0.55291806416787037 -0.53536940812556266 -4.0924483351792782;1.3630267946335495 1.3253135240266694 -0.52184741455640204 -2.4364302352600467 -0.75116344761547649 0.47019620540933471 0.17453476559503295 0.89118067597448158 -3.5104996213901924 2.2565007552502152;-1.2688995028947667 0.80284902699488192 0.91888428389846311 -0.020886508196344859 0.54602593774178299 0.87388677900199974 -0.80579341466631316 -0.31450586816574494 2.3405661601283319 1.4784189542601927;-0.45720402705620933 1.6825956268248761 -5.3627150415729732 0.86699092607706407 1.6700981344847159 -1.4882576021504406 -1.6311776397534294 -1.1491601309022119 -0.076039419888726714 6.635517140164219;0.45435539076862169 -0.48010759932518265 -0.16399816678818688 -0.51450225458715226 -0.027001730890981967 -0.28866568433857387 0.45746529690580801 -0.87142148485696258 -0.93606700020179734 2.5440778440279832;1.7414558626792813 0.48566252180476938 0.12586276745640312 -6.1315086464663935 -3.4688434088588171 0.95677453388055267 1.1288245396229226 -2.897319858531092 -6.3674068612852945 3.5225320901258024;1.817474862702166 -1.0277356599341658 -0.088896605795184547 -3.0278520155991782 2.0625562469779779 -0.99779213281038071 -4.4850231338967186 -0.78410726359743899 0.33829723202928236 1.6189707965907045];
  
  % Layer 3
  b3 = -1.162587567844078;
  LW3_2 = [0.35366379073077497 -0.58547211017162326 -1.0556475315994693 -0.66994609463816779 -0.47703652281270076 -0.40319844974500324 0.19560534048682876 0.90475794294117251 -0.4147176232175272 -0.37544687149269806];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 10.4712041884817;
  y1_step1_xoffset = 0;
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(3,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
