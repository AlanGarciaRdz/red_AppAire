function [Y,Xf,Af] = PM10SantaFe7(X,~,~)
%PM10SANTAFE7 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:33.
% 
% [Y] = PM10SantaFe7(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 6xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.172786177105832;4.16666666666667;0.00341273633199099;0.00632111251580278];
x1_step1_ymin = -1;

% Layer 1
b1 = [3.6114323923045051;-5.7022797617948555;8.093338662169506;-2.0071760226169397;1.9401113839097013;-0.72340709896024913;-1.383022459971702;2.857135003949538;2.9115343426087037;-10.645713896366436;-0.10315862780802004];
IW1_1 = [0.0060989251947256261 1.6963156878362953 0.74538327771239121 1.1156093173566517 1.5112215238255962 0.012317269798362855;6.8530895568589747 0.40810460574910246 1.3315894110913515 -0.58372637354638202 0.6477229813074189 -0.11571697444970266;-7.6167237984485832 0.88331589934203236 2.3898519032869734 -0.89992521942225223 0.3542953423699895 0.27031518989692599;2.4770321753732256 1.7077793279552567 3.7696989617100871 -2.380630190228965 -4.5164478222030962 -0.43583807885810261;-0.17539540748075075 -3.4390660784164107 0.89230946182335458 -0.016783536020303684 0.65529471489597824 0.34907621417643336;1.7386216781700783 -1.3368841432328888 -1.115008061224217 2.829117825611009 -1.896366839004676 -0.098056223354693314;-0.65437315888050052 -2.1052910877350319 0.70534338582240297 0.066673453363188459 0.6411613053545776 -0.074474064220890923;3.2028992555292639 0.45478064991560241 -1.1579229588809379 -3.1755171880659652 1.5720669616185887 5.1301142005337068;-4.377770033414297 -0.87074409014948984 -7.207700588242818 1.4975233912158965 -0.9806010694343561 3.7082657067134082;-12.756236855549156 -0.28546142604197416 2.009862136999784 4.7096505020093531 -1.8418963008036977 -7.1833483905988285;-0.18821179793986609 2.0438459041268269 0.23554290323971494 -0.065890787197102132 -0.31753761811273273 0.031556659264880882];

% Layer 2
b2 = [-3.022386424531792;0.77790608543272544;2.5047500032818948;-1.1647416562636472;-2.0615527255742681;-4.4085669636101255;-0.66364184402790005;1.5016007288955744;-2.35086015475067;-2.7935040934508528;1.8453822879265624];
LW2_1 = [0.53225223740757466 0.23978537112778753 -3.5319072480805014 -1.4634955971986625 -0.70015009587312194 0.14465175105900316 -4.2054095061343695 -0.30411715565032066 1.2685340962862017 0.070127835576731995 2.5100403587063522;-0.75341789194619269 4.250918003618124 -0.21180087509427131 1.3303607167526861 -3.5191529595143525 3.0169900030607986 2.7788399393181487 -0.29655010707094553 4.3554643266354063 -0.98052853610540935 0.59486630355421766;-0.97558922774467927 -2.5513737783334149 6.7731852993451218 -0.4187935309644496 0.61493778493223505 0.55565276827172783 -2.6051722548161718 0.73651714940902335 4.6142661147630228 0.90346965530212409 -2.7421875194354066;-2.9756288027046023 1.9268115710101912 -3.9762540904995944 -2.3653631402360085 0.92534120679880949 1.0651095609859593 -2.2716661000837339 -0.49071754929769312 4.1539400142195113 -0.52925487535643434 4.1868001985527075;2.1158319156589362 2.1348160822439564 0.54304648537168154 -2.4432364804014606 -2.1730296917253491 0.51070719440362167 -0.85243736100257217 -0.48138773210417751 -0.72632831535750475 -0.85361700638969229 -2.102027697584862;0.033907812060550227 -1.3989646291824238 -0.83192900683744686 -0.33080358987168218 -3.3059824659150792 -0.58031887414109162 -1.4320956048247493 -0.28598912511561625 -1.6447597165362846 -3.0087023105996349 -4.1059093044232986;-1.8197098613646194 1.2835345814699475 2.008056502894402 0.67380570228697501 -2.0681237727631152 -0.27710397468251857 -0.47738596551530954 -1.8157922059686524 -2.0002883141908603 0.4231592500253446 -0.50553037639575149;-4.3471084353243414 -1.8896180189979224 2.7423047889243306 -1.4033355747089462 -0.60460633128902908 4.7350973329287145 2.8521246984137463 3.0975680509997163 -0.74321112500400166 1.8246486189424098 4.7962466406168378;-2.1018648719202977 -2.2577802763327277 -4.658949347804537 -2.854266344050735 3.3631998363836866 3.1951085193087505 -2.0299645473204948 -1.1338035754630085 0.13473721914716327 1.1603606157129365 3.1798858011021225;-0.78082946833159517 -0.22014954775716028 0.43303372585155431 0.085592852512316936 -1.9208420207893115 -0.43692188902705248 1.746045728677849 0.25208350777485161 0.92790046136973736 -1.2584313122235626 0.4959070624651235;0.4184783566875262 -0.2347457563219974 1.341665656220848 0.73800584346108844 -0.50320337203101739 -0.67200199678611749 1.2882289909230094 -0.90442721383026181 0.35806598716396132 -1.3008614652471842 -0.94602906182046675];

% Layer 3
b3 = 1.3933599258296909;
LW3_2 = [0.16685764203951731 0.069237263538358337 -2.3433610477607609 -0.17703743022503624 0.10753950411893033 1.1760525755883069 -0.25594887889649809 -0.038582514285804621 0.086054844486888396 -0.26663588365683005 0.97890485028578811];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
