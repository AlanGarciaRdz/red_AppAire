function [Y,Xf,Af] = COLomaDorada13(X,~,~)
%COLOMADORADA13 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 13:56:38.
% 
% [Y] = COLomaDorada13(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;17.6991150442478;0.00572573718866304;0.0175284837861525;0.0546448087431694];
x1_step1_ymin = -1;

% Layer 1
b1 = [-0.6792187357456132;-1.6374982682335846;-0.57094941717949332;0.036031496989873589;1.671239078513318;-1.81229173453834;-0.4198275505106997;-5.535251884679381;0.099841726243894979;-0.99311546603440737;-1.8929083334513699;-3.1872617765634805;5.1363046264686529];
IW1_1 = [0.94633510048614755 1.2631469357140388 0.70920914762976273 -0.18023493745569263 0.04262565218545495 0.49609534497153218 -0.10714722187183251;1.5574996468946909 -1.2693903355388394 0.32867724754800182 0.62507034994720656 -1.8215594137081457 0.078004467591633972 0.7526776093001929;1.8968411638370744 -1.9072850854796333 -0.63122785186388986 2.4066827050141986 0.55083349365806489 -0.85482060225802559 -4.2821903405457356;0.22729696074025299 -0.85757028480758535 0.79599564530918199 -1.4811026393472737 1.6702240836383471 -0.47708232501490588 0.59692843520669725;-2.4803485887044028 -1.4065769895710787 1.0761711829771388 0.8775241794841121 -0.24112787022120818 1.9119591823617985 1.0947907213241781;0.49291718509710297 1.427095751488543 0.72257063421631218 -0.50880263082015065 -1.769720960313508 0.26007641773478218 -1.5069290658587173;-0.66352061156592379 0.4937299542710239 1.1321344461231142 -1.5084773398918732 2.7020013441274857 -1.0084943027037006 2.2411236823614091;-4.413099234679394 1.7802233183337537 0.028946019717659879 -0.9294752691715279 0.2895018623365655 -1.2205324324821463 -0.71348823251044657;-1.1512151181114934 -1.3935209594170004 0.17588759236042431 1.5380327988185607 0.10283050404681847 -0.37386281663625842 1.2120450334561796;-1.3684904563317908 -0.91960873402882481 1.1933078692950392 0.58833096219842496 -0.61825225324726318 0.44554570377991809 0.34079863536163313;0.32943537002867129 3.9164330090685739 0.061910020948039102 0.64955875302041266 -0.25800130855299896 0.31439440598030222 0.10782750364356733;-2.1385696504787188 0.15580864024558824 0.26720319300976675 -1.3450539708345304 -0.57570856491330435 -0.67297243839444176 0.24220613659418663;1.5025663149908977 -1.5483319095915025 1.3944703927244517 1.1799010063117219 -0.074883889010294843 0.54780646836976199 3.0955830893224601];

% Layer 2
b2 = [-2.5426123860628413;2.0260427051061392;-1.173460846914484;-0.55498002519723288;1.5400878537662526;-0.90559048117954399;-0.76726663061460032;0.083647955517510558;-1.0653142412088841;-2.2209019560164065;-0.82240937359566668;-1.9775349581265844;2.912454550868897];
LW2_1 = [0.67119543874780074 -2.0427147701631849 0.25721025843168288 -1.3218232245313146 -0.69100885186393879 -0.42844134462022326 1.0930277180793051 -0.71352165201813988 1.2820883337218076 0.9367730450008861 2.2753082825586972 1.4896976062567227 -0.34495224053788404;-0.81249012622859007 -1.2487110741996241 0.29720095731727658 1.005114713057031 -0.080726384871687568 -0.40556202197162372 -1.9485892804033056 -1.2545946437320694 -0.53214532522087021 1.9206204705073444 -1.5336431477754846 1.3860126762284384 0.13314462726045218;-0.53232301034757634 -0.70314413697067868 1.0356458698825382 0.12885855037603197 -0.046221247817036085 0.040897414873912005 -0.17177167893492298 -1.8225112445677638 -0.2748193665375035 -0.068334376472280869 1.4115473247768526 1.1848204452858009 -0.49996497859864425;0.38522527024973663 0.5944454868461706 -1.2244643489624951 -0.17804515846076979 0.18733835434770985 -0.15937125077215494 -0.24533508823855499 -0.06826990699426104 0.26228190447371957 -0.1942058362377245 -1.8016374052146384 -0.57478669697099771 -0.26425429662198768;-0.71391153531681162 -0.82335756586891273 0.022604451025635859 -0.2154535377842719 0.003770491458702013 1.1887589366106175 -0.095186251378321846 1.0555464043249529 -0.78395516112464159 -0.038502945040646087 0.33085866382167722 0.038057923178876192 0.6820638473818722;-0.35026772381183685 -0.56634779977729643 -0.080509497634917382 -0.27048310492171573 0.18374210179873796 -0.12367949673294461 -0.035112475830591502 1.3395653891352342 0.032228505276491438 -0.019557712830876723 -0.37034881591526614 -0.3863460601707247 0.38747884862998055;-0.22079102195900482 -0.50028705487956826 0.36568855822530444 -0.50415278454491308 -0.31496991824941145 -0.12089224176247743 0.046515497242360732 1.8130868557684436 0.27683377835193695 0.64239232121242873 -1.0627817863782176 -1.6181484963373727 0.39497568012486939;-2.0799547741902393 0.30860954169009708 -0.31268504295446603 0.64854021435059106 0.5995820261723982 0.90553907136908662 -0.28853229483359832 0.69654166023986719 -0.92878119201004172 1.7251228640304834 0.90312043341069481 -1.2630956472818506 -0.061411391230072374;2.1353156670885749 0.085188299155549652 0.23198036800112445 -0.083624354175859422 -0.32303795614240716 -2.0726163092941983 0.12845858254585171 -2.0235646502218216 0.99266271518279803 0.51367764035869035 -1.5596865131413828 0.95182000975409298 -1.1509687174357237;0.64342710208471399 -0.69657248684732276 -0.01207389033226036 -0.0029461931647601948 0.16240823515468497 -0.74243672573974251 -0.017294979544141012 -0.19396446015120553 0.76459699085275568 -1.5112943248125825 -0.25797664481435711 0.95017408210773402 0.39957768117541681;-2.1648342118594552 -1.8686439658579526 1.0235265280315158 -0.75351313325708102 4.0267358118983116 -1.5824326294350979 0.25048191749091953 3.4237843089680671 -0.014754017089469811 1.2943354834553684 0.04430347886269851 1.1946271602131571 -3.5184367325034422;-0.63710379813365536 -0.74011779439948766 0.65152514019709351 -0.073886680661759921 0.69656140527591004 -1.1551354354403782 -0.25371966670182244 -0.85814992946829105 -0.77142240043512678 -0.050466096067511179 -0.23873186771524993 0.28742181207467304 -0.62745151056026893;0.84821481228833684 -0.47650008912022968 -0.50730499892401093 -0.43078335336244966 -0.38728068106880575 0.39910789781717843 0.0035920810966429909 0.29022201632862599 0.14430403181304866 -0.049665319691080213 -0.32479150396331147 -0.16681946366485456 -2.1059011698705139];

% Layer 3
b3 = -0.73007150752884298;
LW3_2 = [0.62314980686108357 0.50735294305325862 -1.4508644641364861 -1.0879446277353109 -0.63004619562375208 -1.7033413463348193 0.51310606060724528 0.42144898142455361 -0.36937134169709662 0.76764124190942451 0.36523590873342554 0.51278991987829825 0.91493176159624678];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.448430493273543;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
