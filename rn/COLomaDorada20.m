function [Y,Xf,Af] = COLomaDorada20(X,~,~)
%COLOMADORADA20 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 13:56:40.
% 
% [Y] = COLomaDorada20(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;17.6991150442478;0.00572573718866304;0.0175284837861525;0.0546448087431694];
x1_step1_ymin = -1;

% Layer 1
b1 = [-2.7465793927788344;2.6958288458440616;0.20143633904602742;0.05983898604122951;1.4096200084394581;0.20976713426196403;-2.6256310485334389;0.18945192183793785;2.8550741682585237;1.2299569636528251;-7.3671370703114425;-7.3802695702861367;1.9117153789069847];
IW1_1 = [0.10359671497891464 0.85306170632623823 1.2851195364119632 0.85487680183903436 1.2003146902885506 -0.68404677119863699 0.74585039202207326;-1.1108455639786297 -0.49059326234990147 0.49421242827740214 -2.7208859478444989 2.6097997963318518 -4.0036498153347972 -0.97258043732357635;-0.33117247307081249 -1.5380988273592096 0.36280368295108234 -0.11165264103049821 -0.15256058269126052 -0.43269389247831058 0.55118473800773515;0.097450027501062159 2.398025730513385 0.87637736870721017 0.53782991867452556 -0.55048777725918485 -0.36007057945023868 0.23184625028619707;-1.2992627266788883 0.43396439438206369 0.0094389774176951626 1.5389844955320169 -0.2361330064003283 -0.14208056712643763 -1.157723349567529;-0.37637179960156192 -0.079099389167005013 0.15571850890857852 0.67761352822782672 1.160361929986647 1.4736000108559573 0.11724506929654788;4.8446076914440814 -1.1414254775943213 0.055341117958455199 1.2743120302755455 0.17712722181824667 -2.8585709178292609 -2.0452535163271031;-0.1768835430023401 5.3980288632344928 0.6154102143711333 -0.33101376346786499 -0.22028294694824535 0.00076833299568673536 0.38833128408686973;2.1825617099490802 1.2945761782165208 -0.017345865765611028 1.1260245046768449 -0.34271903430579814 0.059797225679432131 0.093041593023389421;1.1545376038866859 -1.5454838134340099 0.20538501795783673 0.71725394309302415 0.036822161175351961 -0.63631484030711338 0.12448186143039866;-11.594671888483484 0.0062983171660851052 -0.20254607620461518 0.97881507158657299 0.68919249880875932 -0.78497343561940069 -0.85785591283584928;-4.3801033684502428 -0.24543189954744588 -2.9462452150798937 1.2391809436137939 1.0172780997796702 -3.5894676225480384 -1.68651635774188;2.2822554704382312 0.56829929258960798 -0.027234322707973806 -0.6635259405363606 -0.66908468322934112 -1.5232614258895798 0.66681842003573022];

% Layer 2
b2 = [-2.3161025099498653;-2.054041799623449;0.36789167744674234;2.4418906086066015;-0.64711309424356933;1.9453147180498294;-1.3517476318520287;-1.0753736621391039;0.77168999175850728;1.2633154931487312;1.0935644609411788;-1.1380284651403665;-1.4563258142923095];
LW2_1 = [1.0423859056578486 -0.22147133760806037 1.0866663285080782 -0.92597668984438974 0.077038395055919182 -0.35129606736368113 0.35461921436375182 1.1928403154009135 1.2704783921804657 1.0467795058939473 0.77410326061428525 -0.82538045129325277 -0.95029926010083232;1.2340632223438301 -0.17379733186700561 -0.81795154327790864 -1.0042688225152501 -1.0416297119314855 1.0482232735656716 1.1601656026897094 -1.0965053270984124 0.22831512432042644 -0.57774049871096989 -0.4127783263229502 -0.48567462403899814 -0.33222012940824619;1.0810799679447904 -0.16470381915414842 -1.0921288660698998 -0.22168544540589849 1.0223926643566661 -0.31215924537014433 -1.0636697544153988 0.51134297552531904 0.24533676600131965 1.3338603739034463 -0.097225445368145785 1.0347418440034581 -0.66598198623465188;-1.1336601108647961 0.2800092660327459 0.73749227589599797 0.41900834286765931 -0.47152730395601411 0.48404576358988988 -0.48321137516612023 -0.66466907633609118 -2.540625112285511 -0.24613223142131457 1.6146439043310528 0.16593084093445049 0.73884256468654885;0.61684696712685372 0.61360380262234204 -0.032710675865303636 -0.72357027133545349 1.2301937023212628 0.3446033320099105 0.48726686939388353 -0.77253450322452033 1.2718934230129633 1.2049718924163024 -0.34595722170387083 -0.22995902432409138 -0.10532756927140467;-1.9524545100794175 -0.021446690321756397 0.78008899359238437 -1.1446561757971134 -0.36487150151455761 -0.55315288723327649 -0.087807218764811623 0.32246754444848835 -0.90115177366569099 -1.7382058083968752 1.7718883907341232 1.5401096598443385 -0.86281253194383667;1.1940543487704713 0.80734621463030054 -0.42588364526781736 -1.3571520901898002 1.375330838014329 -0.016996260278003661 -0.08408718086783365 -0.63604149619303196 0.31067272516743694 0.8675638478750175 -0.98334648807167757 -0.52256960866146696 0.036293949388176205;1.5049961360690749 0.0094080560674281184 -0.42122234030263028 0.45116792748914697 1.0602810679220975 0.2645557418687185 -1.178413225102259 0.34247559930669436 0.6817680047982172 1.582099266583366 -0.14586761838426326 0.34423206611347162 0.5412043393703948;0.6893110485210302 -1.1122933820333261 0.11174335868897739 0.76485565814658929 -1.3344673696674565 -0.68892273228780398 0.53589660901198866 0.90117557993203734 -1.850973816323527 -0.68706499983055069 -0.39735699002146874 -0.60597637729640708 1.302964602394945;-0.46125023172496959 0.40942350059174865 1.3146458661434643 -1.444015476013661 1.4382312339338015 -0.2380203867502898 -1.4428360960011031 0.47292765257541863 0.49020887902648463 1.9990887401108477 -0.54068439818308811 -0.5169427217405691 -0.19954650040412866;-0.27967118337994634 0.33187751404496069 -0.0030773222406026675 0.10973481458455649 1.4277888076976102 0.14291960271355808 -0.79137698880384877 0.082637956447805652 -1.2014371118336968 0.7098158518187051 -0.16806299515026585 -0.63619727963386075 0.73540400179283472;-1.3910604018017714 -0.68756804857938048 -0.38055082945410318 0.403598085966756 -1.0427603433876944 -0.90540921073971126 -0.73526707844326022 0.59041943132149843 -1.693229659099261 -0.89337244309410202 -0.29832774853848054 0.098277803589025436 -0.080730118448059524;-0.77245522456548066 -0.028066692802397424 1.4114814350356728 -0.67167716276375067 -0.46694287292421421 0.27022241023185312 -0.45575656328222297 -0.65981310137543348 1.675003213914517 0.95090220858960672 0.10942997864828494 1.5849610762526083 -0.81870454568069462];

% Layer 3
b3 = 3.0320430378755332;
LW3_2 = [3.8361442900075109 2.9784317080269496 0.95247223910430356 0.60833503842840142 -1.0926455695938424 -0.57510011972918462 0.83530852724290494 -0.89070478680668308 0.67795352486888638 -0.82770139948855137 3.4704761954834544 -0.96271665161438436 -0.31103411180109264];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.448430493273543;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
