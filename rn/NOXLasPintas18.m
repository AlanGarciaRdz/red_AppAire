function [Y,Xf,Af] = NOXLasPintas18(X,~,~)
%NOXLASPINTAS18 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:08:49.
% 
% [Y] = NOXLasPintas18(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;3.96825396825397;18.6915887850467;0.0175284837861525;0.0546448087431694;0.00640204865556978;0.138888888888889];
x1_step1_ymin = -1;

% Layer 1
b1 = [4.1484045645454266;1.2475284401645219;6.3365670755521979;0.62342183881511171;-1.5823079823732582;-0.74788849243455235;0.97888077969236087;-2.2897611373355153;0.57929022076268444;0.074503661504216806;-1.5943135112675264;0.76589091202829229;1.7477586724952661];
IW1_1 = [-1.8510124366942453 1.8228672545424975 0.62505790390797111 1.659357851733037 0.54766785201995294 -0.86306211078901829 -0.83624536544810735 -0.21466441924726909;-1.1814552403458065 2.3030889185272811 -0.22676253072582642 -0.49640736051664119 0.6462665530849685 0.24055762113022525 0.96564832694861746 -0.24366865370122806;-7.5909690758590394 0.0270395578175101 -0.2823155740272742 -1.2863260611476366 -0.35807003272404436 0.93894779859953503 -0.39202383506972471 -0.63960286133324618;-0.5596433784480922 6.8213828525769911 0.9005643731935713 0.037698724134101004 2.3843272693522506 0.42534068997151264 0.19638865085934262 0.99526937720341502;0.024989824542858263 -0.85643833011694415 -0.00091703639168034395 1.4754986881329115 -0.78631251456018447 -2.0682325980715661 0.88990407616248002 -1.4422742406848561;-0.19203622250608635 -1.2345612767319649 -0.15658429896719619 0.63989574570534236 1.0289883605756107 1.4735941569443607 0.040028013994441752 -0.062829023224645425;0.15950209790994135 -1.0716419080727342 0.032093355916445541 2.2901098414846288 0.56602421306691819 -0.53055257297715963 -0.31674416491760637 0.025584857335041782;0.2934180092511649 -0.52817479565790415 -1.3152792909052926 1.1885061230388116 -1.4662753565314239 -0.35788130826282538 -0.3514920678813 0.95249344780362721;2.0998404947197735 0.68727428800768275 -0.55814957380595009 0.50550068989912256 1.039316785063934 0.40384863144274069 0.83752729839093221 0.015120255802196073;-0.86566382195482783 -3.831518277549629 -0.42124697822645418 -0.32494269911291151 0.34871963180341231 0.52708309783437013 0.19582583771928902 0.17735498719844583;-1.6797018833515003 0.52457857647567108 -0.11502072554005775 -0.72495635055878183 0.11581849110824653 1.2137290485090417 0.096894890837907879 -0.050602586454494267;0.24922795637691059 0.10997335031322818 -1.2720722980562913 -2.033014410360253 -0.50919181158884907 -0.41921549793562651 -2.7070682716176449 -0.52131021991776205;0.058675446454206553 1.8900275052128028 -0.08315915075007102 0.3473611789632956 0.39807046561512072 1.480246598051201 -0.2717284880526451 -0.054675342408035454];

% Layer 2
b2 = [-2.4644894453446868;-2.0751681313185335;-1.4837369652305883;-0.29785420294475723;-0.013278158951341837;0.76025544328158101;-0.58470467287921879;-1.3108022640425063;1.5825234303378066;-1.9402322396767795;-1.8157489023665194;-2.4327206031398143;1.2501407251760781];
LW2_1 = [-0.21144848376593864 -1.5872973839337172 -0.33214518637316059 1.1822705374315046 -0.89819405222115667 -1.1424699213006977 1.5369118843469121 -1.0454872488248557 -1.014568420082661 0.69106419472560365 1.7420200903516905 -1.39525066535794 -0.2369501417410094;0.59301673653477116 0.31233707331804006 2.1348090097941701 -1.6723438201122593 0.53339997002280748 0.23204097625799427 -0.97612648482064668 0.22411241885325117 0.31277359057695331 -0.1707167994651394 -1.0391963474102164 0.4407836328215719 2.3396221604948195;1.0715777857403479 0.8720195464333953 -1.5960313838087563 0.66942567704747447 -1.3891956011931295 0.53026140186784054 0.74711762361264711 -0.18441475493519421 -0.75285458613502199 1.2056805866516467 -0.81424619685168564 -1.9831092780227246 0.95231920343384113;1.665440261654376 0.6499821273621017 -0.52552414256246283 0.2204085348949657 -0.51213198207415811 -1.397754869311848 1.2105272257684536 2.4067411613497001 -0.094000037975198403 0.21623420978702404 1.0368529508714339 0.44955515560672515 -1.7765043732212762;0.092483523479479079 -0.69789320913721364 1.983375804212357 -1.279174019670031 1.2347139626491266 -1.0746899425610454 0.11198098597994877 1.8966898385572428 0.61009427275824479 -0.95419253801208359 1.1765586185376484 -0.39917270458571236 0.29696458538739928;-0.87650348200940231 -1.3742491525648302 -1.5697666187255088 0.056255706731951093 -1.1538473798504607 1.1383066380973232 -0.54063079373048495 0.76368599128387482 -0.69843391686610246 1.133379202488362 0.15190759658738034 0.080123343247044093 -2.243356847300007;2.3020869771084671 -0.15739948808607596 1.0110991541811507 -1.0206802196649718 1.1557950968104032 -0.99883909971878837 0.37522875346559315 2.5986645582131129 0.76651068295301727 -0.88546730429084874 1.4771948108611386 0.27735330376857215 -0.27354605105235902;1.2407190270933532 1.7064316651844991 0.57950783687950491 -0.8916753910544587 1.2686533462430936 -0.68333408459344924 -0.18734917530928633 1.7157020165313848 1.2486309196237431 -0.7983561988651463 2.0632837242472344 -0.44586771800408742 -0.037372930470557938;0.30328938240114162 0.45949089267669097 0.22455191528359691 0.31981388680558476 -1.093774499994318 0.33367060572053164 0.71746281874615847 1.1841734412427738 -0.40602991767948249 -0.085446276921113146 -0.098913603532010105 1.1952312471459767 -1.0497105346447846;0.10639598087968873 0.14876375618237378 -1.8575412636861328 -0.12566587809736415 -0.51603375281499242 -0.1769093416113659 0.056594897297965616 -0.37134961686262552 1.9398525513433464 -0.70342351150684002 -0.95925729511719238 -0.97003012786918852 -1.9795087229487041;-0.239656208260039 0.99017773957743982 1.5505120541145436 0.31167110003885995 0.060253255053738075 -2.4394501221294025 0.71061082814431309 0.66296231702879249 1.6782956091663517 -1.6163326042377688 2.4737696667961329 0.61632898809295333 -2.0729206011679184;0.062864989070995234 1.1408094701433724 0.91120569531483664 0.37995695970274734 -0.58732364085296729 -1.8909869084884827 0.57041831096424955 0.30428525583433863 1.2645388985066437 -1.7029856957198863 2.0314029675984138 0.18269507258381962 -1.7054795540301457;-0.64269169678343774 -0.36015133906609809 0.20722885519986578 -0.60461710044703176 0.34957187937387768 0.25438378199294776 0.19955966718514151 -2.1697069131177544 1.557709543580218 -0.96283595226899077 -0.087296619101936909 0.022345069592963743 0.79588009214681055];

% Layer 3
b3 = -0.4572062448613784;
LW3_2 = [1.7818364450444351 1.383959753027348 -0.22148062366291038 0.77810421204838076 0.91660564175795989 -0.099744040713061116 -1.1188478926706316 0.45782332259691327 2.260036560337904 1.9641689266207401 2.052741377418926 -2.1404920439191364 0.49344501118138162];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
