function [Y,Xf,Af] = NOXLomaDorada11(X,~,~)
%NOXLOMADORADA11 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:08:24.
% 
% [Y] = NOXLomaDorada11(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;4.5045045045045;14.7058823529412;0.00280033604032484;0.0179856115107914;0.0558659217877095];
x1_step1_ymin = -1;

% Layer 1
b1 = [3.4312076246021523;2.5842808216383073;3.3881397701401204;0.077099807286061486;-1.031212866712528;1.6435470098074447;-1.1770194000718985;-0.012706989540486428;0.80542540485530512;-0.75354565172748544;-2.2414733160634883;1.6374419595298719;-2.4037869338117681];
IW1_1 = [1.0999313567197597 -2.2721068446664505 -2.5089835953141693 -0.50319969877002246 -1.2871310267233809 4.1610643787557935 -0.912345416766567;-2.261821473302581 -0.76321366380151578 -1.2238039539518799 0.609987738645412 0.75218504863138513 1.3783934699153588 1.5281236274668701;-3.5029837025568242 -0.3271725596104027 0.084242763271411711 -0.42044950435025319 -0.15771132725735798 -0.881804264967603 -0.91695492830614311;-1.2847676088338646 -0.86336454156637954 -1.3416764222259743 -0.22397903233630281 -0.11893564805034709 0.33633257941922645 0.85382376671152616;-1.5455841949765503 -1.9563843497930393 -0.57629964878520523 -3.2344444150762155 0.91738961081581161 -0.49701103509582417 -0.84834361440685802;1.171648928697139 1.2802777540467971 -0.048498147322244854 2.3533895229121482 -0.69286371983053496 -0.078796697167885399 -0.59134985528967743;-0.86469299308637171 1.7425645984748854 0.4357717279043119 0.30899215444190692 -0.19527661880406108 -0.15707781201782453 -0.52284397835817409;-0.36174299612495825 2.8576590795509711 0.00051913985695672266 -0.38723046256122789 0.11859729466276411 0.48767006633950361 1.0565101403800197;0.17771901285311281 1.8134235711662126 -1.0701426586780218 -0.96072610811086046 0.44719906791772945 0.93790354012441146 2.6030885447074747;0.66797563952408068 1.4669045404642482 -0.23421439459031679 -0.55403730156567865 0.20758850561257483 0.2267486909594828 0.26297129361595634;2.9554528538749985 -1.2352908020874867 -0.24799226614223149 0.10459799621476995 0.17009516003698116 0.79138182075608487 0.7652699701248239;1.1457946970616737 0.038091424308800761 -1.6396976109009231 -1.6615060034154308 0.2605337195990487 -0.033067497491886269 0.1431374681472202;-0.52653248338345382 0.84368476600115716 0.0086509781712434397 -0.051164406874688664 -0.20025778392719085 0.94193171907506779 0.56622563762146028];

% Layer 2
b2 = [2.2146849299020306;-0.84146322370996751;-1.0595388346277756;1.2363128884902481;0.43157138902032421;-1.1205717732686251;0.3702552238432299;-1.2303460139927906;0.42982518861166574;-1.0662247343139977;-0.62051340661715915;1.3331920373176724;1.8001290127019467];
LW2_1 = [0.27418188180705094 -0.060659335011967769 -1.7849512620610548 0.89155919179539489 0.25337514792690546 0.064230265701900213 -0.63466885378406712 -0.85875390635423177 -2.126771926530715 -0.053796749133173519 -0.39292582149071836 0.56352197299698004 -0.30521752746536723;0.45116113023891524 -0.95781339510812313 -2.3776855047229182 -0.17161146349001671 -0.59378963901047654 -0.94289298342931827 -3.1736337580500593 -0.93038650204098305 0.054534572417591423 1.1197831139269665 0.060491150678376321 -0.27352782095899275 0.31519831833586698;0.10233462323006434 -0.98031899819106871 0.57679362440320958 0.40420230899485521 0.91221907242743272 -0.5518791428210148 0.51264047552061887 -1.4793420863516831 -0.53393411477803587 1.2605286868437677 0.27510452244699579 -0.73108357827250092 -0.31742835794582902;0.1339836717078674 -1.0814926792810746 -0.24308649606300561 1.9737573648868245 -1.0720522690479279 0.82868505570396767 1.2546351509343678 -0.074035547999342477 -0.86710811043023905 -0.5787579938093198 0.15248372602064364 0.67003631936638874 0.7598337472718617;-0.4057526072376223 0.055735161405401926 -0.40500017520293863 -0.030727801078400216 0.10541695319198559 1.076237602271767 1.4947188770479634 -0.65789328201629305 -2.31006820496677 2.5239493092678429 0.53217362391936385 0.0074149076305689236 -0.76909712416402742;1.7731194626482887 -0.42603630471902021 0.26092733717358285 0.32540672973162404 -0.1703689022168923 0.19096363781995646 -1.124589084821781 -0.36396393005588473 -0.090018748941840962 -0.67647594429301305 0.23871509800252685 -1.3389411853400823 0.67592119036329767;0.44541012066006219 -1.4298396768586272 0.83539529393796785 1.5640795205566871 -1.104050126875344 0.25197408237327557 1.3970580722215749 -0.66254548455196072 0.21454396119358096 -0.47663647778309753 0.20172263485662204 0.50240111721100278 0.34914802062651312;0.85739627702882226 0.84824133623516074 1.4955238888739086 -0.26787063481802037 -0.38629866406626701 0.43060611088181772 -0.79100567322203297 -0.2660742612016716 -0.46653401158964752 -0.73606161872632447 0.38421011044321962 -1.1417123036582852 1.2958483478140346;-1.7140917553809734 1.925279120560337 3.7315469771474747 -0.068793863767295488 0.67630903917752261 1.2523184922026418 4.2343277345196064 0.54969855539851009 0.25134305152425923 -1.396058814306242 -1.0179215606442205 0.86706459958084747 -1.1350106424713162;-1.518550430950502 0.85363777670364283 0.60099246364440018 -1.5225169147871747 0.096179543936869338 2.1847683704966578 0.70440352489966362 -1.9018368655610367 -0.84138184671227734 1.9411435641367638 -1.1219716366288897 0.39106894605136461 -0.24384130267144333;-0.44746527157872895 -1.0531044154758704 -0.73013558558495439 1.2691632768682559 0.072911529902316072 0.9593055934003798 1.8993884525099936 -0.55309594851245647 -0.53208105807124884 0.3088595504333595 0.37465180904977091 1.2999606128798609 -0.46854984339712114;0.23009073369028368 1.3600424186619731 1.3503872321605523 -0.50111662503446541 -1.6981789929219413 0.17490911427661265 0.29311636721563905 1.2632403258542311 0.67099676964972177 0.095274445109818695 -0.060234064479634267 0.10322585998364701 -0.11990124867390328;1.4505738435137678 -0.011141618952204564 -0.99878002996683013 -0.97750861319853777 -0.67604595610637186 -0.24472038400214199 -1.9921793552666944 -0.69839402816837304 0.49045381165948287 -4.1956618370738044 -2.561902047704987 0.40722513114912329 1.1565705563856392];

% Layer 3
b3 = -0.46551476446357354;
LW3_2 = [1.2498775208348696 2.0179593106081075 -0.92213440543274472 -0.74064084792289764 -1.8696544513575348 -2.2653453777511694 0.96729648420287806 1.3216872726627507 1.3077190136641017 1.0923374931220862 0.78752218500897819 -1.4150129189599796 -0.52382546796873286];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 4.04040404040404;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
