function [Y,Xf,Af] = COMiravalle9(X,~,~)
%COMIRAVALLE9 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 13:56:44.
% 
% [Y] = COMiravalle9(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 8xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.304971027752364;15.3846153846154;0.0208986415882968;0.056980056980057;0.0063552589768033;0.141843971631206];
x1_step1_ymin = -1;

% Layer 1
b1 = [-4.7889602391319741;-5.1302584761462793;0.94514008345991973;-1.65062744384069;0.70339154641411583;-0.27834486269681769;0.83574463126052456;-0.012201032563215343;-2.2149355365174497;2.3065130915298737;3.956793798051903;-1.5500164266458802;2.0735726742506997];
IW1_1 = [2.893787278229095 0.0040869242871510569 0.53587737251545398 -0.66142132891440197 0.64896403714331741 1.065311068456247 -2.479591606437952 0.0018161237185455254;4.7461867500584809 1.3075610848952988 0.27686613684529904 1.0561480340820757 1.4444203159856888 -0.95289378826968707 -1.4942001142094645 -0.1599106194507629;-1.1021124799706137 -1.6003910066507805 0.039002217780083392 -0.33458334161601966 -1.0083592784685071 0.0026732141439424519 -0.13310412491570894 0.31262815697297031;1.4223256228370247 -2.3518894412116436 0.032934503711700154 0.10813197496735696 0.25398460799934852 0.059209819652382624 0.18989503683036862 -0.28516731101327564;-1.4580522832382095 -1.467405835260587 -0.23695023704606646 -0.20311681580006818 0.63753270962260289 -0.4512561995890399 0.19981135909532238 -0.28066787901408186;-2.8895822224922458 1.2928721481130754 0.78060459436458296 -0.85280010408072859 0.81685344441385188 0.19027434854178141 0.062333961098862155 -0.06328691235414427;0.22949976000838873 -1.4252870313998165 -0.20761283621907184 -0.27873836186068518 0.37046983905284764 0.75888185466953428 0.20549859617287242 -0.0050522147541682931;-1.2713657555516791 0.27325223148671801 -0.10479752594772421 0.53611172783825545 0.45233104877870361 2.3933957680077831 -0.050868650093109771 -0.071933840760379189;0.45661591221351833 2.2759429404379534 -0.075459186085827593 -0.1257477244994516 0.25560664857197946 0.028569615962264698 0.18814684896653197 0.024886038014697329;0.80391368198515067 -0.066636425607627836 0.56025297389106976 0.25808965302870368 1.647738716489445 -0.098299190859492416 -0.89961913750434197 0.58209769978345327;3.4738512705523195 0.52726384189422559 0.56823988152376192 -0.25177630488276309 2.75970654695407 3.1402175629197719 -0.71012551993442163 -0.093309100912540563;-0.80881098368869886 -1.4397382248548833 -0.23455117022174543 0.31462163213818933 1.3349444101482237 -0.14825368154286739 0.1399320770788787 -0.041738378896909865;-0.20111535482166873 2.3577677343605767 0.02848154103290701 0.15964716849175814 0.88707111014975826 -1.2162333110306591 0.53869390499069481 -0.034831820612688857];

% Layer 2
b2 = [-2.5512849335923757;2.2066092708219278;1.710516636242184;-2.0595619414819799;-1.7373686226989669;-2.7714764507724183;0.50039598815986031;-1.1488640546402449;1.562825709486275;0.44076294762012019;0.24491088986258824;-1.7167180198283947;-1.135981856433949];
LW2_1 = [-0.0064342358329441303 -0.70430240404954314 -1.740222504636171 -0.91346254194733401 -1.9253252282621289 1.1063456875422544 -1.5490015266358337 0.80932961652087843 2.0131588895559474 -0.038727591565816649 -0.07422341164279854 0.73961243563614187 -0.67839218393498779;1.256356438701149 -4.6991511132950654 -1.6314375737229261 0.046422224446226512 0.7369806054758129 -0.68500956828573945 -1.0346925338925463 -1.9569079441750103 0.56014529439708838 -0.48100531969707749 -0.083356269702117888 -0.52730508114029573 0.75609617024858666;-0.90240968221364859 1.1338143563120235 -2.2477277329940812 -0.58328276225383013 -0.96390038876096262 0.79034346299206193 1.8005882704569687 0.2131035663671752 -4.4439341215207975 -1.2483017653123205 0.76933579924980444 -0.14697935618483346 -1.5753221082897373;-2.0007781281914285 0.67769642038848854 -2.3723143926695798 0.51448484563951458 2.0856528611701979 -2.3395899126787709 0.9265726807852408 -1.6474105572673463 -0.72066008721290553 -0.72900761314904905 1.4077174100238865 -2.5084759689818559 0.43940531194887728;0.6059414122743807 -0.76138430680522495 -0.63639034002628048 2.4851883196303817 -1.4495624791313149 0.44592064623797062 0.85683912599771206 1.3406321117138731 1.31088803983147 0.48757516445154619 0.14231954956286141 -2.8952171401087252 1.4864847933867538;0.40098736156403508 -0.55469596730767257 2.3189799838455301 3.0926772058732945 2.5506992331227356 0.15188359425573614 -1.6122867657803512 -0.77383630192809916 3.3289664911398469 -2.1288837931670246 0.59022665719929179 -0.14003682513593677 0.40116932866696242;-0.6590232141525505 0.72288187296383155 -0.23416332543396534 2.4518238248405146 0.15039960258209403 0.64953684343217255 1.1563610178729218 -0.94516137951096768 -0.76939818492188305 -0.50243958372041253 1.2479589515039005 -1.7068646436047878 0.5612336591371837;-0.26575306937077653 -3.3661054942923605 -2.038643255064077 0.20606426191164251 -0.26938572788221887 -2.9566245682320833 0.37538606114243744 -1.6556433192714199 -0.74212389473273377 -0.72951293917614701 1.0675116355101502 -3.3238944493705476 -0.046309575130990072;-0.59286072957272007 0.7298374651497006 0.59858078594264486 -2.0424518400427827 1.5370775317962428 -0.44266598088961562 -1.1494339223356391 -1.0791654378959368 -1.1935558176835537 -0.4935244479714801 -0.17572531711217215 2.3446764009655148 -1.3473889700957726;0.62220353682353957 -0.49211321777459416 -0.71737478657471543 -1.244008776347922 -1.4378731038378811 -0.086373529719855235 -1.1370747063127868 0.91372943921011918 -0.036954723936398925 -0.35428200475116189 -0.91996910299726853 0.58905241149644316 -1.7687537721824587;0.26440349471099539 -1.931058287548963 -0.16867317440869142 0.99912845935539385 -0.65229228831166775 -0.22473737618484504 1.3452441370182893 -1.3821820363217601 -0.70529431521352093 0.46343081447186646 -0.70994712406110094 -1.5074363394107209 1.2515352140729363;-0.60563425733222198 0.88720603217845462 0.10528388701957442 -0.32593352392580571 -0.48027051654483377 -0.13299418580852451 -0.35677266360145604 0.1727766147934317 -2.5060032073806644 0.11920803474539514 -0.38111551009934852 0.75809035480182441 -0.5444877442578121;1.6361982574576066 -1.8067182734970002 2.7175463294178646 -0.050600766333872976 -2.4840890007807817 2.751016785374004 -1.2574989975570317 1.8785443681274197 0.45390507853332712 0.93033339167897744 -1.4090093407692881 0.29199294283434257 -1.0286043024530411];

% Layer 3
b3 = 1.4326686212609467;
LW3_2 = [0.17846359846592028 5.3886287111209743 -0.52727630891958566 0.56503312467094602 -1.2958521125697129 2.4068686368566947 0.71698943730746167 -0.40099583904362485 -1.3612139572749617 0.52597656980452989 -3.7783599064202633 0.64083663016878289 0.50511830637914479];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.448430493273543;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
