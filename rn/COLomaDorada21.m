function [Y,Xf,Af] = COLomaDorada21(X,~,~)
%COLOMADORADA21 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 13:56:40.
% 
% [Y] = COLomaDorada21(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;17.6991150442478;0.00572573718866304;0.0175284837861525;0.0546448087431694];
x1_step1_ymin = -1;

% Layer 1
b1 = [-3.825588525521749;1.4984478920627242;1.2812824530922853;-1.4241064947063724;0.51848731736797704;0.30315729844557282;-0.20425058434612528;0.59268417564458553;-0.52112568855409214;-7.0281130108262975;-0.28143763163213947;-1.9382255205760761;-2.1898684187575781];
IW1_1 = [2.6369830721977818 -2.7148058306943463 -0.046887907318862374 0.80616295366504842 0.727632992337924 -0.31498096706167711 -1.6871707577545223;1.0765995414401159 -1.1558170346605434 0.45943779154621461 -0.14374465402508341 0.28861552955588676 0.2745368680863996 -1.201297175872678;-1.515529315969238 -0.77013496350164423 -0.0070374365547507048 0.22711903665734956 -0.42829273671093421 0.15222005510882325 0.40108479882554066;2.437420149950543 -0.62755738341334666 0.35117909076489195 -0.76964526307677417 0.20697453404825414 -0.25547588106215291 1.1990355827026968;-0.67546097455470122 1.5450861399151838 0.13308088093846121 -0.09120695748448264 -0.097628098142331268 -0.58175581161031609 0.51082881904606303;-0.38176932622779514 -2.6288768583594897 -0.24631573568361137 -0.094949326552450947 -0.06098641209621259 0.58406772385680505 0.62845752645924924;-1.0206338449414409 -2.6149264877711142 -0.27445895828633698 0.53010918214397229 0.23171264806538772 -1.0421418652816303 0.040006992187993626;1.1966197641515415 1.6144085678618452 -0.95926957234836574 0.84692941480362094 -2.0630283730207326 -0.93945985029146462 -2.7990634189240784;0.90406852332698684 2.1728983011055001 -1.6963284155273191 -1.7300764369451174 -0.57839120453443826 0.62025856534128299 -2.6411562928431946;-9.9165033928716717 0.35286882043994378 -0.235596876469995 -0.87251807845708196 0.64403616349122639 -0.53775042733041178 -0.66320284242184824;-0.78671548358867827 3.7028985322156456 0.12050599838807642 0.11799675824511804 -0.31176413732390867 0.094061791540545642 1.1531357585148769;-0.84278658467783707 -1.7078458873686317 -0.25434626054463683 -1.7135483466508492 0.099722392745258709 -0.12631750091361246 -0.21582842127262553;-1.4589616715689675 1.4108010432381533 0.50025854089658173 0.72510007932345 -0.3201139458727586 -0.67193751374114496 -1.8576889099728686];

% Layer 2
b2 = [1.4997504381911964;1.7247774979367214;1.3366825698741234;-0.37073834536656869;-0.70710390345512308;-0.70747924657991657;-0.17095666773448537;-0.26443970604643191;0.18786944178237025;-1.2376557857746135;0.23148889266687836;0.43559936000923805;-2.6355364435793702];
LW2_1 = [-1.2746942636654748 1.0320790209060242 0.18991802155121354 0.49017557551855523 -1.4300373914934179 0.4617529005933998 -0.26878154296635637 0.27821509415636514 -1.2338098045798369 -0.39522933188412135 1.556076135275678 -0.4643000306445787 -1.1757525678516849;0.42041923345284576 -0.98953544429849483 1.8929258383711409 -1.2656868899435945 1.2833800902090928 -1.1150683446878411 0.17689349078410987 0.68416185830709897 -0.22451037350885988 -1.018556457282084 -1.0248400184389928 0.28069968339683776 -0.055173877801591692;-0.74812661083363774 0.76762886554976884 -0.020052265457804835 -0.34501061815414813 0.41551018889504665 -0.0031119240712963528 0.88563750349918946 -1.8874669155880832 1.3663407813738073 -2.4960753146033081 0.94681023006521448 0.6825585532698133 -0.97449997703183977;0.90699342911700176 -1.0592302465103627 -0.249317328626286 -1.9921653626379379 -3.1652428493163076 -0.13609722355181003 -0.62564527778430334 -1.332319327256309 2.2759153356547412 1.0894708747510802 -0.25650765047657409 0.73983474717936271 -0.77631148526057425;3.4852263864136526 -0.73295858490781107 -2.032271448560993 -0.5859555538334883 1.9991036623478826 2.0098514593975287 -2.829149400577585 1.1299853337294374 -0.55803477427988357 0.21376669854177249 -1.1547250156971876 -0.95526589756748714 0.28461212444945622;0.46139373425212804 -0.61672794838780132 1.1210642342796604 0.34940542494947791 1.4615116409011819 0.55052862819012283 0.64948329330501597 -0.26699699229025836 0.071008452035908692 -0.63486670355666763 -0.6674831186974105 0.24482459677253743 1.3591605991287259;0.28460582870077011 -0.42369524982223999 -0.31996609421276168 0.43312410888644398 2.1387323123229196 0.40484907952077076 0.47174978778072324 -0.095153409302274686 -0.10881651865095121 -0.67289326085264001 -0.65438766224594491 0.80095414569677092 0.7279885788931092;-0.028926670172635314 1.0859022296574778 0.55196780435959925 -0.68762685519736033 -1.5939409213859508 0.87503215815333157 0.3758163893303717 -0.12799862982922033 0.16254712876680061 0.69953449217713204 0.47728862875749412 -2.0597342037722379 0.54436493833568678;-0.032799857619533898 0.38176363559412263 1.3931991121794558 -1.0349944133588171 1.4980796496155213 1.8655882328426869 -0.73780428709343981 0.025819967479494138 -0.0054511235228919437 0.67590641955514319 0.59186556804787582 -0.41245481836593134 -1.6916056140090858;0.5979282338110723 -1.5190413000673015 -1.7396088742664833 1.5084958778280222 -0.26632027602363545 1.3835347489474876 -1.2375410412902075 0.22976472751860919 -0.93670594171995947 -0.18610376943948562 -0.068927104041341974 -0.87771578886357282 -0.10189349839579537;1.1569696926277349 0.27193192473346328 -0.8557163113666677 0.95231391455023984 -1.3048190050573798 0.86715474234841983 -0.33986014309435592 1.9223561185296913 -1.7887760505007375 3.0451583796474009 3.0254983114560412 1.3041830315826446 0.072133521838159465;0.10640571313924319 -1.1839202979009473 -0.63635801702698558 0.59842078403439292 1.3458378063880128 -1.0460119587275616 -0.26775701925519158 -0.0050340679747651225 -0.088521675939889272 -0.86077532108661658 -0.6735857136776785 1.6508000227269892 -0.46125263702801494;0.46360358489395537 0.6154340552999501 0.57129067864664762 0.49942603317944789 0.30997002699711612 0.70263773574618771 0.8134428093318754 -0.016652589949889284 0.043108364552546768 -0.16399512485467529 0.99524082170378725 0.12503632785045782 -0.70990399152477024];

% Layer 3
b3 = 0.70800770803468194;
LW3_2 = [-0.92267837365486427 -1.2136131162843993 0.24713225153098131 0.07839279440297893 2.1670515444894227 -1.7758372005985705 1.557341087857288 1.8665251561526097 3.2785092880340034 -1.3718254665816902 0.39543204011230076 1.7895986248147724 2.0614288730637185];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.448430493273543;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
