function [Y,Xf,Af] = PM10LomaDorada5(X,~,~)
%PM10LOMADORADA5 neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 20-May-2016 14:20:09.
% 
% [Y] = PM10LomaDorada5(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 7xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [1;1;0;0;0;0;0];
x1_step1_gain = [0.0384615384615385;0.0869565217391304;0.290275761973875;3.96825396825397;0.00572573718866304;62.5;0.00462534690101758];
x1_step1_ymin = -1;

% Layer 1
b1 = [-4.7146163843684725;-1.7040525505599713;-0.11205053360716376;0.83053026520344742;0.48187821736240272;1.5806752752401905;0.80694519905997752;0.21853314787160463;-1.911456326998682;-1.390715048440216];
IW1_1 = [5.0941960917909821 0.36335533376861784 -1.0695794874485089 0.56248513406566614 -0.12684498585368048 0.13468422701083294 0.5095754175835987;0.22019285442800876 -1.4677753798491224 0.016587894776658459 -0.3654647114912003 0.36167119905563505 -0.35430444233183117 -1.4395398571787978;0.99182537100652868 -1.0121941628126971 0.046650809066157664 0.070857357233537144 0.13918906070791551 0.16720291211824514 -0.82140097935464096;-0.05944928537317179 -1.7893188346746505 -1.9358288585976295 0.55587118822845871 0.96091572467627506 -0.94926180635127966 0.86078833548242395;-0.20309333567030002 0.33498245858775716 1.1835156909281161 -0.049396567048996393 0.0034606708899018838 0.43467322080926807 -0.99253353198603356;0.43407037999129428 -1.3940011929567449 0.84938568979865847 -1.1033958149452394 0.57988730442494629 0.62737189734340693 1.0408421132687655;-0.019745990875985039 -0.020555488301611975 1.0781027338944735 0.18524108772798159 -0.56607983781040938 0.53711314733848481 0.074062551428552073;1.4377104037511343 0.39616500894813639 0.17012426885090631 -0.20816226507053698 -0.090798640670132005 0.18550300925556243 -0.86910105643208657;0.95462606969873931 -1.6129291554412888 -1.1122072612690284 0.0020642305117073278 -0.75329177056975671 -0.24897031079861398 1.9967222348569813;3.5300929463803348 0.18346672735364766 -3.3629648717733658 2.3899752180270193 -0.026818284470060769 -4.2611657066895043 0.20056972891481023];

% Layer 2
b2 = [-0.54904511513710841;-0.2214727932436511;2.0977128171974835;-2.2153694129479931;-0.20302854566400494;1.4849074486011395;-1.2649897268396451;0.34973029930159466;-0.81236764157158836;3.9367590360796396];
LW2_1 = [5.8701636567891855 1.0358380942841121 -1.3809077063255228 -1.1751247172119565 1.2370862246223826 -0.39377974954566486 -1.5258570323498633 -5.4295042792042869 -5.3116700798580228 2.253517232402575;0.11914342125656682 -2.100676253840517 -3.822680943626553 0.044236276088941914 -2.1868719337653388 3.3584802659856123 1.7984143847451692 -4.3755975124479711 -0.4085865967614194 2.5425205475248598;-1.4684324313743748 -0.68386772818788111 -0.94103261548885597 0.50519870998962413 2.2429261976332913 0.67793845899574334 -1.9064068161325014 -0.47914172140038319 0.51440901417676266 0.066519380663655148;-0.042501705212534359 -1.2990194213559927 2.4131509358773493 -0.86420341825839009 -1.8350683251358608 -1.3544765838117059 1.4742900748227925 2.613690259625872 1.4953313705356497 -0.63486326597308596;0.92653084059096691 -0.45763242068979926 1.0348490817896205 -0.37997431242816049 -1.0765392305558306 -0.52257501353989844 1.0960919888533018 1.3264091434955048 0.77488414052151389 -0.85405319873570118;-3.9045317736820526 -0.53360821366576872 0.043331934666672567 -0.63922553320942044 -0.80645321622561994 0.32989886688965175 -0.21371795982884317 1.238432904637643 -0.29572192502975547 -4.9830390986597504;-1.4184328886697224 0.129163225809619 1.7267352869180874 0.080475829743264324 -0.27938526995306323 -0.16625869172129512 0.02276969218514778 -0.91297056758304085 0.48977973190710095 -0.27737960982951287;-0.0043109298257789468 0.99314091230131785 0.17556833595975119 1.6301086887840242 -0.22782289078129886 0.037563891534256412 1.182486250886025 0.094327504466938675 1.0767665416557994 -0.37711250833386978;-0.57571099067613252 1.3088404143039936 1.58704901038903 -0.38793799293287912 -1.3035012502294236 -0.30023405330000802 1.4887675968541789 -1.7497798120620307 0.63531349729924003 -0.1397326470202051;0.40487791168878839 -1.4129578273792363 -1.7872759613420319 1.9344889530002334 2.5062780924338472 0.59851700203919478 -0.61235526357283387 -0.25252605614063595 2.2608673217903661 -1.7085714822297113];

% Layer 3
b3 = 1.1773435365299438;
LW3_2 = [-0.18149660601395975 0.088858255994720414 -2.4570918961179964 0.51465273661256172 -0.88600721268706506 -0.40958715387130357 0.85995836867676256 -0.29676244020870574 -0.61282265716668483 0.32575772589047575];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = 0.00666000666000666;
y1_step1_xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = tansig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Layer 3
    a3 = repmat(b3,1,Q) + LW3_2*a2;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a3,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(3,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end
